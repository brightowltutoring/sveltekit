import{S as Y,i as z,s as G,v as K,a as D,k as $,q as s,e as N,w as Q,c as H,l as v,m as g,r as i,h as f,x as V,b as _,F as r,f as W,I as X,t as Z,y as ee,U as te,n as ae,A as le,J as re}from"../../../chunks/index-c5b536bd.js";import{M as se}from"../../../chunks/MathJax-27990647.js";import{b as ie}from"../../../chunks/index-73204f6a.js";import{q as ne}from"../../../chunks/index-5890d8ae.js";function oe(h,t,n){const a=h.slice();return a[1]=t[n],a[3]=n,a}function ce(h){let t,n,a,d;return{c(){t=$("details"),n=$("summary"),a=s("hidden mathjax (to hide page load flicker)"),d=s(`
	$$I=\\int_0^1 f(x) dx $$
`),this.h()},l(m){t=v(m,"DETAILS",{class:!0});var p=g(t);n=v(p,"SUMMARY",{});var x=g(n);a=i(x,"hidden mathjax (to hide page load flicker)"),x.forEach(f),d=i(p,`
	$$I=\\int_0^1 f(x) dx $$
`),p.forEach(f),this.h()},h(){t.open=!0,ae(t,"class","bg-red-100 disDetails")},m(m,p){_(m,t,p),r(t,n),r(n,a),r(t,d)},p:le,d(m){m&&f(t)}}}function fe(h){let t,n,a,d,m,p,x,j,A,k,o,S,R=2+"",M,U=3+"",E,q,C="{x}",I,F=3+"",J,P,T,y,b,w;t=new se({});let L=Array(100),u=[];for(let e=0;e<L.length;e+=1)u[e]=ce(oe(h,L,e));return{c(){K(t.$$.fragment),n=D(),a=$("p"),d=s("Mathjax is alright in vanilla html/js but flickers when using component frameworks (like this here svelte). Additionally reloads crashes the mathjax. Additionally expressions like "),m=s(h[0]),p=s(` aren't processed properly since svelte views the curly-braces-around-x as it's notation for rendering JS variable "x" in the html. To get it to work have to replace x with curly backticks expression `),x=s(O),j=s(` within the code
`),A=$("br"),k=D(),o=$("span"),S=s("$e^x = \\frac"),M=s(R),E=s(U),q=s(`$
	$$e^x = \\frac`),I=s(C),J=s(F),P=s("$$"),y=D();for(let e=0;e<u.length;e+=1)u[e].c();b=N()},l(e){Q(t.$$.fragment,e),n=H(e),a=v(e,"P",{});var l=g(a);d=i(l,"Mathjax is alright in vanilla html/js but flickers when using component frameworks (like this here svelte). Additionally reloads crashes the mathjax. Additionally expressions like "),m=i(l,h[0]),p=i(l,` aren't processed properly since svelte views the curly-braces-around-x as it's notation for rendering JS variable "x" in the html. To get it to work have to replace x with curly backticks expression `),x=i(l,O),j=i(l,` within the code
`),A=v(l,"BR",{}),l.forEach(f),k=H(e),o=v(e,"SPAN",{});var c=g(o);S=i(c,"$e^x = \\frac"),M=i(c,R),E=i(c,U),q=i(c,`$
	$$e^x = \\frac`),I=i(c,C),J=i(c,F),P=i(c,"$$"),c.forEach(f),y=H(e);for(let B=0;B<u.length;B+=1)u[B].l(e);b=N()},m(e,l){V(t,e,l),_(e,n,l),_(e,a,l),r(a,d),r(a,m),r(a,p),r(a,x),r(a,j),r(a,A),_(e,k,l),_(e,o,l),r(o,S),r(o,M),r(o,E),r(o,q),r(o,I),r(o,J),r(o,P),_(e,y,l);for(let c=0;c<u.length;c+=1)u[c].m(e,l);_(e,b,l),w=!0},p(e,[l]){h=e},i(e){w||(W(t.$$.fragment,e),T||X(()=>{T=re(o,ie,{easing:ne,duration:400}),T.start()}),w=!0)},o(e){Z(t.$$.fragment,e),w=!1},d(e){ee(t,e),e&&f(n),e&&f(a),e&&f(k),e&&f(o),e&&f(y),te(u,e),e&&f(b)}}}let O=" `{x}` ";function he(h){return["\\frac{x}{2}"]}class _e extends Y{constructor(t){super(),z(this,t,he,fe,G,{})}}export{_e as default};
