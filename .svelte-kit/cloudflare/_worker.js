var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __esm = (fn2, res) => function __init() {
  return fn2 && (res = (0, fn2[__getOwnPropNames(fn2)[0]])(fn2 = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name5 in all)
    __defProp(target, name5, { get: all[name5], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};

// .svelte-kit/output/server/chunks/index.js
function p() {
}
function b(t3) {
  return t3();
}
function g() {
  return /* @__PURE__ */ Object.create(null);
}
function y(t3) {
  t3.forEach(b);
}
function S(t3) {
  return typeof t3 == "function";
}
function k(t3, n3) {
  return t3 != t3 ? n3 == n3 : t3 !== n3 || t3 && typeof t3 == "object" || typeof t3 == "function";
}
function x(t3, ...n3) {
  if (t3 == null)
    return p;
  const e7 = t3.subscribe(...n3);
  return e7.unsubscribe ? () => e7.unsubscribe() : e7;
}
function R(t3) {
  let n3;
  return x(t3, (e7) => n3 = e7)(), n3;
}
function T(t3, n3, e7) {
  return t3.set(e7), n3;
}
function $(t3) {
  i.forEach((n3) => {
    n3.c(t3) || (i.delete(n3), n3.f());
  }), i.size !== 0 && m($);
}
function z(t3) {
  let n3;
  return i.size === 0 && m($), { promise: new Promise((e7) => {
    i.add(n3 = { c: t3, f: e7 });
  }), abort() {
    i.delete(n3);
  } };
}
function d(t3) {
  a = t3;
}
function l() {
  if (!a)
    throw new Error("Function called outside component initialization");
  return a;
}
function A(t3) {
  l().$$.on_destroy.push(t3);
}
function C(t3, n3) {
  return l().$$.context.set(t3, n3), n3;
}
function O(t3) {
  return l().$$.context.get(t3);
}
function j(t3, n3 = false) {
  const e7 = String(t3), o4 = n3 ? E : v;
  o4.lastIndex = 0;
  let u = "", r6 = 0;
  for (; o4.test(e7); ) {
    const c4 = o4.lastIndex - 1, s6 = e7[c4];
    u += e7.substring(r6, c4) + (s6 === "&" ? "&amp;" : s6 === '"' ? "&quot;" : "&lt;"), r6 = c4 + 1;
  }
  return u + e7.substring(r6);
}
function D(t3, n3) {
  let e7 = "";
  for (let o4 = 0; o4 < t3.length; o4 += 1)
    e7 += n3(t3[o4], o4);
  return e7;
}
function G(t3, n3) {
  if (!t3 || !t3.$$render)
    throw n3 === "svelte:component" && (n3 += " this={...}"), new Error(`<${n3}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${n3}>.`);
  return t3;
}
function I(t3) {
  function n3(e7, o4, u, r6, c4) {
    const s6 = a, h3 = { on_destroy: f, context: new Map(c4 || (s6 ? s6.$$.context : [])), on_mount: [], before_update: [], after_update: [], callbacks: g() };
    d({ $$: h3 });
    const w4 = t3(e7, o4, u, r6);
    return d(s6), w4;
  }
  return { render: (e7 = {}, { $$slots: o4 = {}, context: u = /* @__PURE__ */ new Map() } = {}) => {
    f = [];
    const r6 = { title: "", head: "", css: /* @__PURE__ */ new Set() }, c4 = n3(r6, e7, {}, o4, u);
    return y(f), { html: c4, css: { code: Array.from(r6.css).map((s6) => s6.code).join(`
`), map: null }, head: r6.title + r6.head };
  }, $$render: n3 };
}
function M(t3, n3, e7) {
  if (n3 == null || e7 && !n3)
    return "";
  const o4 = e7 && n3 === true ? "" : `="${j(n3, true)}"`;
  return ` ${t3}${o4}`;
}
var _, q, m, i, a, E, v, F, f;
var init_chunks = __esm({
  ".svelte-kit/output/server/chunks/index.js"() {
    _ = typeof window < "u";
    q = _ ? () => window.performance.now() : () => Date.now();
    m = _ ? (t3) => requestAnimationFrame(t3) : p;
    i = /* @__PURE__ */ new Set();
    Promise.resolve();
    E = /[&"]/g;
    v = /[&<]/g;
    F = { $$render: () => "" };
  }
});

// .svelte-kit/output/server/chunks/prod-ssr.js
var s;
var init_prod_ssr = __esm({
  ".svelte-kit/output/server/chunks/prod-ssr.js"() {
    s = false;
  }
});

// .svelte-kit/output/server/chunks/index2.js
function z2(n3, i4) {
  return { subscribe: A2(n3, i4).subscribe };
}
function A2(n3, i4 = p) {
  let u;
  const t3 = /* @__PURE__ */ new Set();
  function a4(e7) {
    if (k(n3, e7) && (n3 = e7, u)) {
      const r6 = !o.length;
      for (const s6 of t3)
        s6[1](), o.push(s6, n3);
      if (r6) {
        for (let s6 = 0; s6 < o.length; s6 += 2)
          o[s6][0](o[s6 + 1]);
        o.length = 0;
      }
    }
  }
  function l4(e7) {
    a4(e7(n3));
  }
  function f6(e7, r6 = p) {
    const s6 = [e7, r6];
    return t3.add(s6), t3.size === 1 && (u = i4(a4) || p), e7(n3), () => {
      t3.delete(s6), t3.size === 0 && (u(), u = null);
    };
  }
  return { set: a4, update: l4, subscribe: f6 };
}
function S2(n3, i4, u) {
  const t3 = !Array.isArray(n3), a4 = t3 ? [n3] : n3, l4 = i4.length < 2;
  return z2(u, (f6) => {
    let e7 = false;
    const r6 = [];
    let s6 = 0, d6 = p;
    const g6 = () => {
      if (s6)
        return;
      d6();
      const c4 = i4(t3 ? r6[0] : r6, f6);
      l4 ? f6(c4) : d6 = S(c4) ? c4 : p;
    }, _6 = a4.map((c4, p6) => x(c4, (h3) => {
      r6[p6] = h3, s6 &= ~(1 << p6), e7 && g6();
    }, () => {
      s6 |= 1 << p6;
    }));
    return e7 = true, g6(), function() {
      y(_6), d6();
    };
  });
}
var o;
var init_index2 = __esm({
  ".svelte-kit/output/server/chunks/index2.js"() {
    init_chunks();
    o = [];
  }
});

// node_modules/cookie/index.js
var require_cookie = __commonJS({
  "node_modules/cookie/index.js"(exports2) {
    "use strict";
    exports2.parse = parse2;
    exports2.serialize = serialize;
    var __toString = Object.prototype.toString;
    var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse2(str, options) {
      if (typeof str !== "string") {
        throw new TypeError("argument str must be a string");
      }
      var obj = {};
      var opt = options || {};
      var dec = opt.decode || decode;
      var index16 = 0;
      while (index16 < str.length) {
        var eqIdx = str.indexOf("=", index16);
        if (eqIdx === -1) {
          break;
        }
        var endIdx = str.indexOf(";", index16);
        if (endIdx === -1) {
          endIdx = str.length;
        } else if (endIdx < eqIdx) {
          index16 = str.lastIndexOf(";", eqIdx - 1) + 1;
          continue;
        }
        var key = str.slice(index16, eqIdx).trim();
        if (void 0 === obj[key]) {
          var val = str.slice(eqIdx + 1, endIdx).trim();
          if (val.charCodeAt(0) === 34) {
            val = val.slice(1, -1);
          }
          obj[key] = tryDecode(val, dec);
        }
        index16 = endIdx + 1;
      }
      return obj;
    }
    function serialize(name5, val, options) {
      var opt = options || {};
      var enc = opt.encode || encode;
      if (typeof enc !== "function") {
        throw new TypeError("option encode is invalid");
      }
      if (!fieldContentRegExp.test(name5)) {
        throw new TypeError("argument name is invalid");
      }
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value)) {
        throw new TypeError("argument val is invalid");
      }
      var str = name5 + "=" + value;
      if (null != opt.maxAge) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError("option maxAge is invalid");
        }
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain)) {
          throw new TypeError("option domain is invalid");
        }
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path)) {
          throw new TypeError("option path is invalid");
        }
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        var expires = opt.expires;
        if (!isDate(expires) || isNaN(expires.valueOf())) {
          throw new TypeError("option expires is invalid");
        }
        str += "; Expires=" + expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += "; HttpOnly";
      }
      if (opt.secure) {
        str += "; Secure";
      }
      if (opt.priority) {
        var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
        switch (priority) {
          case "low":
            str += "; Priority=Low";
            break;
          case "medium":
            str += "; Priority=Medium";
            break;
          case "high":
            str += "; Priority=High";
            break;
          default:
            throw new TypeError("option priority is invalid");
        }
      }
      if (opt.sameSite) {
        var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case true:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function decode(str) {
      return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
    }
    function encode(val) {
      return encodeURIComponent(val);
    }
    function isDate(val) {
      return __toString.call(val) === "[object Date]" || val instanceof Date;
    }
    function tryDecode(str, decode2) {
      try {
        return decode2(str);
      } catch (e7) {
        return str;
      }
    }
  }
});

// node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "node_modules/set-cookie-parser/lib/set-cookie.js"(exports2, module2) {
    "use strict";
    var defaultParseOptions = {
      decodeValues: true,
      map: false,
      silent: false
    };
    function isNonEmptyString(str) {
      return typeof str === "string" && !!str.trim();
    }
    function parseString2(setCookieValue, options) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString);
      var nameValuePairStr = parts.shift();
      var parsed = parseNameValuePair(nameValuePairStr);
      var name5 = parsed.name;
      var value = parsed.value;
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      try {
        value = options.decodeValues ? decodeURIComponent(value) : value;
      } catch (e7) {
        console.error(
          "set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.",
          e7
        );
      }
      var cookie = {
        name: name5,
        value
      };
      parts.forEach(function(part) {
        var sides = part.split("=");
        var key = sides.shift().trimLeft().toLowerCase();
        var value2 = sides.join("=");
        if (key === "expires") {
          cookie.expires = new Date(value2);
        } else if (key === "max-age") {
          cookie.maxAge = parseInt(value2, 10);
        } else if (key === "secure") {
          cookie.secure = true;
        } else if (key === "httponly") {
          cookie.httpOnly = true;
        } else if (key === "samesite") {
          cookie.sameSite = value2;
        } else {
          cookie[key] = value2;
        }
      });
      return cookie;
    }
    function parseNameValuePair(nameValuePairStr) {
      var name5 = "";
      var value = "";
      var nameValueArr = nameValuePairStr.split("=");
      if (nameValueArr.length > 1) {
        name5 = nameValueArr.shift();
        value = nameValueArr.join("=");
      } else {
        value = nameValuePairStr;
      }
      return { name: name5, value };
    }
    function parse2(input, options) {
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      if (!input) {
        if (!options.map) {
          return [];
        } else {
          return {};
        }
      }
      if (input.headers && input.headers["set-cookie"]) {
        input = input.headers["set-cookie"];
      } else if (input.headers) {
        var sch = input.headers[Object.keys(input.headers).find(function(key) {
          return key.toLowerCase() === "set-cookie";
        })];
        if (!sch && input.headers.cookie && !options.silent) {
          console.warn(
            "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
          );
        }
        input = sch;
      }
      if (!Array.isArray(input)) {
        input = [input];
      }
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      if (!options.map) {
        return input.filter(isNonEmptyString).map(function(str) {
          return parseString2(str, options);
        });
      } else {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
          var cookie = parseString2(str, options);
          cookies2[cookie.name] = cookie;
          return cookies2;
        }, cookies);
      }
    }
    function splitCookiesString2(cookiesString) {
      if (Array.isArray(cookiesString)) {
        return cookiesString;
      }
      if (typeof cookiesString !== "string") {
        return [];
      }
      var cookiesStrings = [];
      var pos = 0;
      var start;
      var ch;
      var lastComma;
      var nextStart;
      var cookiesSeparatorFound;
      function skipWhitespace() {
        while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
          pos += 1;
        }
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
      }
      while (pos < cookiesString.length) {
        start = pos;
        cookiesSeparatorFound = false;
        while (skipWhitespace()) {
          ch = cookiesString.charAt(pos);
          if (ch === ",") {
            lastComma = pos;
            pos += 1;
            skipWhitespace();
            nextStart = pos;
            while (pos < cookiesString.length && notSpecialChar()) {
              pos += 1;
            }
            if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
              cookiesSeparatorFound = true;
              pos = nextStart;
              cookiesStrings.push(cookiesString.substring(start, lastComma));
              start = pos;
            } else {
              pos = lastComma + 1;
            }
          } else {
            pos += 1;
          }
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) {
          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
        }
      }
      return cookiesStrings;
    }
    module2.exports = parse2;
    module2.exports.parse = parse2;
    module2.exports.parseString = parseString2;
    module2.exports.splitCookiesString = splitCookiesString2;
  }
});

// .svelte-kit/output/server/chunks/hooks.server.js
var hooks_server_exports = {};
__export(hooks_server_exports, {
  handle: () => d2,
  metaTagFixWhenSSR: () => k2,
  redirectOldUrls: () => y2
});
function g2(...r6) {
  const n3 = r6.length;
  return n3 ? ({ event: e7, resolve: a4 }) => {
    return s6(0, e7, {});
    function s6(o4, f6, c4) {
      const m8 = r6[o4];
      return m8({ event: f6, resolve: (u, i4) => {
        const l4 = async ({ html: t3, done: p6 }) => (i4?.transformPageChunk && (t3 = await i4.transformPageChunk({ html: t3, done: p6 }) ?? ""), c4?.transformPageChunk && (t3 = await c4.transformPageChunk({ html: t3, done: p6 }) ?? ""), t3);
        return o4 < n3 - 1 ? s6(o4 + 1, u, { transformPageChunk: l4 }) : a4(u, { transformPageChunk: l4 });
      } });
    }
  } : ({ event: e7, resolve: a4 }) => a4(e7);
}
async function y2({ event: r6, resolve: n3 }) {
  for (const [e7, a4] of h)
    if (r6.url.pathname === `/${e7}`)
      return Response.redirect(`${r6.url.origin}/${a4}`, 301);
  return await n3(r6);
}
async function k2({ event: r6, resolve: n3 }) {
  function e7({ html: a4 }) {
    return a4.replace(/<link\s+rel="canonical"[^>]*>/, "").replace(/<meta\s+name="description"[^>]*>/, "").replace(/<meta\s+name="keywords"[^>]*>/, "").replace(/<meta\s+property="og:url"[^>]*>/, "").replace(/<meta\s+property="og:title"[^>]*>/, "").replace(/<meta\s+property="og:image"[^>]*>/, "").replace(/<meta\s+property="og:description"[^>]*>/, "");
  }
  return await n3(r6, { transformPageChunk: e7 });
}
var h, d2;
var init_hooks_server = __esm({
  ".svelte-kit/output/server/chunks/hooks.server.js"() {
    h = /* @__PURE__ */ new Map([["screenshare", "classroom"]]);
    d2 = g2(k2, y2);
  }
});

// .svelte-kit/output/server/entries/pages/_layout.js
var layout_exports = {};
var init_layout = __esm({
  ".svelte-kit/output/server/entries/pages/_layout.js"() {
  }
});

// .svelte-kit/output/server/chunks/store.js
var p2, I3, m2, V2, C3, b2, k3, H, F2, $2, g3, x2, y3, A4, B2, P2, T2, Y2, d3, L2, _2, q3;
var init_store = __esm({
  ".svelte-kit/output/server/chunks/store.js"() {
    init_index2();
    init_chunks();
    p2 = 20;
    I3 = I((i4, o4, l4, f6) => {
      let c4, s6, n3, a4;
      a4 = x(d3, (v6) => n3 = v6);
      let { navIconClicked: e7 } = o4;
      return o4.navIconClicked === void 0 && l4.navIconClicked && e7 !== void 0 && l4.navIconClicked(e7), c4 = e7 && "fill-rose-300", s6 = n3 ? "white" : "black", a4(), `<svg class="scale-[1.5] origin-top bg-"${M("width", p2, 0)}${M("height", p2, 0)} viewBox="${"0 0 " + j(p2, true) + " " + j(p2, true)}"><path${M("class", c4, 0)}${M("fill", s6, 0)} d="M14 10L8 5v3H1v4h7v3l6-5zm3 7H9v2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2H9v2h8v14z"></path></svg>`;
    });
    m2 = 489.2;
    V2 = I((i4, o4, l4, f6) => {
      let c4, s6, n3, a4;
      a4 = x(d3, (v6) => n3 = v6);
      let { navIconClicked: e7 } = o4;
      return o4.navIconClicked === void 0 && l4.navIconClicked && e7 !== void 0 && l4.navIconClicked(e7), c4 = e7 && "fill-rose-600", s6 = n3 ? "white" : "black", a4(), `

<svg${M("height", m2 / 15, 0)}${M("width", m2 / 15, 0)} viewBox="${"0 0 " + j(m2, true) + " " + j(m2, true)}"><path${M("class", c4, 0)}${M("fill", s6, 0)} d="M177.8,238.1c0,4.5-3.6,8.1-8.1,8.1h-30.4c-4.5,0-8.1-3.6-8.1-8.1v-30.4c0-4.5,3.6-8.1,8.1-8.1h30.4
			c4.5,0,8.1,3.6,8.1,8.1V238.1z M241.3,207.8c0-4.5-3.6-8.1-8.1-8.1h-30.4c-4.5,0-8.1,3.6-8.1,8.1v30.4c0,4.5,3.6,8.1,8.1,8.1h30.4
			c4.5,0,8.1-3.6,8.1-8.1V207.8z M304.8,207.8c0-4.5-3.6-8.1-8.1-8.1h-30.4c-4.5,0-8.1,3.6-8.1,8.1v30.4c0,4.5,3.6,8.1,8.1,8.1h30.4
			c4.5,0,8.1-3.6,8.1-8.1V207.8z M177.8,269.6c0-4.5-3.6-8.1-8.1-8.1h-30.4c-4.5,0-8.1,3.6-8.1,8.1V300c0,4.5,3.6,8.1,8.1,8.1h30.4
			c4.5,0,8.1-3.6,8.1-8.1V269.6z M241.3,269.6c0-4.5-3.6-8.1-8.1-8.1h-30.4c-4.5,0-8.1,3.6-8.1,8.1V300c0,4.5,3.6,8.1,8.1,8.1h30.4
			c4.5,0,8.1-3.6,8.1-8.1V269.6z M296.7,261.5h-30.4c-4.5,0-8.1,3.6-8.1,8.1V300c0,4.5,3.6,8.1,8.1,8.1h30.4c4.5,0,8.1-3.6,8.1-8.1
			v-30.4C304.8,265.1,301.2,261.5,296.7,261.5z M106.1,323.3H75.8c-4.5,0-8.1,3.6-8.1,8.1v30.4c0,4.5,3.6,8.1,8.1,8.1h30.4
			c4.5,0,8.1-3.6,8.1-8.1v-30.4C114.3,326.9,110.6,323.3,106.1,323.3z M114.3,269.6c0-4.5-3.6-8.1-8.1-8.1H75.8
			c-4.5,0-8.1,3.6-8.1,8.1V300c0,4.5,3.6,8.1,8.1,8.1h30.4c4.5,0,8.1-3.6,8.1-8.1V269.6z M233.2,323.3h-30.4c-4.5,0-8.1,3.6-8.1,8.1
			v30.4c0,4.5,3.6,8.1,8.1,8.1h30.4c4.5,0,8.1-3.6,8.1-8.1v-30.4C241.3,326.9,237.7,323.3,233.2,323.3z M169.7,323.3h-30.4
			c-4.5,0-8.1,3.6-8.1,8.1v30.4c0,4.5,3.6,8.1,8.1,8.1h30.4c4.5,0,8.1-3.6,8.1-8.1v-30.4C177.8,326.9,174.2,323.3,169.7,323.3z
			 M360.2,246.3c4.5,0,8.1-3.6,8.1-8.1v-30.4c0-4.5-3.6-8.1-8.1-8.1h-30.4c-4.5,0-8.1,3.6-8.1,8.1v30.4c0,4.5,3.6,8.1,8.1,8.1H360.2
			z M47.7,435.9h230.7c-3.7-11.6-5.8-24-5.9-36.8H47.7c-6,0-10.8-4.9-10.8-10.8V171h361.7v101.1c12.8,0.1,25.2,2,36.8,5.7V94.9
			c0-26.3-21.4-47.7-47.7-47.7h-53.4V17.8c0-9.6-7.8-17.4-17.4-17.4h-27.1c-9.6,0-17.4,7.8-17.4,17.4v29.5H163V17.8
			c0-9.6-7.8-17.4-17.4-17.4h-27.1c-9.6,0-17.4,7.8-17.4,17.4v29.5H47.7C21.4,47.3,0,68.7,0,95v293.3C0,414.5,21.4,435.9,47.7,435.9
			z M489.2,397.7c0,50.3-40.8,91.1-91.1,91.1S307,448,307,397.7s40.8-91.1,91.1-91.1S489.2,347.4,489.2,397.7z M444.1,374.1
			c0-2.9-1.1-5.7-3.2-7.7c-4.3-4.3-11.2-4.3-15.5,0L385.8,406l-15.2-15.2c-4.3-4.3-11.2-4.3-15.5,0c-2.1,2.1-3.2,4.8-3.2,7.7
			c0,2.9,1.1,5.7,3.2,7.7l22.9,22.9c4.3,4.3,11.2,4.3,15.5,0l47.3-47.3C443,379.8,444.1,377,444.1,374.1z"></path></svg>`;
    });
    C3 = 204.376;
    b2 = I((i4, o4, l4, f6) => {
      let c4, s6, n3, a4;
      a4 = x(d3, (v6) => n3 = v6);
      let { navIconClicked: e7 } = o4;
      return o4.navIconClicked === void 0 && l4.navIconClicked && e7 !== void 0 && l4.navIconClicked(e7), c4 = e7 && "fill-rose-300", s6 = n3 ? "white" : "black", a4(), `

<svg${M("height", C3 / 7, 0)}${M("width", C3 / 7, 0)} viewBox="${"0 0 " + j(C3, true) + " " + j(C3, true)}"><path${M("class", c4, 0)}${M("fill", s6, 0)} d="M171.247,204.376c2.484,0,4.5-2.015,4.5-4.5V61.35h-51.744c-7.502,0-13.605-6.107-13.605-13.614V0H33.13
	c-2.485,0-4.5,2.015-4.5,4.5v195.376c0,2.485,2.015,4.5,4.5,4.5H171.247z M74.999,94.627h79.5v10h-79.5V94.627z M74.999,119.627
	h79.5v10h-79.5V119.627z M74.999,144.626h79.5v10h-79.5V144.626z M57.999,92.627c3.865,0,7,3.134,7,7s-3.135,7-7,7s-7-3.134-7-7
	S54.134,92.627,57.999,92.627z M57.999,117.627c3.865,0,7,3.134,7,7s-3.135,7-7,7s-7-3.134-7-7S54.134,117.627,57.999,117.627z
	 M57.999,142.626c3.865,0,7,3.134,7,7c0,3.866-3.135,7-7,7s-7-3.134-7-7C50.999,145.761,54.134,142.626,57.999,142.626z
	 M120.397,47.736V10.396l43.802,40.953h-40.196C122.014,51.35,120.397,49.729,120.397,47.736z"></path></svg>`;
    });
    k3 = 31.886;
    H = I((i4, o4, l4, f6) => {
      let c4, s6, n3, a4;
      a4 = x(d3, (v6) => n3 = v6);
      let { navIconClicked: e7 } = o4;
      return o4.navIconClicked === void 0 && l4.navIconClicked && e7 !== void 0 && l4.navIconClicked(e7), c4 = e7 && "fill-rose-600", s6 = n3 ? "white" : "black", a4(), `<svg${M("width", k3, 0)}${M("height", k3, 0)} viewBox="${"0 0 " + j(k3, true) + " " + j(k3, true)}"><g><path${M("class", c4, 0)}${M("fill", s6, 0)} d="M19.021,1.176V0L15.23,1.176H6.929v28.245h1.54V2.716h1.793L9.086,3.081v26.34l9.935,2.465V2.716h4.395v26.705h1.541V1.176
		H19.021z M16.693,19.229c-0.5,0-0.905-0.492-0.905-1.098s0.405-1.098,0.905-1.098c0.5,0,0.905,0.49,0.905,1.098
		C17.598,18.736,17.193,19.229,16.693,19.229z"></path><g><path d="M19.852,5.718c-1.7,0-3.083,1.384-3.083,3.084c0,1.7,1.383,3.083,3.083,3.083c1.701,0,3.084-1.383,3.084-3.083
			C22.936,7.102,21.553,5.718,19.852,5.718z M19.852,11.606c-1.546,0-2.805-1.258-2.805-2.805c0-1.547,1.258-2.806,2.805-2.806
			c1.548,0,2.806,1.259,2.806,2.806C22.658,10.348,21.4,11.606,19.852,11.606z"></path><path d="M18.902,6.772l-0.113-0.227l-0.125,0.063l0.115,0.228C18.818,6.813,18.861,6.792,18.902,6.772z"></path><path d="M17.599,8.849c0-0.048,0.004-0.094,0.007-0.141h-0.319v0.279h0.319C17.604,8.941,17.599,8.896,17.599,8.849z"></path><path d="M20.049,6.546v-0.32h-0.28v0.32c0.047-0.003,0.094-0.007,0.141-0.007S20.003,6.543,20.049,6.546z"></path><path d="M22.279,7.792l-0.062-0.125l-0.252,0.129c0.021,0.041,0.042,0.083,0.061,0.126L22.279,7.792z"></path><path d="M21.132,6.892c0.04,0.024,0.079,0.051,0.115,0.076l0.141-0.217L21.27,6.676L21.132,6.892z"></path><path d="M17.711,7.485l0.229,0.158c0.025-0.039,0.049-0.078,0.076-0.117L17.791,7.37L17.711,7.485z"></path><path d="M20.861,10.951l0.17,0.339l0.125-0.064l-0.168-0.334C20.945,10.913,20.902,10.932,20.861,10.951z"></path><path d="M21.734,10.261l0.295,0.205l0.078-0.115l-0.289-0.201C21.791,10.188,21.762,10.225,21.734,10.261z"></path><path d="M22.212,8.708c0.003,0.047,0.008,0.093,0.008,0.141c0,0.047-0.005,0.093-0.008,0.139h0.32v-0.28H22.212z"></path><path d="M19.769,11.15v0.32h0.28v-0.32c-0.046,0.003-0.093,0.008-0.14,0.008S19.816,11.153,19.769,11.15z"></path><path d="M18.429,11.085l0.118,0.075l0.204-0.316c-0.041-0.021-0.081-0.046-0.119-0.072L18.429,11.085z"></path><path d="M17.539,10.044l0.063,0.125l0.313-0.159c-0.023-0.04-0.047-0.081-0.067-0.122L17.539,10.044z"></path><polygon points="20.008,6.788 19.811,6.788 19.811,8.71 19.811,8.802 19.811,8.925 18.648,10.201 18.679,10.229 19.812,8.985 
			21.311,8.985 21.311,8.71 20.008,8.71 		"></polygon></g></g></svg>`;
    });
    F2 = A2(false);
    $2 = A2(0);
    g3 = R($2);
    x2 = S2($2, (i4) => (setTimeout(() => {
      g3 = R($2);
    }, 50), i4 - g3));
    y3 = A2(0);
    A4 = S2(y3, (i4) => i4 < 768);
    B2 = A2(false);
    P2 = A2(false);
    T2 = A2(false);
    Y2 = A2({ home: { name: "Home", href: "/", title: "Thinksolve.io \u{1F4AB}", isCurrent: false, meta: `<meta name="description" content="Math and Physics Tutoring for the Modern Age."/>
    <meta property="og:url" content="https://thinksolve.io/">
    ` }, login: { name: "Login", href: "/login", title: "Login \u{1F680}", isCurrent: false, icon: I3, meta: '<meta property="og:url" content="https://thinksolve.io/login">' }, plans: { name: "Plans", href: "/plans", title: "Plans \u{1F4A1}", isCurrent: false, icon: V2, meta: `<meta name="description" content="Choose between Classic or Mock session; book a time and date; pay now or later."/>
    <meta property="og:url" content="https://thinksolve.io/plans">` }, homework: { name: "Homework", href: "/homework", title: "Homework \u{1F4DA}", isCurrent: false, icon: b2, meta: `<meta name="description" content="Click and submit your homework here; we accept all relevant file types for homework submission."/>
    <meta property="og:url" content="https://thinksolve.io/homework">` }, classroom: { name: "Classroom", href: "/classroom", title: "Classroom \u{1F34E}", isCurrent: false, icon: H, meta: `<meta name="description" content="You are on the classroom page! Hit join to enter, our scheduled session will start shortly. "/>
    <meta property="og:url" content="https://thinksolve.io/classroom">` }, faq: { name: "FAQ", href: "/faq", title: "FAQ \u{1F64B}\u200D\u2640\uFE0F", isCurrent: false, meta: '<meta og:url="https://thinksolve.io/faq" />' }, stripe: { name: "Stripe", href: "/stripe", title: "Stripe \u{1F4B0}", isCurrent: false }, physics: { name: "physics", href: "/physics", title: "physics \u{1F680}", isCurrent: false }, math: { name: "math", href: "/math", title: "math", isCurrent: false } });
    d3 = A2(false);
    L2 = "rgb(242,247,250)";
    _2 = "rgb(38, 35, 51)";
    q3 = S2(d3, (i4, o4) => {
      o4(i4 ? _2 : L2);
    });
  }
});

// .svelte-kit/output/server/chunks/LazyMount.js
var w, _3;
var init_LazyMount = __esm({
  ".svelte-kit/output/server/chunks/LazyMount.js"() {
    init_chunks();
    w = I((v6, e7, t3, i4) => {
      let { vanilla: o4 } = e7, { once: l4 } = e7, { onview: a4 = () => console.log("i \u2764\uFE0F slots") } = e7, u, { single: n3 } = e7, { root: d6 = null } = e7, { threshold: r6 = 0 } = e7, { margin: c4 = "0px" } = e7;
      return e7.vanilla === void 0 && t3.vanilla && o4 !== void 0 && t3.vanilla(o4), e7.once === void 0 && t3.once && l4 !== void 0 && t3.once(l4), e7.onview === void 0 && t3.onview && a4 !== void 0 && t3.onview(a4), e7.single === void 0 && t3.single && n3 !== void 0 && t3.single(n3), e7.root === void 0 && t3.root && d6 !== void 0 && t3.root(d6), e7.threshold === void 0 && t3.threshold && r6 !== void 0 && t3.threshold(r6), e7.margin === void 0 && t3.margin && c4 !== void 0 && t3.margin(c4), `


${o4 ? "" : `<div${M("this", u, 0)}>${i4.default ? i4.default({}) : ""}</div>`}`;
    });
    _3 = I((v6, e7, t3, i4) => {
      let { Import: o4 = async () => {
      } } = e7, l4;
      const a4 = async () => l4 = await o4();
      return e7.Import === void 0 && t3.Import && o4 !== void 0 && t3.Import(o4), `


${G(w, "InView").$$render(v6, { onview: a4 }, {}, { default: () => `${l4 ? `${G(l4.default, "Component.default").$$render(v6, Object.assign(e7), {}, {})}` : ""}` })}


`;
    });
  }
});

// .svelte-kit/output/server/chunks/Modal.js
var s2;
var init_Modal = __esm({
  ".svelte-kit/output/server/chunks/Modal.js"() {
    init_chunks();
    s2 = I((u, t3, e7, a4) => {
      let { showModal: o4 = false } = t3, { bgTint: l4 = "bg-[rgba(0,0,0,0.4)]" } = t3, { body: d6 } = t3, f6;
      return t3.showModal === void 0 && e7.showModal && o4 !== void 0 && e7.showModal(o4), t3.bgTint === void 0 && e7.bgTint && l4 !== void 0 && e7.bgTint(l4), t3.body === void 0 && e7.body && d6 !== void 0 && e7.body(d6), `


<button class="${"z-50 fixed top-0 left-0 w-full h-full flex justify-center items-center " + j(o4 ? `${l4} ` : "hidden", true) + " overflow-y-scroll overflow-x-clip"}"${M("this", f6, 0)}>${a4.default ? a4.default({}) : ""}</button>`;
    });
  }
});

// .svelte-kit/output/server/chunks/public.js
var public_exports = {};
__export(public_exports, {
  PUBLIC_FIREBASE_apiKey: () => o2,
  PUBLIC_FIREBASE_appId: () => n,
  PUBLIC_FIREBASE_authDomain: () => s3,
  PUBLIC_FIREBASE_messagingSenderId: () => p3,
  PUBLIC_FIREBASE_projectId: () => t,
  PUBLIC_FIREBASE_storageBucket: () => e,
  PUBLIC_STRIPE_KEY: () => I4,
  PUBLIC_UPLOAD_ENDPOINT: () => _4
});
var o2, s3, t, e, p3, n, I4, _4;
var init_public = __esm({
  ".svelte-kit/output/server/chunks/public.js"() {
    o2 = "AIzaSyDSux33iJAZsssEo2Za7As_eGGEThwXQZo";
    s3 = "thinksolve-app.firebaseapp.com";
    t = "thinksolve-app";
    e = "thinksolve-app.appspot.com";
    p3 = "490986955869";
    n = "1:490986955869:web:433c6f7b31865fed5099b4";
    I4 = "pk_live_jSWXLtQJOoDeKiw3oRF9CuCs00PsrnADWR";
    _4 = "https://us-central1-thinksolve-app.cloudfunctions.net/postToGoogleDriveGCF/formidable";
  }
});

// node_modules/just-extend/index.esm.js
function extend() {
  var args = [].slice.call(arguments);
  var deep = false;
  if (typeof args[0] == "boolean") {
    deep = args.shift();
  }
  var result = args[0];
  if (isUnextendable(result)) {
    throw new Error("extendee must be an object");
  }
  var extenders = args.slice(1);
  var len = extenders.length;
  for (var i4 = 0; i4 < len; i4++) {
    var extender = extenders[i4];
    for (var key in extender) {
      if (Object.prototype.hasOwnProperty.call(extender, key)) {
        var value = extender[key];
        if (deep && isCloneable(value)) {
          var base = Array.isArray(value) ? [] : {};
          result[key] = extend(
            true,
            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key]) ? result[key] : base,
            value
          );
        } else {
          result[key] = value;
        }
      }
    }
  }
  return result;
}
function isCloneable(obj) {
  return Array.isArray(obj) || {}.toString.call(obj) == "[object Object]";
}
function isUnextendable(val) {
  return !val || typeof val != "object" && typeof val != "function";
}
var objectExtend;
var init_index_esm = __esm({
  "node_modules/just-extend/index.esm.js"() {
    objectExtend = extend;
  }
});

// node_modules/dropzone/dist/dropzone.mjs
var dropzone_exports = {};
__export(dropzone_exports, {
  Dropzone: () => $3ed269f2f0fb224b$export$2e2bcd8739ae039,
  default: () => $3ed269f2f0fb224b$export$2e2bcd8739ae039
});
function $parcel$interopDefault(a4) {
  return a4 && a4.__esModule ? a4.default : a4;
}
function $3ed269f2f0fb224b$var$__guard__(value, transform) {
  return typeof value !== "undefined" && value !== null ? transform(value) : void 0;
}
function $3ed269f2f0fb224b$var$__guardMethod__(obj, methodName, transform) {
  if (typeof obj !== "undefined" && obj !== null && typeof obj[methodName] === "function")
    return transform(obj, methodName);
  else
    return void 0;
}
var $4040acfd8584338d$export$2e2bcd8739ae039, $fd6031f88dce2e32$exports, $4ca367182776f80b$var$defaultOptions, $4ca367182776f80b$export$2e2bcd8739ae039, $3ed269f2f0fb224b$export$2e2bcd8739ae039, $3ed269f2f0fb224b$var$without, $3ed269f2f0fb224b$var$camelize, $3ed269f2f0fb224b$var$detectVerticalSquash, $3ed269f2f0fb224b$var$drawImageIOSFix, $3ed269f2f0fb224b$var$ExifRestore;
var init_dropzone = __esm({
  "node_modules/dropzone/dist/dropzone.mjs"() {
    init_index_esm();
    $4040acfd8584338d$export$2e2bcd8739ae039 = class {
      on(event, fn2) {
        this._callbacks = this._callbacks || {};
        if (!this._callbacks[event])
          this._callbacks[event] = [];
        this._callbacks[event].push(fn2);
        return this;
      }
      emit(event, ...args) {
        this._callbacks = this._callbacks || {};
        let callbacks = this._callbacks[event];
        if (callbacks)
          for (let callback of callbacks)
            callback.apply(this, args);
        if (this.element)
          this.element.dispatchEvent(this.makeEvent("dropzone:" + event, {
            args
          }));
        return this;
      }
      makeEvent(eventName, detail) {
        let params = {
          bubbles: true,
          cancelable: true,
          detail
        };
        if (typeof window.CustomEvent === "function")
          return new CustomEvent(eventName, params);
        else {
          var evt = document.createEvent("CustomEvent");
          evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);
          return evt;
        }
      }
      off(event, fn2) {
        if (!this._callbacks || arguments.length === 0) {
          this._callbacks = {};
          return this;
        }
        let callbacks = this._callbacks[event];
        if (!callbacks)
          return this;
        if (arguments.length === 1) {
          delete this._callbacks[event];
          return this;
        }
        for (let i4 = 0; i4 < callbacks.length; i4++) {
          let callback = callbacks[i4];
          if (callback === fn2) {
            callbacks.splice(i4, 1);
            break;
          }
        }
        return this;
      }
    };
    $fd6031f88dce2e32$exports = {};
    $fd6031f88dce2e32$exports = '<div class="dz-preview dz-file-preview">\n  <div class="dz-image"><img data-dz-thumbnail=""></div>\n  <div class="dz-details">\n    <div class="dz-size"><span data-dz-size=""></span></div>\n    <div class="dz-filename"><span data-dz-name=""></span></div>\n  </div>\n  <div class="dz-progress">\n    <span class="dz-upload" data-dz-uploadprogress=""></span>\n  </div>\n  <div class="dz-error-message"><span data-dz-errormessage=""></span></div>\n  <div class="dz-success-mark">\n    <svg width="54" height="54" viewBox="0 0 54 54" fill="white" xmlns="http://www.w3.org/2000/svg">\n      <path d="M10.2071 29.7929L14.2929 25.7071C14.6834 25.3166 15.3166 25.3166 15.7071 25.7071L21.2929 31.2929C21.6834 31.6834 22.3166 31.6834 22.7071 31.2929L38.2929 15.7071C38.6834 15.3166 39.3166 15.3166 39.7071 15.7071L43.7929 19.7929C44.1834 20.1834 44.1834 20.8166 43.7929 21.2071L22.7071 42.2929C22.3166 42.6834 21.6834 42.6834 21.2929 42.2929L10.2071 31.2071C9.81658 30.8166 9.81658 30.1834 10.2071 29.7929Z"></path>\n    </svg>\n  </div>\n  <div class="dz-error-mark">\n    <svg width="54" height="54" viewBox="0 0 54 54" fill="white" xmlns="http://www.w3.org/2000/svg">\n      <path d="M26.2929 20.2929L19.2071 13.2071C18.8166 12.8166 18.1834 12.8166 17.7929 13.2071L13.2071 17.7929C12.8166 18.1834 12.8166 18.8166 13.2071 19.2071L20.2929 26.2929C20.6834 26.6834 20.6834 27.3166 20.2929 27.7071L13.2071 34.7929C12.8166 35.1834 12.8166 35.8166 13.2071 36.2071L17.7929 40.7929C18.1834 41.1834 18.8166 41.1834 19.2071 40.7929L26.2929 33.7071C26.6834 33.3166 27.3166 33.3166 27.7071 33.7071L34.7929 40.7929C35.1834 41.1834 35.8166 41.1834 36.2071 40.7929L40.7929 36.2071C41.1834 35.8166 41.1834 35.1834 40.7929 34.7929L33.7071 27.7071C33.3166 27.3166 33.3166 26.6834 33.7071 26.2929L40.7929 19.2071C41.1834 18.8166 41.1834 18.1834 40.7929 17.7929L36.2071 13.2071C35.8166 12.8166 35.1834 12.8166 34.7929 13.2071L27.7071 20.2929C27.3166 20.6834 26.6834 20.6834 26.2929 20.2929Z"></path>\n    </svg>\n  </div>\n</div>\n';
    $4ca367182776f80b$var$defaultOptions = {
      url: null,
      method: "post",
      withCredentials: false,
      timeout: null,
      parallelUploads: 2,
      uploadMultiple: false,
      chunking: false,
      forceChunking: false,
      chunkSize: 2097152,
      parallelChunkUploads: false,
      retryChunks: false,
      retryChunksLimit: 3,
      maxFilesize: 256,
      paramName: "file",
      createImageThumbnails: true,
      maxThumbnailFilesize: 10,
      thumbnailWidth: 120,
      thumbnailHeight: 120,
      thumbnailMethod: "crop",
      resizeWidth: null,
      resizeHeight: null,
      resizeMimeType: null,
      resizeQuality: 0.8,
      resizeMethod: "contain",
      filesizeBase: 1e3,
      maxFiles: null,
      headers: null,
      defaultHeaders: true,
      clickable: true,
      ignoreHiddenFiles: true,
      acceptedFiles: null,
      acceptedMimeTypes: null,
      autoProcessQueue: true,
      autoQueue: true,
      addRemoveLinks: false,
      previewsContainer: null,
      disablePreviews: false,
      hiddenInputContainer: "body",
      capture: null,
      renameFilename: null,
      renameFile: null,
      forceFallback: false,
      dictDefaultMessage: "Drop files here to upload",
      dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
      dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
      dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
      dictInvalidFileType: "You can't upload files of this type.",
      dictResponseError: "Server responded with {{statusCode}} code.",
      dictCancelUpload: "Cancel upload",
      dictUploadCanceled: "Upload canceled.",
      dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",
      dictRemoveFile: "Remove file",
      dictRemoveFileConfirmation: null,
      dictMaxFilesExceeded: "You can not upload any more files.",
      dictFileSizeUnits: {
        tb: "TB",
        gb: "GB",
        mb: "MB",
        kb: "KB",
        b: "b"
      },
      init() {
      },
      params(files, xhr, chunk) {
        if (chunk)
          return {
            dzuuid: chunk.file.upload.uuid,
            dzchunkindex: chunk.index,
            dztotalfilesize: chunk.file.size,
            dzchunksize: this.options.chunkSize,
            dztotalchunkcount: chunk.file.upload.totalChunkCount,
            dzchunkbyteoffset: chunk.index * this.options.chunkSize
          };
      },
      accept(file16, done) {
        return done();
      },
      chunksUploaded: function(file16, done) {
        done();
      },
      binaryBody: false,
      fallback() {
        let messageElement;
        this.element.className = `${this.element.className} dz-browser-not-supported`;
        for (let child of this.element.getElementsByTagName("div"))
          if (/(^| )dz-message($| )/.test(child.className)) {
            messageElement = child;
            child.className = "dz-message";
            break;
          }
        if (!messageElement) {
          messageElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement('<div class="dz-message"><span></span></div>');
          this.element.appendChild(messageElement);
        }
        let span = messageElement.getElementsByTagName("span")[0];
        if (span) {
          if (span.textContent != null)
            span.textContent = this.options.dictFallbackMessage;
          else if (span.innerText != null)
            span.innerText = this.options.dictFallbackMessage;
        }
        return this.element.appendChild(this.getFallbackForm());
      },
      resize(file16, width, height, resizeMethod) {
        let info = {
          srcX: 0,
          srcY: 0,
          srcWidth: file16.width,
          srcHeight: file16.height
        };
        let srcRatio = file16.width / file16.height;
        if (width == null && height == null) {
          width = info.srcWidth;
          height = info.srcHeight;
        } else if (width == null)
          width = height * srcRatio;
        else if (height == null)
          height = width / srcRatio;
        width = Math.min(width, info.srcWidth);
        height = Math.min(height, info.srcHeight);
        let trgRatio = width / height;
        if (info.srcWidth > width || info.srcHeight > height) {
          if (resizeMethod === "crop") {
            if (srcRatio > trgRatio) {
              info.srcHeight = file16.height;
              info.srcWidth = info.srcHeight * trgRatio;
            } else {
              info.srcWidth = file16.width;
              info.srcHeight = info.srcWidth / trgRatio;
            }
          } else if (resizeMethod === "contain") {
            if (srcRatio > trgRatio)
              height = width / srcRatio;
            else
              width = height * srcRatio;
          } else
            throw new Error(`Unknown resizeMethod '${resizeMethod}'`);
        }
        info.srcX = (file16.width - info.srcWidth) / 2;
        info.srcY = (file16.height - info.srcHeight) / 2;
        info.trgWidth = width;
        info.trgHeight = height;
        return info;
      },
      transformFile(file16, done) {
        if ((this.options.resizeWidth || this.options.resizeHeight) && file16.type.match(/image.*/))
          return this.resizeImage(file16, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, done);
        else
          return done(file16);
      },
      previewTemplate: /* @__PURE__ */ $parcel$interopDefault($fd6031f88dce2e32$exports),
      drop(e7) {
        return this.element.classList.remove("dz-drag-hover");
      },
      dragstart(e7) {
      },
      dragend(e7) {
        return this.element.classList.remove("dz-drag-hover");
      },
      dragenter(e7) {
        return this.element.classList.add("dz-drag-hover");
      },
      dragover(e7) {
        return this.element.classList.add("dz-drag-hover");
      },
      dragleave(e7) {
        return this.element.classList.remove("dz-drag-hover");
      },
      paste(e7) {
      },
      reset() {
        return this.element.classList.remove("dz-started");
      },
      addedfile(file16) {
        if (this.element === this.previewsContainer)
          this.element.classList.add("dz-started");
        if (this.previewsContainer && !this.options.disablePreviews) {
          file16.previewElement = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(this.options.previewTemplate.trim());
          file16.previewTemplate = file16.previewElement;
          this.previewsContainer.appendChild(file16.previewElement);
          for (var node of file16.previewElement.querySelectorAll("[data-dz-name]"))
            node.textContent = file16.name;
          for (node of file16.previewElement.querySelectorAll("[data-dz-size]"))
            node.innerHTML = this.filesize(file16.size);
          if (this.options.addRemoveLinks) {
            file16._removeLink = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<a class="dz-remove" href="javascript:undefined;" data-dz-remove>${this.options.dictRemoveFile}</a>`);
            file16.previewElement.appendChild(file16._removeLink);
          }
          let removeFileEvent = (e7) => {
            e7.preventDefault();
            e7.stopPropagation();
            if (file16.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING)
              return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(
                this.options.dictCancelUploadConfirmation,
                () => this.removeFile(file16)
              );
            else {
              if (this.options.dictRemoveFileConfirmation)
                return $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm(
                  this.options.dictRemoveFileConfirmation,
                  () => this.removeFile(file16)
                );
              else
                return this.removeFile(file16);
            }
          };
          for (let removeLink of file16.previewElement.querySelectorAll("[data-dz-remove]"))
            removeLink.addEventListener("click", removeFileEvent);
        }
      },
      removedfile(file16) {
        if (file16.previewElement != null && file16.previewElement.parentNode != null)
          file16.previewElement.parentNode.removeChild(file16.previewElement);
        return this._updateMaxFilesReachedClass();
      },
      thumbnail(file16, dataUrl) {
        if (file16.previewElement) {
          file16.previewElement.classList.remove("dz-file-preview");
          for (let thumbnailElement of file16.previewElement.querySelectorAll("[data-dz-thumbnail]")) {
            thumbnailElement.alt = file16.name;
            thumbnailElement.src = dataUrl;
          }
          return setTimeout(
            () => file16.previewElement.classList.add("dz-image-preview"),
            1
          );
        }
      },
      error(file16, message) {
        if (file16.previewElement) {
          file16.previewElement.classList.add("dz-error");
          if (typeof message !== "string" && message.error)
            message = message.error;
          for (let node of file16.previewElement.querySelectorAll("[data-dz-errormessage]"))
            node.textContent = message;
        }
      },
      errormultiple() {
      },
      processing(file16) {
        if (file16.previewElement) {
          file16.previewElement.classList.add("dz-processing");
          if (file16._removeLink)
            return file16._removeLink.innerHTML = this.options.dictCancelUpload;
        }
      },
      processingmultiple() {
      },
      uploadprogress(file16, progress, bytesSent) {
        if (file16.previewElement)
          for (let node of file16.previewElement.querySelectorAll("[data-dz-uploadprogress]"))
            node.nodeName === "PROGRESS" ? node.value = progress : node.style.width = `${progress}%`;
      },
      totaluploadprogress() {
      },
      sending() {
      },
      sendingmultiple() {
      },
      success(file16) {
        if (file16.previewElement)
          return file16.previewElement.classList.add("dz-success");
      },
      successmultiple() {
      },
      canceled(file16) {
        return this.emit("error", file16, this.options.dictUploadCanceled);
      },
      canceledmultiple() {
      },
      complete(file16) {
        if (file16._removeLink)
          file16._removeLink.innerHTML = this.options.dictRemoveFile;
        if (file16.previewElement)
          return file16.previewElement.classList.add("dz-complete");
      },
      completemultiple() {
      },
      maxfilesexceeded() {
      },
      maxfilesreached() {
      },
      queuecomplete() {
      },
      addedfiles() {
      }
    };
    $4ca367182776f80b$export$2e2bcd8739ae039 = $4ca367182776f80b$var$defaultOptions;
    $3ed269f2f0fb224b$export$2e2bcd8739ae039 = class extends $4040acfd8584338d$export$2e2bcd8739ae039 {
      static initClass() {
        this.prototype.Emitter = $4040acfd8584338d$export$2e2bcd8739ae039;
        this.prototype.events = [
          "drop",
          "dragstart",
          "dragend",
          "dragenter",
          "dragover",
          "dragleave",
          "addedfile",
          "addedfiles",
          "removedfile",
          "thumbnail",
          "error",
          "errormultiple",
          "processing",
          "processingmultiple",
          "uploadprogress",
          "totaluploadprogress",
          "sending",
          "sendingmultiple",
          "success",
          "successmultiple",
          "canceled",
          "canceledmultiple",
          "complete",
          "completemultiple",
          "reset",
          "maxfilesexceeded",
          "maxfilesreached",
          "queuecomplete"
        ];
        this.prototype._thumbnailQueue = [];
        this.prototype._processingThumbnail = false;
      }
      getAcceptedFiles() {
        return this.files.filter(
          (file16) => file16.accepted
        ).map(
          (file16) => file16
        );
      }
      getRejectedFiles() {
        return this.files.filter(
          (file16) => !file16.accepted
        ).map(
          (file16) => file16
        );
      }
      getFilesWithStatus(status) {
        return this.files.filter(
          (file16) => file16.status === status
        ).map(
          (file16) => file16
        );
      }
      getQueuedFiles() {
        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED);
      }
      getUploadingFiles() {
        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING);
      }
      getAddedFiles() {
        return this.getFilesWithStatus($3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED);
      }
      getActiveFiles() {
        return this.files.filter(
          (file16) => file16.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || file16.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED
        ).map(
          (file16) => file16
        );
      }
      init() {
        if (this.element.tagName === "form")
          this.element.setAttribute("enctype", "multipart/form-data");
        if (this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message"))
          this.element.appendChild($3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<div class="dz-default dz-message"><button class="dz-button" type="button">${this.options.dictDefaultMessage}</button></div>`));
        if (this.clickableElements.length) {
          let setupHiddenFileInput = () => {
            if (this.hiddenFileInput)
              this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
            this.hiddenFileInput = document.createElement("input");
            this.hiddenFileInput.setAttribute("type", "file");
            if (this.options.maxFiles === null || this.options.maxFiles > 1)
              this.hiddenFileInput.setAttribute("multiple", "multiple");
            this.hiddenFileInput.className = "dz-hidden-input";
            if (this.options.acceptedFiles !== null)
              this.hiddenFileInput.setAttribute("accept", this.options.acceptedFiles);
            if (this.options.capture !== null)
              this.hiddenFileInput.setAttribute("capture", this.options.capture);
            this.hiddenFileInput.setAttribute("tabindex", "-1");
            this.hiddenFileInput.style.visibility = "hidden";
            this.hiddenFileInput.style.position = "absolute";
            this.hiddenFileInput.style.top = "0";
            this.hiddenFileInput.style.left = "0";
            this.hiddenFileInput.style.height = "0";
            this.hiddenFileInput.style.width = "0";
            $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.hiddenInputContainer, "hiddenInputContainer").appendChild(this.hiddenFileInput);
            this.hiddenFileInput.addEventListener("change", () => {
              let { files } = this.hiddenFileInput;
              if (files.length)
                for (let file16 of files)
                  this.addFile(file16);
              this.emit("addedfiles", files);
              setupHiddenFileInput();
            });
          };
          setupHiddenFileInput();
        }
        this.URL = window.URL !== null ? window.URL : window.webkitURL;
        for (let eventName of this.events)
          this.on(eventName, this.options[eventName]);
        this.on(
          "uploadprogress",
          () => this.updateTotalUploadProgress()
        );
        this.on(
          "removedfile",
          () => this.updateTotalUploadProgress()
        );
        this.on(
          "canceled",
          (file16) => this.emit("complete", file16)
        );
        this.on("complete", (file16) => {
          if (this.getAddedFiles().length === 0 && this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0)
            return setTimeout(
              () => this.emit("queuecomplete"),
              0
            );
        });
        const containsFiles = function(e7) {
          if (e7.dataTransfer.types)
            for (var i4 = 0; i4 < e7.dataTransfer.types.length; i4++) {
              if (e7.dataTransfer.types[i4] === "Files")
                return true;
            }
          return false;
        };
        let noPropagation = function(e7) {
          if (!containsFiles(e7))
            return;
          e7.stopPropagation();
          if (e7.preventDefault)
            return e7.preventDefault();
          else
            return e7.returnValue = false;
        };
        this.listeners = [
          {
            element: this.element,
            events: {
              dragstart: (e7) => {
                return this.emit("dragstart", e7);
              },
              dragenter: (e7) => {
                noPropagation(e7);
                return this.emit("dragenter", e7);
              },
              dragover: (e7) => {
                let efct;
                try {
                  efct = e7.dataTransfer.effectAllowed;
                } catch (error) {
                }
                e7.dataTransfer.dropEffect = "move" === efct || "linkMove" === efct ? "move" : "copy";
                noPropagation(e7);
                return this.emit("dragover", e7);
              },
              dragleave: (e7) => {
                return this.emit("dragleave", e7);
              },
              drop: (e7) => {
                noPropagation(e7);
                return this.drop(e7);
              },
              dragend: (e7) => {
                return this.emit("dragend", e7);
              }
            }
          }
        ];
        this.clickableElements.forEach((clickableElement) => {
          return this.listeners.push({
            element: clickableElement,
            events: {
              click: (evt) => {
                if (clickableElement !== this.element || evt.target === this.element || $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside(evt.target, this.element.querySelector(".dz-message")))
                  this.hiddenFileInput.click();
                return true;
              }
            }
          });
        });
        this.enable();
        return this.options.init.call(this);
      }
      destroy() {
        this.disable();
        this.removeAllFiles(true);
        if (this.hiddenFileInput != null ? this.hiddenFileInput.parentNode : void 0) {
          this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
          this.hiddenFileInput = null;
        }
        delete this.element.dropzone;
        return $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.splice($3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.indexOf(this), 1);
      }
      updateTotalUploadProgress() {
        let totalUploadProgress;
        let totalBytesSent = 0;
        let totalBytes = 0;
        let activeFiles = this.getActiveFiles();
        if (activeFiles.length) {
          for (let file16 of this.getActiveFiles()) {
            totalBytesSent += file16.upload.bytesSent;
            totalBytes += file16.upload.total;
          }
          totalUploadProgress = 100 * totalBytesSent / totalBytes;
        } else
          totalUploadProgress = 100;
        return this.emit("totaluploadprogress", totalUploadProgress, totalBytes, totalBytesSent);
      }
      _getParamName(n3) {
        if (typeof this.options.paramName === "function")
          return this.options.paramName(n3);
        else
          return `${this.options.paramName}${this.options.uploadMultiple ? `[${n3}]` : ""}`;
      }
      _renameFile(file16) {
        if (typeof this.options.renameFile !== "function")
          return file16.name;
        return this.options.renameFile(file16);
      }
      getFallbackForm() {
        let existingFallback, form;
        if (existingFallback = this.getExistingFallback())
          return existingFallback;
        let fieldsString = '<div class="dz-fallback">';
        if (this.options.dictFallbackText)
          fieldsString += `<p>${this.options.dictFallbackText}</p>`;
        fieldsString += `<input type="file" name="${this._getParamName(0)}" ${this.options.uploadMultiple ? 'multiple="multiple"' : void 0} /><input type="submit" value="Upload!"></div>`;
        let fields = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(fieldsString);
        if (this.element.tagName !== "FORM") {
          form = $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement(`<form action="${this.options.url}" enctype="multipart/form-data" method="${this.options.method}"></form>`);
          form.appendChild(fields);
        } else {
          this.element.setAttribute("enctype", "multipart/form-data");
          this.element.setAttribute("method", this.options.method);
        }
        return form != null ? form : fields;
      }
      getExistingFallback() {
        let getFallback = function(elements) {
          for (let el of elements) {
            if (/(^| )fallback($| )/.test(el.className))
              return el;
          }
        };
        for (let tagName of [
          "div",
          "form"
        ]) {
          var fallback;
          if (fallback = getFallback(this.element.getElementsByTagName(tagName)))
            return fallback;
        }
      }
      setupEventListeners() {
        return this.listeners.map(
          (elementListeners) => (() => {
            let result = [];
            for (let event in elementListeners.events) {
              let listener = elementListeners.events[event];
              result.push(elementListeners.element.addEventListener(event, listener, false));
            }
            return result;
          })()
        );
      }
      removeEventListeners() {
        return this.listeners.map(
          (elementListeners) => (() => {
            let result = [];
            for (let event in elementListeners.events) {
              let listener = elementListeners.events[event];
              result.push(elementListeners.element.removeEventListener(event, listener, false));
            }
            return result;
          })()
        );
      }
      disable() {
        this.clickableElements.forEach(
          (element) => element.classList.remove("dz-clickable")
        );
        this.removeEventListeners();
        this.disabled = true;
        return this.files.map(
          (file16) => this.cancelUpload(file16)
        );
      }
      enable() {
        delete this.disabled;
        this.clickableElements.forEach(
          (element) => element.classList.add("dz-clickable")
        );
        return this.setupEventListeners();
      }
      filesize(size) {
        let selectedSize = 0;
        let selectedUnit = "b";
        if (size > 0) {
          let units = [
            "tb",
            "gb",
            "mb",
            "kb",
            "b"
          ];
          for (let i4 = 0; i4 < units.length; i4++) {
            let unit = units[i4];
            let cutoff = Math.pow(this.options.filesizeBase, 4 - i4) / 10;
            if (size >= cutoff) {
              selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i4);
              selectedUnit = unit;
              break;
            }
          }
          selectedSize = Math.round(10 * selectedSize) / 10;
        }
        return `<strong>${selectedSize}</strong> ${this.options.dictFileSizeUnits[selectedUnit]}`;
      }
      _updateMaxFilesReachedClass() {
        if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {
          if (this.getAcceptedFiles().length === this.options.maxFiles)
            this.emit("maxfilesreached", this.files);
          return this.element.classList.add("dz-max-files-reached");
        } else
          return this.element.classList.remove("dz-max-files-reached");
      }
      drop(e7) {
        if (!e7.dataTransfer)
          return;
        this.emit("drop", e7);
        let files = [];
        for (let i4 = 0; i4 < e7.dataTransfer.files.length; i4++)
          files[i4] = e7.dataTransfer.files[i4];
        if (files.length) {
          let { items } = e7.dataTransfer;
          if (items && items.length && items[0].webkitGetAsEntry != null)
            this._addFilesFromItems(items);
          else
            this.handleFiles(files);
        }
        this.emit("addedfiles", files);
      }
      paste(e7) {
        if ($3ed269f2f0fb224b$var$__guard__(
          e7 != null ? e7.clipboardData : void 0,
          (x5) => x5.items
        ) == null)
          return;
        this.emit("paste", e7);
        let { items } = e7.clipboardData;
        if (items.length)
          return this._addFilesFromItems(items);
      }
      handleFiles(files) {
        for (let file16 of files)
          this.addFile(file16);
      }
      _addFilesFromItems(items) {
        return (() => {
          let result = [];
          for (let item of items) {
            var entry;
            if (item.webkitGetAsEntry != null && (entry = item.webkitGetAsEntry())) {
              if (entry.isFile)
                result.push(this.addFile(item.getAsFile()));
              else if (entry.isDirectory)
                result.push(this._addFilesFromDirectory(entry, entry.name));
              else
                result.push(void 0);
            } else if (item.getAsFile != null) {
              if (item.kind == null || item.kind === "file")
                result.push(this.addFile(item.getAsFile()));
              else
                result.push(void 0);
            } else
              result.push(void 0);
          }
          return result;
        })();
      }
      _addFilesFromDirectory(directory, path2) {
        let dirReader = directory.createReader();
        let errorHandler = (error) => $3ed269f2f0fb224b$var$__guardMethod__(
          console,
          "log",
          (o4) => o4.log(error)
        );
        var readEntries = () => {
          return dirReader.readEntries((entries) => {
            if (entries.length > 0) {
              for (let entry of entries) {
                if (entry.isFile)
                  entry.file((file16) => {
                    if (this.options.ignoreHiddenFiles && file16.name.substring(0, 1) === ".")
                      return;
                    file16.fullPath = `${path2}/${file16.name}`;
                    return this.addFile(file16);
                  });
                else if (entry.isDirectory)
                  this._addFilesFromDirectory(entry, `${path2}/${entry.name}`);
              }
              readEntries();
            }
            return null;
          }, errorHandler);
        };
        return readEntries();
      }
      accept(file16, done) {
        if (this.options.maxFilesize && file16.size > this.options.maxFilesize * 1048576)
          done(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(file16.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize));
        else if (!$3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile(file16, this.options.acceptedFiles))
          done(this.options.dictInvalidFileType);
        else if (this.options.maxFiles != null && this.getAcceptedFiles().length >= this.options.maxFiles) {
          done(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles));
          this.emit("maxfilesexceeded", file16);
        } else
          this.options.accept.call(this, file16, done);
      }
      addFile(file16) {
        file16.upload = {
          uuid: $3ed269f2f0fb224b$export$2e2bcd8739ae039.uuidv4(),
          progress: 0,
          total: file16.size,
          bytesSent: 0,
          filename: this._renameFile(file16)
        };
        this.files.push(file16);
        file16.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED;
        this.emit("addedfile", file16);
        this._enqueueThumbnail(file16);
        this.accept(file16, (error) => {
          if (error) {
            file16.accepted = false;
            this._errorProcessing([
              file16
            ], error);
          } else {
            file16.accepted = true;
            if (this.options.autoQueue)
              this.enqueueFile(file16);
          }
          this._updateMaxFilesReachedClass();
        });
      }
      enqueueFiles(files) {
        for (let file16 of files)
          this.enqueueFile(file16);
        return null;
      }
      enqueueFile(file16) {
        if (file16.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED && file16.accepted === true) {
          file16.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;
          if (this.options.autoProcessQueue)
            return setTimeout(
              () => this.processQueue(),
              0
            );
        } else
          throw new Error("This file can't be queued because it has already been processed or was rejected.");
      }
      _enqueueThumbnail(file16) {
        if (this.options.createImageThumbnails && file16.type.match(/image.*/) && file16.size <= this.options.maxThumbnailFilesize * 1048576) {
          this._thumbnailQueue.push(file16);
          return setTimeout(
            () => this._processThumbnailQueue(),
            0
          );
        }
      }
      _processThumbnailQueue() {
        if (this._processingThumbnail || this._thumbnailQueue.length === 0)
          return;
        this._processingThumbnail = true;
        let file16 = this._thumbnailQueue.shift();
        return this.createThumbnail(file16, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, true, (dataUrl) => {
          this.emit("thumbnail", file16, dataUrl);
          this._processingThumbnail = false;
          return this._processThumbnailQueue();
        });
      }
      removeFile(file16) {
        if (file16.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING)
          this.cancelUpload(file16);
        this.files = $3ed269f2f0fb224b$var$without(this.files, file16);
        this.emit("removedfile", file16);
        if (this.files.length === 0)
          return this.emit("reset");
      }
      removeAllFiles(cancelIfNecessary) {
        if (cancelIfNecessary == null)
          cancelIfNecessary = false;
        for (let file16 of this.files.slice())
          if (file16.status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING || cancelIfNecessary)
            this.removeFile(file16);
        return null;
      }
      resizeImage(file16, width, height, resizeMethod, callback) {
        return this.createThumbnail(file16, width, height, resizeMethod, true, (dataUrl, canvas) => {
          if (canvas == null)
            return callback(file16);
          else {
            let { resizeMimeType } = this.options;
            if (resizeMimeType == null)
              resizeMimeType = file16.type;
            let resizedDataURL = canvas.toDataURL(resizeMimeType, this.options.resizeQuality);
            if (resizeMimeType === "image/jpeg" || resizeMimeType === "image/jpg")
              resizedDataURL = $3ed269f2f0fb224b$var$ExifRestore.restore(file16.dataURL, resizedDataURL);
            return callback($3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob(resizedDataURL));
          }
        });
      }
      createThumbnail(file16, width, height, resizeMethod, fixOrientation, callback) {
        let fileReader = new FileReader();
        fileReader.onload = () => {
          file16.dataURL = fileReader.result;
          if (file16.type === "image/svg+xml") {
            if (callback != null)
              callback(fileReader.result);
            return;
          }
          this.createThumbnailFromUrl(file16, width, height, resizeMethod, fixOrientation, callback);
        };
        fileReader.readAsDataURL(file16);
      }
      displayExistingFile(mockFile, imageUrl, callback, crossOrigin, resizeThumbnail = true) {
        this.emit("addedfile", mockFile);
        this.emit("complete", mockFile);
        if (!resizeThumbnail) {
          this.emit("thumbnail", mockFile, imageUrl);
          if (callback)
            callback();
        } else {
          let onDone = (thumbnail) => {
            this.emit("thumbnail", mockFile, thumbnail);
            if (callback)
              callback();
          };
          mockFile.dataURL = imageUrl;
          this.createThumbnailFromUrl(mockFile, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, this.options.fixOrientation, onDone, crossOrigin);
        }
      }
      createThumbnailFromUrl(file16, width, height, resizeMethod, fixOrientation, callback, crossOrigin) {
        let img = document.createElement("img");
        if (crossOrigin)
          img.crossOrigin = crossOrigin;
        fixOrientation = getComputedStyle(document.body)["imageOrientation"] == "from-image" ? false : fixOrientation;
        img.onload = () => {
          let loadExif = (callback2) => callback2(1);
          if (typeof EXIF !== "undefined" && EXIF !== null && fixOrientation)
            loadExif = (callback2) => EXIF.getData(img, function() {
              return callback2(EXIF.getTag(this, "Orientation"));
            });
          return loadExif((orientation) => {
            file16.width = img.width;
            file16.height = img.height;
            let resizeInfo = this.options.resize.call(this, file16, width, height, resizeMethod);
            let canvas = document.createElement("canvas");
            let ctx = canvas.getContext("2d");
            canvas.width = resizeInfo.trgWidth;
            canvas.height = resizeInfo.trgHeight;
            if (orientation > 4) {
              canvas.width = resizeInfo.trgHeight;
              canvas.height = resizeInfo.trgWidth;
            }
            switch (orientation) {
              case 2:
                ctx.translate(canvas.width, 0);
                ctx.scale(-1, 1);
                break;
              case 3:
                ctx.translate(canvas.width, canvas.height);
                ctx.rotate(Math.PI);
                break;
              case 4:
                ctx.translate(0, canvas.height);
                ctx.scale(1, -1);
                break;
              case 5:
                ctx.rotate(0.5 * Math.PI);
                ctx.scale(1, -1);
                break;
              case 6:
                ctx.rotate(0.5 * Math.PI);
                ctx.translate(0, -canvas.width);
                break;
              case 7:
                ctx.rotate(0.5 * Math.PI);
                ctx.translate(canvas.height, -canvas.width);
                ctx.scale(-1, 1);
                break;
              case 8:
                ctx.rotate(-0.5 * Math.PI);
                ctx.translate(-canvas.height, 0);
                break;
            }
            $3ed269f2f0fb224b$var$drawImageIOSFix(ctx, img, resizeInfo.srcX != null ? resizeInfo.srcX : 0, resizeInfo.srcY != null ? resizeInfo.srcY : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, resizeInfo.trgX != null ? resizeInfo.trgX : 0, resizeInfo.trgY != null ? resizeInfo.trgY : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);
            let thumbnail = canvas.toDataURL("image/png");
            if (callback != null)
              return callback(thumbnail, canvas);
          });
        };
        if (callback != null)
          img.onerror = callback;
        return img.src = file16.dataURL;
      }
      processQueue() {
        let { parallelUploads } = this.options;
        let processingLength = this.getUploadingFiles().length;
        let i4 = processingLength;
        if (processingLength >= parallelUploads)
          return;
        let queuedFiles = this.getQueuedFiles();
        if (!(queuedFiles.length > 0))
          return;
        if (this.options.uploadMultiple)
          return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));
        else
          while (i4 < parallelUploads) {
            if (!queuedFiles.length)
              return;
            this.processFile(queuedFiles.shift());
            i4++;
          }
      }
      processFile(file16) {
        return this.processFiles([
          file16
        ]);
      }
      processFiles(files) {
        for (let file16 of files) {
          file16.processing = true;
          file16.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;
          this.emit("processing", file16);
        }
        if (this.options.uploadMultiple)
          this.emit("processingmultiple", files);
        return this.uploadFiles(files);
      }
      _getFilesWithXhr(xhr) {
        let files;
        return files = this.files.filter(
          (file16) => file16.xhr === xhr
        ).map(
          (file16) => file16
        );
      }
      cancelUpload(file16) {
        if (file16.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING) {
          let groupedFiles = this._getFilesWithXhr(file16.xhr);
          for (let groupedFile of groupedFiles)
            groupedFile.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;
          if (typeof file16.xhr !== "undefined")
            file16.xhr.abort();
          for (let groupedFile1 of groupedFiles)
            this.emit("canceled", groupedFile1);
          if (this.options.uploadMultiple)
            this.emit("canceledmultiple", groupedFiles);
        } else if (file16.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED || file16.status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED) {
          file16.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED;
          this.emit("canceled", file16);
          if (this.options.uploadMultiple)
            this.emit("canceledmultiple", [
              file16
            ]);
        }
        if (this.options.autoProcessQueue)
          return this.processQueue();
      }
      resolveOption(option, ...args) {
        if (typeof option === "function")
          return option.apply(this, args);
        return option;
      }
      uploadFile(file16) {
        return this.uploadFiles([
          file16
        ]);
      }
      uploadFiles(files) {
        this._transformFiles(files, (transformedFiles) => {
          if (this.options.chunking) {
            let transformedFile = transformedFiles[0];
            files[0].upload.chunked = this.options.chunking && (this.options.forceChunking || transformedFile.size > this.options.chunkSize);
            files[0].upload.totalChunkCount = Math.ceil(transformedFile.size / this.options.chunkSize);
          }
          if (files[0].upload.chunked) {
            let file16 = files[0];
            let transformedFile = transformedFiles[0];
            let startedChunkCount = 0;
            file16.upload.chunks = [];
            let handleNextChunk = () => {
              let chunkIndex = 0;
              while (file16.upload.chunks[chunkIndex] !== void 0)
                chunkIndex++;
              if (chunkIndex >= file16.upload.totalChunkCount)
                return;
              startedChunkCount++;
              let start = chunkIndex * this.options.chunkSize;
              let end = Math.min(start + this.options.chunkSize, transformedFile.size);
              let dataBlock = {
                name: this._getParamName(0),
                data: transformedFile.webkitSlice ? transformedFile.webkitSlice(start, end) : transformedFile.slice(start, end),
                filename: file16.upload.filename,
                chunkIndex
              };
              file16.upload.chunks[chunkIndex] = {
                file: file16,
                index: chunkIndex,
                dataBlock,
                status: $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING,
                progress: 0,
                retries: 0
              };
              this._uploadData(files, [
                dataBlock
              ]);
            };
            file16.upload.finishedChunkUpload = (chunk, response) => {
              let allFinished = true;
              chunk.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;
              chunk.dataBlock = null;
              chunk.response = chunk.xhr.responseText;
              chunk.responseHeaders = chunk.xhr.getAllResponseHeaders();
              chunk.xhr = null;
              for (let i4 = 0; i4 < file16.upload.totalChunkCount; i4++) {
                if (file16.upload.chunks[i4] === void 0)
                  return handleNextChunk();
                if (file16.upload.chunks[i4].status !== $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS)
                  allFinished = false;
              }
              if (allFinished)
                this.options.chunksUploaded(file16, () => {
                  this._finished(files, response, null);
                });
            };
            if (this.options.parallelChunkUploads)
              for (let i4 = 0; i4 < file16.upload.totalChunkCount; i4++)
                handleNextChunk();
            else
              handleNextChunk();
          } else {
            let dataBlocks = [];
            for (let i4 = 0; i4 < files.length; i4++)
              dataBlocks[i4] = {
                name: this._getParamName(i4),
                data: transformedFiles[i4],
                filename: files[i4].upload.filename
              };
            this._uploadData(files, dataBlocks);
          }
        });
      }
      _getChunk(file16, xhr) {
        for (let i4 = 0; i4 < file16.upload.totalChunkCount; i4++) {
          if (file16.upload.chunks[i4] !== void 0 && file16.upload.chunks[i4].xhr === xhr)
            return file16.upload.chunks[i4];
        }
      }
      _uploadData(files, dataBlocks) {
        let xhr = new XMLHttpRequest();
        for (let file16 of files)
          file16.xhr = xhr;
        if (files[0].upload.chunked)
          files[0].upload.chunks[dataBlocks[0].chunkIndex].xhr = xhr;
        let method = this.resolveOption(this.options.method, files, dataBlocks);
        let url = this.resolveOption(this.options.url, files, dataBlocks);
        xhr.open(method, url, true);
        let timeout = this.resolveOption(this.options.timeout, files);
        if (timeout)
          xhr.timeout = this.resolveOption(this.options.timeout, files);
        xhr.withCredentials = !!this.options.withCredentials;
        xhr.onload = (e7) => {
          this._finishedUploading(files, xhr, e7);
        };
        xhr.ontimeout = () => {
          this._handleUploadError(files, xhr, `Request timedout after ${this.options.timeout / 1e3} seconds`);
        };
        xhr.onerror = () => {
          this._handleUploadError(files, xhr);
        };
        let progressObj = xhr.upload != null ? xhr.upload : xhr;
        progressObj.onprogress = (e7) => this._updateFilesUploadProgress(files, xhr, e7);
        let headers = this.options.defaultHeaders ? {
          Accept: "application/json",
          "Cache-Control": "no-cache",
          "X-Requested-With": "XMLHttpRequest"
        } : {};
        if (this.options.binaryBody)
          headers["Content-Type"] = files[0].type;
        if (this.options.headers)
          objectExtend(headers, this.options.headers);
        for (let headerName in headers) {
          let headerValue = headers[headerName];
          if (headerValue)
            xhr.setRequestHeader(headerName, headerValue);
        }
        if (this.options.binaryBody) {
          for (let file16 of files)
            this.emit("sending", file16, xhr);
          if (this.options.uploadMultiple)
            this.emit("sendingmultiple", files, xhr);
          this.submitRequest(xhr, null, files);
        } else {
          let formData = new FormData();
          if (this.options.params) {
            let additionalParams = this.options.params;
            if (typeof additionalParams === "function")
              additionalParams = additionalParams.call(this, files, xhr, files[0].upload.chunked ? this._getChunk(files[0], xhr) : null);
            for (let key in additionalParams) {
              let value = additionalParams[key];
              if (Array.isArray(value))
                for (let i4 = 0; i4 < value.length; i4++)
                  formData.append(key, value[i4]);
              else
                formData.append(key, value);
            }
          }
          for (let file16 of files)
            this.emit("sending", file16, xhr, formData);
          if (this.options.uploadMultiple)
            this.emit("sendingmultiple", files, xhr, formData);
          this._addFormElementData(formData);
          for (let i4 = 0; i4 < dataBlocks.length; i4++) {
            let dataBlock = dataBlocks[i4];
            formData.append(dataBlock.name, dataBlock.data, dataBlock.filename);
          }
          this.submitRequest(xhr, formData, files);
        }
      }
      _transformFiles(files, done) {
        let transformedFiles = [];
        let doneCounter = 0;
        for (let i4 = 0; i4 < files.length; i4++)
          this.options.transformFile.call(this, files[i4], (transformedFile) => {
            transformedFiles[i4] = transformedFile;
            if (++doneCounter === files.length)
              done(transformedFiles);
          });
      }
      _addFormElementData(formData) {
        if (this.element.tagName === "FORM")
          for (let input of this.element.querySelectorAll("input, textarea, select, button")) {
            let inputName = input.getAttribute("name");
            let inputType = input.getAttribute("type");
            if (inputType)
              inputType = inputType.toLowerCase();
            if (typeof inputName === "undefined" || inputName === null)
              continue;
            if (input.tagName === "SELECT" && input.hasAttribute("multiple")) {
              for (let option of input.options)
                if (option.selected)
                  formData.append(inputName, option.value);
            } else if (!inputType || inputType !== "checkbox" && inputType !== "radio" || input.checked)
              formData.append(inputName, input.value);
          }
      }
      _updateFilesUploadProgress(files, xhr, e7) {
        if (!files[0].upload.chunked)
          for (let file16 of files) {
            if (file16.upload.total && file16.upload.bytesSent && file16.upload.bytesSent == file16.upload.total)
              continue;
            if (e7) {
              file16.upload.progress = 100 * e7.loaded / e7.total;
              file16.upload.total = e7.total;
              file16.upload.bytesSent = e7.loaded;
            } else {
              file16.upload.progress = 100;
              file16.upload.bytesSent = file16.upload.total;
            }
            this.emit("uploadprogress", file16, file16.upload.progress, file16.upload.bytesSent);
          }
        else {
          let file16 = files[0];
          let chunk = this._getChunk(file16, xhr);
          if (e7) {
            chunk.progress = 100 * e7.loaded / e7.total;
            chunk.total = e7.total;
            chunk.bytesSent = e7.loaded;
          } else {
            chunk.progress = 100;
            chunk.bytesSent = chunk.total;
          }
          file16.upload.progress = 0;
          file16.upload.total = 0;
          file16.upload.bytesSent = 0;
          for (let i4 = 0; i4 < file16.upload.totalChunkCount; i4++)
            if (file16.upload.chunks[i4] && typeof file16.upload.chunks[i4].progress !== "undefined") {
              file16.upload.progress += file16.upload.chunks[i4].progress;
              file16.upload.total += file16.upload.chunks[i4].total;
              file16.upload.bytesSent += file16.upload.chunks[i4].bytesSent;
            }
          file16.upload.progress = file16.upload.progress / file16.upload.totalChunkCount;
          this.emit("uploadprogress", file16, file16.upload.progress, file16.upload.bytesSent);
        }
      }
      _finishedUploading(files, xhr, e7) {
        let response;
        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED)
          return;
        if (xhr.readyState !== 4)
          return;
        if (xhr.responseType !== "arraybuffer" && xhr.responseType !== "blob") {
          response = xhr.responseText;
          if (xhr.getResponseHeader("content-type") && ~xhr.getResponseHeader("content-type").indexOf("application/json"))
            try {
              response = JSON.parse(response);
            } catch (error) {
              e7 = error;
              response = "Invalid JSON response from server.";
            }
        }
        this._updateFilesUploadProgress(files, xhr);
        if (!(200 <= xhr.status && xhr.status < 300))
          this._handleUploadError(files, xhr, response);
        else if (files[0].upload.chunked)
          files[0].upload.finishedChunkUpload(this._getChunk(files[0], xhr), response);
        else
          this._finished(files, response, e7);
      }
      _handleUploadError(files, xhr, response) {
        if (files[0].status === $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED)
          return;
        if (files[0].upload.chunked && this.options.retryChunks) {
          let chunk = this._getChunk(files[0], xhr);
          if (chunk.retries++ < this.options.retryChunksLimit) {
            this._uploadData(files, [
              chunk.dataBlock
            ]);
            return;
          } else
            console.warn("Retried this chunk too often. Giving up.");
        }
        this._errorProcessing(files, response || this.options.dictResponseError.replace("{{statusCode}}", xhr.status), xhr);
      }
      submitRequest(xhr, formData, files) {
        if (xhr.readyState != 1) {
          console.warn("Cannot send this request because the XMLHttpRequest.readyState is not OPENED.");
          return;
        }
        if (this.options.binaryBody) {
          if (files[0].upload.chunked) {
            const chunk = this._getChunk(files[0], xhr);
            xhr.send(chunk.dataBlock.data);
          } else
            xhr.send(files[0]);
        } else
          xhr.send(formData);
      }
      _finished(files, responseText, e7) {
        for (let file16 of files) {
          file16.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS;
          this.emit("success", file16, responseText, e7);
          this.emit("complete", file16);
        }
        if (this.options.uploadMultiple) {
          this.emit("successmultiple", files, responseText, e7);
          this.emit("completemultiple", files);
        }
        if (this.options.autoProcessQueue)
          return this.processQueue();
      }
      _errorProcessing(files, message, xhr) {
        for (let file16 of files) {
          file16.status = $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR;
          this.emit("error", file16, message, xhr);
          this.emit("complete", file16);
        }
        if (this.options.uploadMultiple) {
          this.emit("errormultiple", files, message, xhr);
          this.emit("completemultiple", files);
        }
        if (this.options.autoProcessQueue)
          return this.processQueue();
      }
      static uuidv4() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c4) {
          let r6 = Math.random() * 16 | 0, v6 = c4 === "x" ? r6 : r6 & 3 | 8;
          return v6.toString(16);
        });
      }
      constructor(el, options) {
        super();
        let fallback, left;
        this.element = el;
        this.clickableElements = [];
        this.listeners = [];
        this.files = [];
        if (typeof this.element === "string")
          this.element = document.querySelector(this.element);
        if (!this.element || this.element.nodeType == null)
          throw new Error("Invalid dropzone element.");
        if (this.element.dropzone)
          throw new Error("Dropzone already attached.");
        $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances.push(this);
        this.element.dropzone = this;
        let elementOptions = (left = $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(this.element)) != null ? left : {};
        this.options = objectExtend(true, {}, $4ca367182776f80b$export$2e2bcd8739ae039, elementOptions, options != null ? options : {});
        this.options.previewTemplate = this.options.previewTemplate.replace(/\n*/g, "");
        if (this.options.forceFallback || !$3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported())
          return this.options.fallback.call(this);
        if (this.options.url == null)
          this.options.url = this.element.getAttribute("action");
        if (!this.options.url)
          throw new Error("No URL provided.");
        if (this.options.acceptedFiles && this.options.acceptedMimeTypes)
          throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
        if (this.options.uploadMultiple && this.options.chunking)
          throw new Error("You cannot set both: uploadMultiple and chunking.");
        if (this.options.binaryBody && this.options.uploadMultiple)
          throw new Error("You cannot set both: binaryBody and uploadMultiple.");
        if (this.options.acceptedMimeTypes) {
          this.options.acceptedFiles = this.options.acceptedMimeTypes;
          delete this.options.acceptedMimeTypes;
        }
        if (this.options.renameFilename != null)
          this.options.renameFile = (file16) => this.options.renameFilename.call(this, file16.name, file16);
        if (typeof this.options.method === "string")
          this.options.method = this.options.method.toUpperCase();
        if ((fallback = this.getExistingFallback()) && fallback.parentNode)
          fallback.parentNode.removeChild(fallback);
        if (this.options.previewsContainer !== false) {
          if (this.options.previewsContainer)
            this.previewsContainer = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement(this.options.previewsContainer, "previewsContainer");
          else
            this.previewsContainer = this.element;
        }
        if (this.options.clickable) {
          if (this.options.clickable === true)
            this.clickableElements = [
              this.element
            ];
          else
            this.clickableElements = $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements(this.options.clickable, "clickable");
        }
        this.init();
      }
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.initClass();
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.options = {};
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement = function(element) {
      if (element.getAttribute("id"))
        return $3ed269f2f0fb224b$export$2e2bcd8739ae039.options[$3ed269f2f0fb224b$var$camelize(element.getAttribute("id"))];
      else
        return void 0;
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.instances = [];
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.forElement = function(element) {
      if (typeof element === "string")
        element = document.querySelector(element);
      if ((element != null ? element.dropzone : void 0) == null)
        throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
      return element.dropzone;
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.discover = function() {
      let dropzones;
      if (document.querySelectorAll)
        dropzones = document.querySelectorAll(".dropzone");
      else {
        dropzones = [];
        let checkElements = (elements) => (() => {
          let result = [];
          for (let el of elements)
            if (/(^| )dropzone($| )/.test(el.className))
              result.push(dropzones.push(el));
            else
              result.push(void 0);
          return result;
        })();
        checkElements(document.getElementsByTagName("div"));
        checkElements(document.getElementsByTagName("form"));
      }
      return (() => {
        let result = [];
        for (let dropzone of dropzones)
          if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.optionsForElement(dropzone) !== false)
            result.push(new $3ed269f2f0fb224b$export$2e2bcd8739ae039(dropzone));
          else
            result.push(void 0);
        return result;
      })();
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = [
      /opera.*(Macintosh|Windows Phone).*version\/12/i
    ];
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.isBrowserSupported = function() {
      let capableBrowser = true;
      if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {
        if (!("classList" in document.createElement("a")))
          capableBrowser = false;
        else {
          if ($3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers !== void 0)
            $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers = $3ed269f2f0fb224b$export$2e2bcd8739ae039.blacklistedBrowsers;
          for (let regex of $3ed269f2f0fb224b$export$2e2bcd8739ae039.blockedBrowsers)
            if (regex.test(navigator.userAgent)) {
              capableBrowser = false;
              continue;
            }
        }
      } else
        capableBrowser = false;
      return capableBrowser;
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.dataURItoBlob = function(dataURI) {
      let byteString = atob(dataURI.split(",")[1]);
      let mimeString = dataURI.split(",")[0].split(":")[1].split(";")[0];
      let ab = new ArrayBuffer(byteString.length);
      let ia = new Uint8Array(ab);
      for (let i4 = 0, end = byteString.length, asc = 0 <= end; asc ? i4 <= end : i4 >= end; asc ? i4++ : i4--)
        ia[i4] = byteString.charCodeAt(i4);
      return new Blob([
        ab
      ], {
        type: mimeString
      });
    };
    $3ed269f2f0fb224b$var$without = (list, rejectedItem) => list.filter(
      (item) => item !== rejectedItem
    ).map(
      (item) => item
    );
    $3ed269f2f0fb224b$var$camelize = (str) => str.replace(
      /[\-_](\w)/g,
      (match) => match.charAt(1).toUpperCase()
    );
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.createElement = function(string) {
      let div = document.createElement("div");
      div.innerHTML = string;
      return div.childNodes[0];
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.elementInside = function(element, container) {
      if (element === container)
        return true;
      while (element = element.parentNode) {
        if (element === container)
          return true;
      }
      return false;
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElement = function(el, name5) {
      let element;
      if (typeof el === "string")
        element = document.querySelector(el);
      else if (el.nodeType != null)
        element = el;
      if (element == null)
        throw new Error(`Invalid \`${name5}\` option provided. Please provide a CSS selector or a plain HTML element.`);
      return element;
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.getElements = function(els, name5) {
      let el, elements;
      if (els instanceof Array) {
        elements = [];
        try {
          for (el of els)
            elements.push(this.getElement(el, name5));
        } catch (e7) {
          elements = null;
        }
      } else if (typeof els === "string") {
        elements = [];
        for (el of document.querySelectorAll(els))
          elements.push(el);
      } else if (els.nodeType != null)
        elements = [
          els
        ];
      if (elements == null || !elements.length)
        throw new Error(`Invalid \`${name5}\` option provided. Please provide a CSS selector, a plain HTML element or a list of those.`);
      return elements;
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.confirm = function(question, accepted, rejected) {
      if (window.confirm(question))
        return accepted();
      else if (rejected != null)
        return rejected();
    };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.isValidFile = function(file16, acceptedFiles) {
      if (!acceptedFiles)
        return true;
      acceptedFiles = acceptedFiles.split(",");
      let mimeType = file16.type;
      let baseMimeType = mimeType.replace(/\/.*$/, "");
      for (let validType of acceptedFiles) {
        validType = validType.trim();
        if (validType.charAt(0) === ".") {
          if (file16.name.toLowerCase().indexOf(validType.toLowerCase(), file16.name.length - validType.length) !== -1)
            return true;
        } else if (/\/\*$/.test(validType)) {
          if (baseMimeType === validType.replace(/\/.*$/, ""))
            return true;
        } else {
          if (mimeType === validType)
            return true;
        }
      }
      return false;
    };
    if (typeof jQuery !== "undefined" && jQuery !== null)
      jQuery.fn.dropzone = function(options) {
        return this.each(function() {
          return new $3ed269f2f0fb224b$export$2e2bcd8739ae039(this, options);
        });
      };
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.ADDED = "added";
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED = "queued";
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.ACCEPTED = $3ed269f2f0fb224b$export$2e2bcd8739ae039.QUEUED;
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING = "uploading";
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.PROCESSING = $3ed269f2f0fb224b$export$2e2bcd8739ae039.UPLOADING;
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.CANCELED = "canceled";
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.ERROR = "error";
    $3ed269f2f0fb224b$export$2e2bcd8739ae039.SUCCESS = "success";
    $3ed269f2f0fb224b$var$detectVerticalSquash = function(img) {
      let iw = img.naturalWidth;
      let ih = img.naturalHeight;
      let canvas = document.createElement("canvas");
      canvas.width = 1;
      canvas.height = ih;
      let ctx = canvas.getContext("2d");
      ctx.drawImage(img, 0, 0);
      let { data } = ctx.getImageData(1, 0, 1, ih);
      let sy = 0;
      let ey = ih;
      let py = ih;
      while (py > sy) {
        let alpha = data[(py - 1) * 4 + 3];
        if (alpha === 0)
          ey = py;
        else
          sy = py;
        py = ey + sy >> 1;
      }
      let ratio = py / ih;
      if (ratio === 0)
        return 1;
      else
        return ratio;
    };
    $3ed269f2f0fb224b$var$drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {
      let vertSquashRatio = $3ed269f2f0fb224b$var$detectVerticalSquash(img);
      return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);
    };
    $3ed269f2f0fb224b$var$ExifRestore = class {
      static initClass() {
        this.KEY_STR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      }
      static encode64(input) {
        let output = "";
        let chr1 = void 0;
        let chr2 = void 0;
        let chr3 = "";
        let enc1 = void 0;
        let enc2 = void 0;
        let enc3 = void 0;
        let enc4 = "";
        let i4 = 0;
        while (true) {
          chr1 = input[i4++];
          chr2 = input[i4++];
          chr3 = input[i4++];
          enc1 = chr1 >> 2;
          enc2 = (chr1 & 3) << 4 | chr2 >> 4;
          enc3 = (chr2 & 15) << 2 | chr3 >> 6;
          enc4 = chr3 & 63;
          if (isNaN(chr2))
            enc3 = enc4 = 64;
          else if (isNaN(chr3))
            enc4 = 64;
          output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);
          chr1 = chr2 = chr3 = "";
          enc1 = enc2 = enc3 = enc4 = "";
          if (!(i4 < input.length))
            break;
        }
        return output;
      }
      static restore(origFileBase64, resizedFileBase64) {
        if (!origFileBase64.match("data:image/jpeg;base64,"))
          return resizedFileBase64;
        let rawImage = this.decode64(origFileBase64.replace("data:image/jpeg;base64,", ""));
        let segments = this.slice2Segments(rawImage);
        let image = this.exifManipulation(resizedFileBase64, segments);
        return `data:image/jpeg;base64,${this.encode64(image)}`;
      }
      static exifManipulation(resizedFileBase64, segments) {
        let exifArray = this.getExifArray(segments);
        let newImageArray = this.insertExif(resizedFileBase64, exifArray);
        let aBuffer = new Uint8Array(newImageArray);
        return aBuffer;
      }
      static getExifArray(segments) {
        let seg = void 0;
        let x5 = 0;
        while (x5 < segments.length) {
          seg = segments[x5];
          if (seg[0] === 255 & seg[1] === 225)
            return seg;
          x5++;
        }
        return [];
      }
      static insertExif(resizedFileBase64, exifArray) {
        let imageData = resizedFileBase64.replace("data:image/jpeg;base64,", "");
        let buf = this.decode64(imageData);
        let separatePoint = buf.indexOf(255, 3);
        let mae = buf.slice(0, separatePoint);
        let ato = buf.slice(separatePoint);
        let array = mae;
        array = array.concat(exifArray);
        array = array.concat(ato);
        return array;
      }
      static slice2Segments(rawImageArray) {
        let head = 0;
        let segments = [];
        while (true) {
          var length;
          if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218)
            break;
          if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216)
            head += 2;
          else {
            length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3];
            let endPoint = head + length + 2;
            let seg = rawImageArray.slice(head, endPoint);
            segments.push(seg);
            head = endPoint;
          }
          if (head > rawImageArray.length)
            break;
        }
        return segments;
      }
      static decode64(input) {
        let output = "";
        let chr1 = void 0;
        let chr2 = void 0;
        let chr3 = "";
        let enc1 = void 0;
        let enc2 = void 0;
        let enc3 = void 0;
        let enc4 = "";
        let i4 = 0;
        let buf = [];
        let base64test = /[^A-Za-z0-9\+\/\=]/g;
        if (base64test.exec(input))
          console.warn("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding.");
        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
        while (true) {
          enc1 = this.KEY_STR.indexOf(input.charAt(i4++));
          enc2 = this.KEY_STR.indexOf(input.charAt(i4++));
          enc3 = this.KEY_STR.indexOf(input.charAt(i4++));
          enc4 = this.KEY_STR.indexOf(input.charAt(i4++));
          chr1 = enc1 << 2 | enc2 >> 4;
          chr2 = (enc2 & 15) << 4 | enc3 >> 2;
          chr3 = (enc3 & 3) << 6 | enc4;
          buf.push(chr1);
          if (enc3 !== 64)
            buf.push(chr2);
          if (enc4 !== 64)
            buf.push(chr3);
          chr1 = chr2 = chr3 = "";
          enc1 = enc2 = enc3 = enc4 = "";
          if (!(i4 < input.length))
            break;
        }
        return buf;
      }
    };
    $3ed269f2f0fb224b$var$ExifRestore.initClass();
  }
});

// node_modules/@firebase/util/dist/index.esm2017.js
function getUA() {
  if (typeof navigator !== "undefined" && typeof navigator["userAgent"] === "string") {
    return navigator["userAgent"];
  } else {
    return "";
  }
}
function isMobileCordova() {
  return typeof window !== "undefined" && !!(window["cordova"] || window["phonegap"] || window["PhoneGap"]) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());
}
function isBrowserExtension() {
  const runtime = typeof chrome === "object" ? chrome.runtime : typeof browser === "object" ? browser.runtime : void 0;
  return typeof runtime === "object" && runtime.id !== void 0;
}
function isReactNative() {
  return typeof navigator === "object" && navigator["product"] === "ReactNative";
}
function isIE() {
  const ua = getUA();
  return ua.indexOf("MSIE ") >= 0 || ua.indexOf("Trident/") >= 0;
}
function isIndexedDBAvailable() {
  try {
    return typeof indexedDB === "object";
  } catch (e7) {
    return false;
  }
}
function validateIndexedDBOpenable() {
  return new Promise((resolve, reject) => {
    try {
      let preExist = true;
      const DB_CHECK_NAME = "validate-browser-context-for-indexeddb-analytics-module";
      const request = self.indexedDB.open(DB_CHECK_NAME);
      request.onsuccess = () => {
        request.result.close();
        if (!preExist) {
          self.indexedDB.deleteDatabase(DB_CHECK_NAME);
        }
        resolve(true);
      };
      request.onupgradeneeded = () => {
        preExist = false;
      };
      request.onerror = () => {
        var _a2;
        reject(((_a2 = request.error) === null || _a2 === void 0 ? void 0 : _a2.message) || "");
      };
    } catch (error) {
      reject(error);
    }
  });
}
function getGlobal() {
  if (typeof self !== "undefined") {
    return self;
  }
  if (typeof window !== "undefined") {
    return window;
  }
  if (typeof global !== "undefined") {
    return global;
  }
  throw new Error("Unable to locate global object.");
}
function createMockUserToken(token, projectId) {
  if (token.uid) {
    throw new Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');
  }
  const header = {
    alg: "none",
    type: "JWT"
  };
  const project = projectId || "demo-project";
  const iat = token.iat || 0;
  const sub2 = token.sub || token.user_id;
  if (!sub2) {
    throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
  }
  const payload = Object.assign({
    iss: `https://securetoken.google.com/${project}`,
    aud: project,
    iat,
    exp: iat + 3600,
    auth_time: iat,
    sub: sub2,
    user_id: sub2,
    firebase: {
      sign_in_provider: "custom",
      identities: {}
    }
  }, token);
  const signature = "";
  return [
    base64urlEncodeWithoutPadding(JSON.stringify(header)),
    base64urlEncodeWithoutPadding(JSON.stringify(payload)),
    signature
  ].join(".");
}
function replaceTemplate(template, data) {
  return template.replace(PATTERN, (_6, key) => {
    const value = data[key];
    return value != null ? String(value) : `<${key}?>`;
  });
}
function deepEqual(a4, b6) {
  if (a4 === b6) {
    return true;
  }
  const aKeys = Object.keys(a4);
  const bKeys = Object.keys(b6);
  for (const k6 of aKeys) {
    if (!bKeys.includes(k6)) {
      return false;
    }
    const aProp = a4[k6];
    const bProp = b6[k6];
    if (isObject(aProp) && isObject(bProp)) {
      if (!deepEqual(aProp, bProp)) {
        return false;
      }
    } else if (aProp !== bProp) {
      return false;
    }
  }
  for (const k6 of bKeys) {
    if (!aKeys.includes(k6)) {
      return false;
    }
  }
  return true;
}
function isObject(thing) {
  return thing !== null && typeof thing === "object";
}
function querystring(querystringParams) {
  const params = [];
  for (const [key, value] of Object.entries(querystringParams)) {
    if (Array.isArray(value)) {
      value.forEach((arrayVal) => {
        params.push(encodeURIComponent(key) + "=" + encodeURIComponent(arrayVal));
      });
    } else {
      params.push(encodeURIComponent(key) + "=" + encodeURIComponent(value));
    }
  }
  return params.length ? "&" + params.join("&") : "";
}
function querystringDecode(querystring2) {
  const obj = {};
  const tokens = querystring2.replace(/^\?/, "").split("&");
  tokens.forEach((token) => {
    if (token) {
      const [key, value] = token.split("=");
      obj[decodeURIComponent(key)] = decodeURIComponent(value);
    }
  });
  return obj;
}
function extractQuerystring(url) {
  const queryStart = url.indexOf("?");
  if (!queryStart) {
    return "";
  }
  const fragmentStart = url.indexOf("#", queryStart);
  return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : void 0);
}
function createSubscribe(executor, onNoObservers) {
  const proxy = new ObserverProxy(executor, onNoObservers);
  return proxy.subscribe.bind(proxy);
}
function implementsAnyMethods(obj, methods) {
  if (typeof obj !== "object" || obj === null) {
    return false;
  }
  for (const method of methods) {
    if (method in obj && typeof obj[method] === "function") {
      return true;
    }
  }
  return false;
}
function noop() {
}
function getModularInstance(service) {
  if (service && service._delegate) {
    return service._delegate;
  } else {
    return service;
  }
}
var stringToByteArray$1, byteArrayToString, base64, base64Encode, base64urlEncodeWithoutPadding, base64Decode, getDefaultsFromGlobal, getDefaultsFromEnvVariable, getDefaultsFromCookie, getDefaults, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaultAppConfig, getExperimentalSetting, Deferred, ERROR_NAME, FirebaseError, ErrorFactory, PATTERN, ObserverProxy, MAX_VALUE_MILLIS;
var init_index_esm2017 = __esm({
  "node_modules/@firebase/util/dist/index.esm2017.js"() {
    stringToByteArray$1 = function(str) {
      const out = [];
      let p6 = 0;
      for (let i4 = 0; i4 < str.length; i4++) {
        let c4 = str.charCodeAt(i4);
        if (c4 < 128) {
          out[p6++] = c4;
        } else if (c4 < 2048) {
          out[p6++] = c4 >> 6 | 192;
          out[p6++] = c4 & 63 | 128;
        } else if ((c4 & 64512) === 55296 && i4 + 1 < str.length && (str.charCodeAt(i4 + 1) & 64512) === 56320) {
          c4 = 65536 + ((c4 & 1023) << 10) + (str.charCodeAt(++i4) & 1023);
          out[p6++] = c4 >> 18 | 240;
          out[p6++] = c4 >> 12 & 63 | 128;
          out[p6++] = c4 >> 6 & 63 | 128;
          out[p6++] = c4 & 63 | 128;
        } else {
          out[p6++] = c4 >> 12 | 224;
          out[p6++] = c4 >> 6 & 63 | 128;
          out[p6++] = c4 & 63 | 128;
        }
      }
      return out;
    };
    byteArrayToString = function(bytes) {
      const out = [];
      let pos = 0, c4 = 0;
      while (pos < bytes.length) {
        const c1 = bytes[pos++];
        if (c1 < 128) {
          out[c4++] = String.fromCharCode(c1);
        } else if (c1 > 191 && c1 < 224) {
          const c22 = bytes[pos++];
          out[c4++] = String.fromCharCode((c1 & 31) << 6 | c22 & 63);
        } else if (c1 > 239 && c1 < 365) {
          const c22 = bytes[pos++];
          const c32 = bytes[pos++];
          const c42 = bytes[pos++];
          const u = ((c1 & 7) << 18 | (c22 & 63) << 12 | (c32 & 63) << 6 | c42 & 63) - 65536;
          out[c4++] = String.fromCharCode(55296 + (u >> 10));
          out[c4++] = String.fromCharCode(56320 + (u & 1023));
        } else {
          const c22 = bytes[pos++];
          const c32 = bytes[pos++];
          out[c4++] = String.fromCharCode((c1 & 15) << 12 | (c22 & 63) << 6 | c32 & 63);
        }
      }
      return out.join("");
    };
    base64 = {
      byteToCharMap_: null,
      charToByteMap_: null,
      byteToCharMapWebSafe_: null,
      charToByteMapWebSafe_: null,
      ENCODED_VALS_BASE: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
      get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + "+/=";
      },
      get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + "-_.";
      },
      HAS_NATIVE_SUPPORT: typeof atob === "function",
      encodeByteArray(input, webSafe) {
        if (!Array.isArray(input)) {
          throw Error("encodeByteArray takes an array as a parameter");
        }
        this.init_();
        const byteToCharMap = webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;
        const output = [];
        for (let i4 = 0; i4 < input.length; i4 += 3) {
          const byte1 = input[i4];
          const haveByte2 = i4 + 1 < input.length;
          const byte2 = haveByte2 ? input[i4 + 1] : 0;
          const haveByte3 = i4 + 2 < input.length;
          const byte3 = haveByte3 ? input[i4 + 2] : 0;
          const outByte1 = byte1 >> 2;
          const outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
          let outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
          let outByte4 = byte3 & 63;
          if (!haveByte3) {
            outByte4 = 64;
            if (!haveByte2) {
              outByte3 = 64;
            }
          }
          output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join("");
      },
      encodeString(input, webSafe) {
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
          return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray$1(input), webSafe);
      },
      decodeString(input, webSafe) {
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
          return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
      },
      decodeStringToByteArray(input, webSafe) {
        this.init_();
        const charToByteMap = webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;
        const output = [];
        for (let i4 = 0; i4 < input.length; ) {
          const byte1 = charToByteMap[input.charAt(i4++)];
          const haveByte2 = i4 < input.length;
          const byte2 = haveByte2 ? charToByteMap[input.charAt(i4)] : 0;
          ++i4;
          const haveByte3 = i4 < input.length;
          const byte3 = haveByte3 ? charToByteMap[input.charAt(i4)] : 64;
          ++i4;
          const haveByte4 = i4 < input.length;
          const byte4 = haveByte4 ? charToByteMap[input.charAt(i4)] : 64;
          ++i4;
          if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
            throw Error();
          }
          const outByte1 = byte1 << 2 | byte2 >> 4;
          output.push(outByte1);
          if (byte3 !== 64) {
            const outByte2 = byte2 << 4 & 240 | byte3 >> 2;
            output.push(outByte2);
            if (byte4 !== 64) {
              const outByte3 = byte3 << 6 & 192 | byte4;
              output.push(outByte3);
            }
          }
        }
        return output;
      },
      init_() {
        if (!this.byteToCharMap_) {
          this.byteToCharMap_ = {};
          this.charToByteMap_ = {};
          this.byteToCharMapWebSafe_ = {};
          this.charToByteMapWebSafe_ = {};
          for (let i4 = 0; i4 < this.ENCODED_VALS.length; i4++) {
            this.byteToCharMap_[i4] = this.ENCODED_VALS.charAt(i4);
            this.charToByteMap_[this.byteToCharMap_[i4]] = i4;
            this.byteToCharMapWebSafe_[i4] = this.ENCODED_VALS_WEBSAFE.charAt(i4);
            this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i4]] = i4;
            if (i4 >= this.ENCODED_VALS_BASE.length) {
              this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i4)] = i4;
              this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i4)] = i4;
            }
          }
        }
      }
    };
    base64Encode = function(str) {
      const utf8Bytes = stringToByteArray$1(str);
      return base64.encodeByteArray(utf8Bytes, true);
    };
    base64urlEncodeWithoutPadding = function(str) {
      return base64Encode(str).replace(/\./g, "");
    };
    base64Decode = function(str) {
      try {
        return base64.decodeString(str, true);
      } catch (e7) {
        console.error("base64Decode failed: ", e7);
      }
      return null;
    };
    getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;
    getDefaultsFromEnvVariable = () => {
      if (typeof process === "undefined" || typeof process.env === "undefined") {
        return;
      }
      const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;
      if (defaultsJsonString) {
        return JSON.parse(defaultsJsonString);
      }
    };
    getDefaultsFromCookie = () => {
      if (typeof document === "undefined") {
        return;
      }
      let match;
      try {
        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);
      } catch (e7) {
        return;
      }
      const decoded = match && base64Decode(match[1]);
      return decoded && JSON.parse(decoded);
    };
    getDefaults = () => {
      try {
        return getDefaultsFromGlobal() || getDefaultsFromEnvVariable() || getDefaultsFromCookie();
      } catch (e7) {
        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e7}`);
        return;
      }
    };
    getDefaultEmulatorHost = (productName) => {
      var _a2, _b;
      return (_b = (_a2 = getDefaults()) === null || _a2 === void 0 ? void 0 : _a2.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName];
    };
    getDefaultEmulatorHostnameAndPort = (productName) => {
      const host = getDefaultEmulatorHost(productName);
      if (!host) {
        return void 0;
      }
      const separatorIndex = host.lastIndexOf(":");
      if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {
        throw new Error(`Invalid host ${host} with no separate hostname and port!`);
      }
      const port = parseInt(host.substring(separatorIndex + 1), 10);
      if (host[0] === "[") {
        return [host.substring(1, separatorIndex - 1), port];
      } else {
        return [host.substring(0, separatorIndex), port];
      }
    };
    getDefaultAppConfig = () => {
      var _a2;
      return (_a2 = getDefaults()) === null || _a2 === void 0 ? void 0 : _a2.config;
    };
    getExperimentalSetting = (name5) => {
      var _a2;
      return (_a2 = getDefaults()) === null || _a2 === void 0 ? void 0 : _a2[`_${name5}`];
    };
    Deferred = class {
      constructor() {
        this.reject = () => {
        };
        this.resolve = () => {
        };
        this.promise = new Promise((resolve, reject) => {
          this.resolve = resolve;
          this.reject = reject;
        });
      }
      wrapCallback(callback) {
        return (error, value) => {
          if (error) {
            this.reject(error);
          } else {
            this.resolve(value);
          }
          if (typeof callback === "function") {
            this.promise.catch(() => {
            });
            if (callback.length === 1) {
              callback(error);
            } else {
              callback(error, value);
            }
          }
        };
      }
    };
    ERROR_NAME = "FirebaseError";
    FirebaseError = class extends Error {
      constructor(code, message, customData) {
        super(message);
        this.code = code;
        this.customData = customData;
        this.name = ERROR_NAME;
        Object.setPrototypeOf(this, FirebaseError.prototype);
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, ErrorFactory.prototype.create);
        }
      }
    };
    ErrorFactory = class {
      constructor(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
      }
      create(code, ...data) {
        const customData = data[0] || {};
        const fullCode = `${this.service}/${code}`;
        const template = this.errors[code];
        const message = template ? replaceTemplate(template, customData) : "Error";
        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;
        const error = new FirebaseError(fullCode, fullMessage, customData);
        return error;
      }
    };
    PATTERN = /\{\$([^}]+)}/g;
    ObserverProxy = class {
      constructor(executor, onNoObservers) {
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        this.task.then(() => {
          executor(this);
        }).catch((e7) => {
          this.error(e7);
        });
      }
      next(value) {
        this.forEachObserver((observer) => {
          observer.next(value);
        });
      }
      error(error) {
        this.forEachObserver((observer) => {
          observer.error(error);
        });
        this.close(error);
      }
      complete() {
        this.forEachObserver((observer) => {
          observer.complete();
        });
        this.close();
      }
      subscribe(nextOrObserver, error, complete) {
        let observer;
        if (nextOrObserver === void 0 && error === void 0 && complete === void 0) {
          throw new Error("Missing Observer.");
        }
        if (implementsAnyMethods(nextOrObserver, [
          "next",
          "error",
          "complete"
        ])) {
          observer = nextOrObserver;
        } else {
          observer = {
            next: nextOrObserver,
            error,
            complete
          };
        }
        if (observer.next === void 0) {
          observer.next = noop;
        }
        if (observer.error === void 0) {
          observer.error = noop;
        }
        if (observer.complete === void 0) {
          observer.complete = noop;
        }
        const unsub = this.unsubscribeOne.bind(this, this.observers.length);
        if (this.finalized) {
          this.task.then(() => {
            try {
              if (this.finalError) {
                observer.error(this.finalError);
              } else {
                observer.complete();
              }
            } catch (e7) {
            }
            return;
          });
        }
        this.observers.push(observer);
        return unsub;
      }
      unsubscribeOne(i4) {
        if (this.observers === void 0 || this.observers[i4] === void 0) {
          return;
        }
        delete this.observers[i4];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== void 0) {
          this.onNoObservers(this);
        }
      }
      forEachObserver(fn2) {
        if (this.finalized) {
          return;
        }
        for (let i4 = 0; i4 < this.observers.length; i4++) {
          this.sendOne(i4, fn2);
        }
      }
      sendOne(i4, fn2) {
        this.task.then(() => {
          if (this.observers !== void 0 && this.observers[i4] !== void 0) {
            try {
              fn2(this.observers[i4]);
            } catch (e7) {
              if (typeof console !== "undefined" && console.error) {
                console.error(e7);
              }
            }
          }
        });
      }
      close(err) {
        if (this.finalized) {
          return;
        }
        this.finalized = true;
        if (err !== void 0) {
          this.finalError = err;
        }
        this.task.then(() => {
          this.observers = void 0;
          this.onNoObservers = void 0;
        });
      }
    };
    MAX_VALUE_MILLIS = 4 * 60 * 60 * 1e3;
  }
});

// node_modules/@firebase/component/dist/esm/index.esm2017.js
function normalizeIdentifierForFactory(identifier) {
  return identifier === DEFAULT_ENTRY_NAME ? void 0 : identifier;
}
function isComponentEager(component16) {
  return component16.instantiationMode === "EAGER";
}
var Component, DEFAULT_ENTRY_NAME, Provider, ComponentContainer;
var init_index_esm20172 = __esm({
  "node_modules/@firebase/component/dist/esm/index.esm2017.js"() {
    init_index_esm2017();
    Component = class {
      constructor(name5, instanceFactory, type) {
        this.name = name5;
        this.instanceFactory = instanceFactory;
        this.type = type;
        this.multipleInstances = false;
        this.serviceProps = {};
        this.instantiationMode = "LAZY";
        this.onInstanceCreated = null;
      }
      setInstantiationMode(mode) {
        this.instantiationMode = mode;
        return this;
      }
      setMultipleInstances(multipleInstances) {
        this.multipleInstances = multipleInstances;
        return this;
      }
      setServiceProps(props) {
        this.serviceProps = props;
        return this;
      }
      setInstanceCreatedCallback(callback) {
        this.onInstanceCreated = callback;
        return this;
      }
    };
    DEFAULT_ENTRY_NAME = "[DEFAULT]";
    Provider = class {
      constructor(name5, container) {
        this.name = name5;
        this.container = container;
        this.component = null;
        this.instances = /* @__PURE__ */ new Map();
        this.instancesDeferred = /* @__PURE__ */ new Map();
        this.instancesOptions = /* @__PURE__ */ new Map();
        this.onInitCallbacks = /* @__PURE__ */ new Map();
      }
      get(identifier) {
        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        if (!this.instancesDeferred.has(normalizedIdentifier)) {
          const deferred = new Deferred();
          this.instancesDeferred.set(normalizedIdentifier, deferred);
          if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {
            try {
              const instance = this.getOrInitializeService({
                instanceIdentifier: normalizedIdentifier
              });
              if (instance) {
                deferred.resolve(instance);
              }
            } catch (e7) {
            }
          }
        }
        return this.instancesDeferred.get(normalizedIdentifier).promise;
      }
      getImmediate(options) {
        var _a2;
        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);
        const optional = (_a2 = options === null || options === void 0 ? void 0 : options.optional) !== null && _a2 !== void 0 ? _a2 : false;
        if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {
          try {
            return this.getOrInitializeService({
              instanceIdentifier: normalizedIdentifier
            });
          } catch (e7) {
            if (optional) {
              return null;
            } else {
              throw e7;
            }
          }
        } else {
          if (optional) {
            return null;
          } else {
            throw Error(`Service ${this.name} is not available`);
          }
        }
      }
      getComponent() {
        return this.component;
      }
      setComponent(component16) {
        if (component16.name !== this.name) {
          throw Error(`Mismatching Component ${component16.name} for Provider ${this.name}.`);
        }
        if (this.component) {
          throw Error(`Component for ${this.name} has already been provided`);
        }
        this.component = component16;
        if (!this.shouldAutoInitialize()) {
          return;
        }
        if (isComponentEager(component16)) {
          try {
            this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });
          } catch (e7) {
          }
        }
        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {
          const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
          try {
            const instance = this.getOrInitializeService({
              instanceIdentifier: normalizedIdentifier
            });
            instanceDeferred.resolve(instance);
          } catch (e7) {
          }
        }
      }
      clearInstance(identifier = DEFAULT_ENTRY_NAME) {
        this.instancesDeferred.delete(identifier);
        this.instancesOptions.delete(identifier);
        this.instances.delete(identifier);
      }
      async delete() {
        const services = Array.from(this.instances.values());
        await Promise.all([
          ...services.filter((service) => "INTERNAL" in service).map((service) => service.INTERNAL.delete()),
          ...services.filter((service) => "_delete" in service).map((service) => service._delete())
        ]);
      }
      isComponentSet() {
        return this.component != null;
      }
      isInitialized(identifier = DEFAULT_ENTRY_NAME) {
        return this.instances.has(identifier);
      }
      getOptions(identifier = DEFAULT_ENTRY_NAME) {
        return this.instancesOptions.get(identifier) || {};
      }
      initialize(opts = {}) {
        const { options = {} } = opts;
        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);
        if (this.isInitialized(normalizedIdentifier)) {
          throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);
        }
        if (!this.isComponentSet()) {
          throw Error(`Component ${this.name} has not been registered yet`);
        }
        const instance = this.getOrInitializeService({
          instanceIdentifier: normalizedIdentifier,
          options
        });
        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {
          const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
          if (normalizedIdentifier === normalizedDeferredIdentifier) {
            instanceDeferred.resolve(instance);
          }
        }
        return instance;
      }
      onInit(callback, identifier) {
        var _a2;
        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        const existingCallbacks = (_a2 = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a2 !== void 0 ? _a2 : /* @__PURE__ */ new Set();
        existingCallbacks.add(callback);
        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);
        const existingInstance = this.instances.get(normalizedIdentifier);
        if (existingInstance) {
          callback(existingInstance, normalizedIdentifier);
        }
        return () => {
          existingCallbacks.delete(callback);
        };
      }
      invokeOnInitCallbacks(instance, identifier) {
        const callbacks = this.onInitCallbacks.get(identifier);
        if (!callbacks) {
          return;
        }
        for (const callback of callbacks) {
          try {
            callback(instance, identifier);
          } catch (_a2) {
          }
        }
      }
      getOrInitializeService({ instanceIdentifier, options = {} }) {
        let instance = this.instances.get(instanceIdentifier);
        if (!instance && this.component) {
          instance = this.component.instanceFactory(this.container, {
            instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),
            options
          });
          this.instances.set(instanceIdentifier, instance);
          this.instancesOptions.set(instanceIdentifier, options);
          this.invokeOnInitCallbacks(instance, instanceIdentifier);
          if (this.component.onInstanceCreated) {
            try {
              this.component.onInstanceCreated(this.container, instanceIdentifier, instance);
            } catch (_a2) {
            }
          }
        }
        return instance || null;
      }
      normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {
        if (this.component) {
          return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
        } else {
          return identifier;
        }
      }
      shouldAutoInitialize() {
        return !!this.component && this.component.instantiationMode !== "EXPLICIT";
      }
    };
    ComponentContainer = class {
      constructor(name5) {
        this.name = name5;
        this.providers = /* @__PURE__ */ new Map();
      }
      addComponent(component16) {
        const provider = this.getProvider(component16.name);
        if (provider.isComponentSet()) {
          throw new Error(`Component ${component16.name} has already been registered with ${this.name}`);
        }
        provider.setComponent(component16);
      }
      addOrOverwriteComponent(component16) {
        const provider = this.getProvider(component16.name);
        if (provider.isComponentSet()) {
          this.providers.delete(component16.name);
        }
        this.addComponent(component16);
      }
      getProvider(name5) {
        if (this.providers.has(name5)) {
          return this.providers.get(name5);
        }
        const provider = new Provider(name5, this);
        this.providers.set(name5, provider);
        return provider;
      }
      getProviders() {
        return Array.from(this.providers.values());
      }
    };
  }
});

// node_modules/@firebase/logger/dist/esm/index.esm2017.js
var instances, LogLevel, levelStringToEnum, defaultLogLevel, ConsoleMethod, defaultLogHandler, Logger;
var init_index_esm20173 = __esm({
  "node_modules/@firebase/logger/dist/esm/index.esm2017.js"() {
    instances = [];
    (function(LogLevel2) {
      LogLevel2[LogLevel2["DEBUG"] = 0] = "DEBUG";
      LogLevel2[LogLevel2["VERBOSE"] = 1] = "VERBOSE";
      LogLevel2[LogLevel2["INFO"] = 2] = "INFO";
      LogLevel2[LogLevel2["WARN"] = 3] = "WARN";
      LogLevel2[LogLevel2["ERROR"] = 4] = "ERROR";
      LogLevel2[LogLevel2["SILENT"] = 5] = "SILENT";
    })(LogLevel || (LogLevel = {}));
    levelStringToEnum = {
      "debug": LogLevel.DEBUG,
      "verbose": LogLevel.VERBOSE,
      "info": LogLevel.INFO,
      "warn": LogLevel.WARN,
      "error": LogLevel.ERROR,
      "silent": LogLevel.SILENT
    };
    defaultLogLevel = LogLevel.INFO;
    ConsoleMethod = {
      [LogLevel.DEBUG]: "log",
      [LogLevel.VERBOSE]: "log",
      [LogLevel.INFO]: "info",
      [LogLevel.WARN]: "warn",
      [LogLevel.ERROR]: "error"
    };
    defaultLogHandler = (instance, logType, ...args) => {
      if (logType < instance.logLevel) {
        return;
      }
      const now = new Date().toISOString();
      const method = ConsoleMethod[logType];
      if (method) {
        console[method](`[${now}]  ${instance.name}:`, ...args);
      } else {
        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);
      }
    };
    Logger = class {
      constructor(name5) {
        this.name = name5;
        this._logLevel = defaultLogLevel;
        this._logHandler = defaultLogHandler;
        this._userLogHandler = null;
        instances.push(this);
      }
      get logLevel() {
        return this._logLevel;
      }
      set logLevel(val) {
        if (!(val in LogLevel)) {
          throw new TypeError(`Invalid value "${val}" assigned to \`logLevel\``);
        }
        this._logLevel = val;
      }
      setLogLevel(val) {
        this._logLevel = typeof val === "string" ? levelStringToEnum[val] : val;
      }
      get logHandler() {
        return this._logHandler;
      }
      set logHandler(val) {
        if (typeof val !== "function") {
          throw new TypeError("Value assigned to `logHandler` must be a function");
        }
        this._logHandler = val;
      }
      get userLogHandler() {
        return this._userLogHandler;
      }
      set userLogHandler(val) {
        this._userLogHandler = val;
      }
      debug(...args) {
        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);
        this._logHandler(this, LogLevel.DEBUG, ...args);
      }
      log(...args) {
        this._userLogHandler && this._userLogHandler(this, LogLevel.VERBOSE, ...args);
        this._logHandler(this, LogLevel.VERBOSE, ...args);
      }
      info(...args) {
        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);
        this._logHandler(this, LogLevel.INFO, ...args);
      }
      warn(...args) {
        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);
        this._logHandler(this, LogLevel.WARN, ...args);
      }
      error(...args) {
        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);
        this._logHandler(this, LogLevel.ERROR, ...args);
      }
    };
  }
});

// node_modules/idb/build/wrap-idb-value.js
function getIdbProxyableTypes() {
  return idbProxyableTypes || (idbProxyableTypes = [
    IDBDatabase,
    IDBObjectStore,
    IDBIndex,
    IDBCursor,
    IDBTransaction
  ]);
}
function getCursorAdvanceMethods() {
  return cursorAdvanceMethods || (cursorAdvanceMethods = [
    IDBCursor.prototype.advance,
    IDBCursor.prototype.continue,
    IDBCursor.prototype.continuePrimaryKey
  ]);
}
function promisifyRequest(request) {
  const promise = new Promise((resolve, reject) => {
    const unlisten = () => {
      request.removeEventListener("success", success);
      request.removeEventListener("error", error);
    };
    const success = () => {
      resolve(wrap(request.result));
      unlisten();
    };
    const error = () => {
      reject(request.error);
      unlisten();
    };
    request.addEventListener("success", success);
    request.addEventListener("error", error);
  });
  promise.then((value) => {
    if (value instanceof IDBCursor) {
      cursorRequestMap.set(value, request);
    }
  }).catch(() => {
  });
  reverseTransformCache.set(promise, request);
  return promise;
}
function cacheDonePromiseForTransaction(tx) {
  if (transactionDoneMap.has(tx))
    return;
  const done = new Promise((resolve, reject) => {
    const unlisten = () => {
      tx.removeEventListener("complete", complete);
      tx.removeEventListener("error", error);
      tx.removeEventListener("abort", error);
    };
    const complete = () => {
      resolve();
      unlisten();
    };
    const error = () => {
      reject(tx.error || new DOMException("AbortError", "AbortError"));
      unlisten();
    };
    tx.addEventListener("complete", complete);
    tx.addEventListener("error", error);
    tx.addEventListener("abort", error);
  });
  transactionDoneMap.set(tx, done);
}
function replaceTraps(callback) {
  idbProxyTraps = callback(idbProxyTraps);
}
function wrapFunction(func) {
  if (func === IDBDatabase.prototype.transaction && !("objectStoreNames" in IDBTransaction.prototype)) {
    return function(storeNames, ...args) {
      const tx = func.call(unwrap(this), storeNames, ...args);
      transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);
      return wrap(tx);
    };
  }
  if (getCursorAdvanceMethods().includes(func)) {
    return function(...args) {
      func.apply(unwrap(this), args);
      return wrap(cursorRequestMap.get(this));
    };
  }
  return function(...args) {
    return wrap(func.apply(unwrap(this), args));
  };
}
function transformCachableValue(value) {
  if (typeof value === "function")
    return wrapFunction(value);
  if (value instanceof IDBTransaction)
    cacheDonePromiseForTransaction(value);
  if (instanceOfAny(value, getIdbProxyableTypes()))
    return new Proxy(value, idbProxyTraps);
  return value;
}
function wrap(value) {
  if (value instanceof IDBRequest)
    return promisifyRequest(value);
  if (transformCache.has(value))
    return transformCache.get(value);
  const newValue = transformCachableValue(value);
  if (newValue !== value) {
    transformCache.set(value, newValue);
    reverseTransformCache.set(newValue, value);
  }
  return newValue;
}
var instanceOfAny, idbProxyableTypes, cursorAdvanceMethods, cursorRequestMap, transactionDoneMap, transactionStoreNamesMap, transformCache, reverseTransformCache, idbProxyTraps, unwrap;
var init_wrap_idb_value = __esm({
  "node_modules/idb/build/wrap-idb-value.js"() {
    instanceOfAny = (object, constructors) => constructors.some((c4) => object instanceof c4);
    cursorRequestMap = /* @__PURE__ */ new WeakMap();
    transactionDoneMap = /* @__PURE__ */ new WeakMap();
    transactionStoreNamesMap = /* @__PURE__ */ new WeakMap();
    transformCache = /* @__PURE__ */ new WeakMap();
    reverseTransformCache = /* @__PURE__ */ new WeakMap();
    idbProxyTraps = {
      get(target, prop, receiver) {
        if (target instanceof IDBTransaction) {
          if (prop === "done")
            return transactionDoneMap.get(target);
          if (prop === "objectStoreNames") {
            return target.objectStoreNames || transactionStoreNamesMap.get(target);
          }
          if (prop === "store") {
            return receiver.objectStoreNames[1] ? void 0 : receiver.objectStore(receiver.objectStoreNames[0]);
          }
        }
        return wrap(target[prop]);
      },
      set(target, prop, value) {
        target[prop] = value;
        return true;
      },
      has(target, prop) {
        if (target instanceof IDBTransaction && (prop === "done" || prop === "store")) {
          return true;
        }
        return prop in target;
      }
    };
    unwrap = (value) => reverseTransformCache.get(value);
  }
});

// node_modules/idb/build/index.js
function openDB(name5, version5, { blocked, upgrade, blocking, terminated } = {}) {
  const request = indexedDB.open(name5, version5);
  const openPromise = wrap(request);
  if (upgrade) {
    request.addEventListener("upgradeneeded", (event) => {
      upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));
    });
  }
  if (blocked)
    request.addEventListener("blocked", () => blocked());
  openPromise.then((db) => {
    if (terminated)
      db.addEventListener("close", () => terminated());
    if (blocking)
      db.addEventListener("versionchange", () => blocking());
  }).catch(() => {
  });
  return openPromise;
}
function getMethod(target, prop) {
  if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === "string")) {
    return;
  }
  if (cachedMethods.get(prop))
    return cachedMethods.get(prop);
  const targetFuncName = prop.replace(/FromIndex$/, "");
  const useIndex = prop !== targetFuncName;
  const isWrite = writeMethods.includes(targetFuncName);
  if (!(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || readMethods.includes(targetFuncName))) {
    return;
  }
  const method = async function(storeName, ...args) {
    const tx = this.transaction(storeName, isWrite ? "readwrite" : "readonly");
    let target2 = tx.store;
    if (useIndex)
      target2 = target2.index(args.shift());
    return (await Promise.all([
      target2[targetFuncName](...args),
      isWrite && tx.done
    ]))[0];
  };
  cachedMethods.set(prop, method);
  return method;
}
var readMethods, writeMethods, cachedMethods;
var init_build = __esm({
  "node_modules/idb/build/index.js"() {
    init_wrap_idb_value();
    init_wrap_idb_value();
    readMethods = ["get", "getKey", "getAll", "getAllKeys", "count"];
    writeMethods = ["put", "add", "delete", "clear"];
    cachedMethods = /* @__PURE__ */ new Map();
    replaceTraps((oldTraps) => ({
      ...oldTraps,
      get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),
      has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop)
    }));
  }
});

// node_modules/@firebase/app/dist/esm/index.esm2017.js
function isVersionServiceProvider(provider) {
  const component16 = provider.getComponent();
  return (component16 === null || component16 === void 0 ? void 0 : component16.type) === "VERSION";
}
function _addComponent(app, component16) {
  try {
    app.container.addComponent(component16);
  } catch (e7) {
    logger.debug(`Component ${component16.name} failed to register with FirebaseApp ${app.name}`, e7);
  }
}
function _registerComponent(component16) {
  const componentName = component16.name;
  if (_components.has(componentName)) {
    logger.debug(`There were multiple attempts to register component ${componentName}.`);
    return false;
  }
  _components.set(componentName, component16);
  for (const app of _apps.values()) {
    _addComponent(app, component16);
  }
  return true;
}
function _getProvider(app, name5) {
  const heartbeatController = app.container.getProvider("heartbeat").getImmediate({ optional: true });
  if (heartbeatController) {
    void heartbeatController.triggerHeartbeat();
  }
  return app.container.getProvider(name5);
}
function _removeServiceInstance(app, name5, instanceIdentifier = DEFAULT_ENTRY_NAME2) {
  _getProvider(app, name5).clearInstance(instanceIdentifier);
}
function initializeApp(_options, rawConfig = {}) {
  let options = _options;
  if (typeof rawConfig !== "object") {
    const name6 = rawConfig;
    rawConfig = { name: name6 };
  }
  const config = Object.assign({ name: DEFAULT_ENTRY_NAME2, automaticDataCollectionEnabled: false }, rawConfig);
  const name5 = config.name;
  if (typeof name5 !== "string" || !name5) {
    throw ERROR_FACTORY.create("bad-app-name", {
      appName: String(name5)
    });
  }
  options || (options = getDefaultAppConfig());
  if (!options) {
    throw ERROR_FACTORY.create("no-options");
  }
  const existingApp = _apps.get(name5);
  if (existingApp) {
    if (deepEqual(options, existingApp.options) && deepEqual(config, existingApp.config)) {
      return existingApp;
    } else {
      throw ERROR_FACTORY.create("duplicate-app", { appName: name5 });
    }
  }
  const container = new ComponentContainer(name5);
  for (const component16 of _components.values()) {
    container.addComponent(component16);
  }
  const newApp = new FirebaseAppImpl(options, config, container);
  _apps.set(name5, newApp);
  return newApp;
}
function getApp(name5 = DEFAULT_ENTRY_NAME2) {
  const app = _apps.get(name5);
  if (!app && name5 === DEFAULT_ENTRY_NAME2) {
    return initializeApp();
  }
  if (!app) {
    throw ERROR_FACTORY.create("no-app", { appName: name5 });
  }
  return app;
}
function registerVersion(libraryKeyOrName, version5, variant) {
  var _a2;
  let library = (_a2 = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a2 !== void 0 ? _a2 : libraryKeyOrName;
  if (variant) {
    library += `-${variant}`;
  }
  const libraryMismatch = library.match(/\s|\//);
  const versionMismatch = version5.match(/\s|\//);
  if (libraryMismatch || versionMismatch) {
    const warning = [
      `Unable to register library "${library}" with version "${version5}":`
    ];
    if (libraryMismatch) {
      warning.push(`library name "${library}" contains illegal characters (whitespace or "/")`);
    }
    if (libraryMismatch && versionMismatch) {
      warning.push("and");
    }
    if (versionMismatch) {
      warning.push(`version name "${version5}" contains illegal characters (whitespace or "/")`);
    }
    logger.warn(warning.join(" "));
    return;
  }
  _registerComponent(new Component(`${library}-version`, () => ({ library, version: version5 }), "VERSION"));
}
function getDbPromise() {
  if (!dbPromise) {
    dbPromise = openDB(DB_NAME, DB_VERSION, {
      upgrade: (db, oldVersion) => {
        switch (oldVersion) {
          case 0:
            db.createObjectStore(STORE_NAME);
        }
      }
    }).catch((e7) => {
      throw ERROR_FACTORY.create("idb-open", {
        originalErrorMessage: e7.message
      });
    });
  }
  return dbPromise;
}
async function readHeartbeatsFromIndexedDB(app) {
  try {
    const db = await getDbPromise();
    return db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app));
  } catch (e7) {
    if (e7 instanceof FirebaseError) {
      logger.warn(e7.message);
    } else {
      const idbGetError = ERROR_FACTORY.create("idb-get", {
        originalErrorMessage: e7 === null || e7 === void 0 ? void 0 : e7.message
      });
      logger.warn(idbGetError.message);
    }
  }
}
async function writeHeartbeatsToIndexedDB(app, heartbeatObject) {
  try {
    const db = await getDbPromise();
    const tx = db.transaction(STORE_NAME, "readwrite");
    const objectStore = tx.objectStore(STORE_NAME);
    await objectStore.put(heartbeatObject, computeKey(app));
    return tx.done;
  } catch (e7) {
    if (e7 instanceof FirebaseError) {
      logger.warn(e7.message);
    } else {
      const idbGetError = ERROR_FACTORY.create("idb-set", {
        originalErrorMessage: e7 === null || e7 === void 0 ? void 0 : e7.message
      });
      logger.warn(idbGetError.message);
    }
  }
}
function computeKey(app) {
  return `${app.name}!${app.options.appId}`;
}
function getUTCDateString() {
  const today = new Date();
  return today.toISOString().substring(0, 10);
}
function extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {
  const heartbeatsToSend = [];
  let unsentEntries = heartbeatsCache.slice();
  for (const singleDateHeartbeat of heartbeatsCache) {
    const heartbeatEntry = heartbeatsToSend.find((hb) => hb.agent === singleDateHeartbeat.agent);
    if (!heartbeatEntry) {
      heartbeatsToSend.push({
        agent: singleDateHeartbeat.agent,
        dates: [singleDateHeartbeat.date]
      });
      if (countBytes(heartbeatsToSend) > maxSize) {
        heartbeatsToSend.pop();
        break;
      }
    } else {
      heartbeatEntry.dates.push(singleDateHeartbeat.date);
      if (countBytes(heartbeatsToSend) > maxSize) {
        heartbeatEntry.dates.pop();
        break;
      }
    }
    unsentEntries = unsentEntries.slice(1);
  }
  return {
    heartbeatsToSend,
    unsentEntries
  };
}
function countBytes(heartbeatsCache) {
  return base64urlEncodeWithoutPadding(
    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })
  ).length;
}
function registerCoreComponents(variant) {
  _registerComponent(new Component("platform-logger", (container) => new PlatformLoggerServiceImpl(container), "PRIVATE"));
  _registerComponent(new Component("heartbeat", (container) => new HeartbeatServiceImpl(container), "PRIVATE"));
  registerVersion(name$o, version$1, variant);
  registerVersion(name$o, version$1, "esm2017");
  registerVersion("fire-js", "");
}
var PlatformLoggerServiceImpl, name$o, version$1, logger, name$n, name$m, name$l, name$k, name$j, name$i, name$h, name$g, name$f, name$e, name$d, name$c, name$b, name$a, name$9, name$8, name$7, name$6, name$5, name$4, name$3, name$2, name$1, name, version, DEFAULT_ENTRY_NAME2, PLATFORM_LOG_STRING, _apps, _components, ERRORS, ERROR_FACTORY, FirebaseAppImpl, SDK_VERSION, DB_NAME, DB_VERSION, STORE_NAME, dbPromise, MAX_HEADER_BYTES, STORED_HEARTBEAT_RETENTION_MAX_MILLIS, HeartbeatServiceImpl, HeartbeatStorageImpl;
var init_index_esm20174 = __esm({
  "node_modules/@firebase/app/dist/esm/index.esm2017.js"() {
    init_index_esm20172();
    init_index_esm20173();
    init_index_esm2017();
    init_index_esm2017();
    init_build();
    PlatformLoggerServiceImpl = class {
      constructor(container) {
        this.container = container;
      }
      getPlatformInfoString() {
        const providers = this.container.getProviders();
        return providers.map((provider) => {
          if (isVersionServiceProvider(provider)) {
            const service = provider.getImmediate();
            return `${service.library}/${service.version}`;
          } else {
            return null;
          }
        }).filter((logString) => logString).join(" ");
      }
    };
    name$o = "@firebase/app";
    version$1 = "0.9.0";
    logger = new Logger("@firebase/app");
    name$n = "@firebase/app-compat";
    name$m = "@firebase/analytics-compat";
    name$l = "@firebase/analytics";
    name$k = "@firebase/app-check-compat";
    name$j = "@firebase/app-check";
    name$i = "@firebase/auth";
    name$h = "@firebase/auth-compat";
    name$g = "@firebase/database";
    name$f = "@firebase/database-compat";
    name$e = "@firebase/functions";
    name$d = "@firebase/functions-compat";
    name$c = "@firebase/installations";
    name$b = "@firebase/installations-compat";
    name$a = "@firebase/messaging";
    name$9 = "@firebase/messaging-compat";
    name$8 = "@firebase/performance";
    name$7 = "@firebase/performance-compat";
    name$6 = "@firebase/remote-config";
    name$5 = "@firebase/remote-config-compat";
    name$4 = "@firebase/storage";
    name$3 = "@firebase/storage-compat";
    name$2 = "@firebase/firestore";
    name$1 = "@firebase/firestore-compat";
    name = "firebase";
    version = "9.15.0";
    DEFAULT_ENTRY_NAME2 = "[DEFAULT]";
    PLATFORM_LOG_STRING = {
      [name$o]: "fire-core",
      [name$n]: "fire-core-compat",
      [name$l]: "fire-analytics",
      [name$m]: "fire-analytics-compat",
      [name$j]: "fire-app-check",
      [name$k]: "fire-app-check-compat",
      [name$i]: "fire-auth",
      [name$h]: "fire-auth-compat",
      [name$g]: "fire-rtdb",
      [name$f]: "fire-rtdb-compat",
      [name$e]: "fire-fn",
      [name$d]: "fire-fn-compat",
      [name$c]: "fire-iid",
      [name$b]: "fire-iid-compat",
      [name$a]: "fire-fcm",
      [name$9]: "fire-fcm-compat",
      [name$8]: "fire-perf",
      [name$7]: "fire-perf-compat",
      [name$6]: "fire-rc",
      [name$5]: "fire-rc-compat",
      [name$4]: "fire-gcs",
      [name$3]: "fire-gcs-compat",
      [name$2]: "fire-fst",
      [name$1]: "fire-fst-compat",
      "fire-js": "fire-js",
      [name]: "fire-js-all"
    };
    _apps = /* @__PURE__ */ new Map();
    _components = /* @__PURE__ */ new Map();
    ERRORS = {
      ["no-app"]: "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
      ["bad-app-name"]: "Illegal App name: '{$appName}",
      ["duplicate-app"]: "Firebase App named '{$appName}' already exists with different options or config",
      ["app-deleted"]: "Firebase App named '{$appName}' already deleted",
      ["no-options"]: "Need to provide options, when not being deployed to hosting via source.",
      ["invalid-app-argument"]: "firebase.{$appName}() takes either no argument or a Firebase App instance.",
      ["invalid-log-argument"]: "First argument to `onLog` must be null or a function.",
      ["idb-open"]: "Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.",
      ["idb-get"]: "Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.",
      ["idb-set"]: "Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.",
      ["idb-delete"]: "Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}."
    };
    ERROR_FACTORY = new ErrorFactory("app", "Firebase", ERRORS);
    FirebaseAppImpl = class {
      constructor(options, config, container) {
        this._isDeleted = false;
        this._options = Object.assign({}, options);
        this._config = Object.assign({}, config);
        this._name = config.name;
        this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;
        this._container = container;
        this.container.addComponent(new Component("app", () => this, "PUBLIC"));
      }
      get automaticDataCollectionEnabled() {
        this.checkDestroyed();
        return this._automaticDataCollectionEnabled;
      }
      set automaticDataCollectionEnabled(val) {
        this.checkDestroyed();
        this._automaticDataCollectionEnabled = val;
      }
      get name() {
        this.checkDestroyed();
        return this._name;
      }
      get options() {
        this.checkDestroyed();
        return this._options;
      }
      get config() {
        this.checkDestroyed();
        return this._config;
      }
      get container() {
        return this._container;
      }
      get isDeleted() {
        return this._isDeleted;
      }
      set isDeleted(val) {
        this._isDeleted = val;
      }
      checkDestroyed() {
        if (this.isDeleted) {
          throw ERROR_FACTORY.create("app-deleted", { appName: this._name });
        }
      }
    };
    SDK_VERSION = version;
    DB_NAME = "firebase-heartbeat-database";
    DB_VERSION = 1;
    STORE_NAME = "firebase-heartbeat-store";
    dbPromise = null;
    MAX_HEADER_BYTES = 1024;
    STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1e3;
    HeartbeatServiceImpl = class {
      constructor(container) {
        this.container = container;
        this._heartbeatsCache = null;
        const app = this.container.getProvider("app").getImmediate();
        this._storage = new HeartbeatStorageImpl(app);
        this._heartbeatsCachePromise = this._storage.read().then((result) => {
          this._heartbeatsCache = result;
          return result;
        });
      }
      async triggerHeartbeat() {
        const platformLogger = this.container.getProvider("platform-logger").getImmediate();
        const agent = platformLogger.getPlatformInfoString();
        const date = getUTCDateString();
        if (this._heartbeatsCache === null) {
          this._heartbeatsCache = await this._heartbeatsCachePromise;
        }
        if (this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some((singleDateHeartbeat) => singleDateHeartbeat.date === date)) {
          return;
        } else {
          this._heartbeatsCache.heartbeats.push({ date, agent });
        }
        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter((singleDateHeartbeat) => {
          const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();
          const now = Date.now();
          return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;
        });
        return this._storage.overwrite(this._heartbeatsCache);
      }
      async getHeartbeatsHeader() {
        if (this._heartbeatsCache === null) {
          await this._heartbeatsCachePromise;
        }
        if (this._heartbeatsCache === null || this._heartbeatsCache.heartbeats.length === 0) {
          return "";
        }
        const date = getUTCDateString();
        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);
        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));
        this._heartbeatsCache.lastSentHeartbeatDate = date;
        if (unsentEntries.length > 0) {
          this._heartbeatsCache.heartbeats = unsentEntries;
          await this._storage.overwrite(this._heartbeatsCache);
        } else {
          this._heartbeatsCache.heartbeats = [];
          void this._storage.overwrite(this._heartbeatsCache);
        }
        return headerString;
      }
    };
    HeartbeatStorageImpl = class {
      constructor(app) {
        this.app = app;
        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();
      }
      async runIndexedDBEnvironmentCheck() {
        if (!isIndexedDBAvailable()) {
          return false;
        } else {
          return validateIndexedDBOpenable().then(() => true).catch(() => false);
        }
      }
      async read() {
        const canUseIndexedDB = await this._canUseIndexedDBPromise;
        if (!canUseIndexedDB) {
          return { heartbeats: [] };
        } else {
          const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);
          return idbHeartbeatObject || { heartbeats: [] };
        }
      }
      async overwrite(heartbeatsObject) {
        var _a2;
        const canUseIndexedDB = await this._canUseIndexedDBPromise;
        if (!canUseIndexedDB) {
          return;
        } else {
          const existingHeartbeatsObject = await this.read();
          return writeHeartbeatsToIndexedDB(this.app, {
            lastSentHeartbeatDate: (_a2 = heartbeatsObject.lastSentHeartbeatDate) !== null && _a2 !== void 0 ? _a2 : existingHeartbeatsObject.lastSentHeartbeatDate,
            heartbeats: heartbeatsObject.heartbeats
          });
        }
      }
      async add(heartbeatsObject) {
        var _a2;
        const canUseIndexedDB = await this._canUseIndexedDBPromise;
        if (!canUseIndexedDB) {
          return;
        } else {
          const existingHeartbeatsObject = await this.read();
          return writeHeartbeatsToIndexedDB(this.app, {
            lastSentHeartbeatDate: (_a2 = heartbeatsObject.lastSentHeartbeatDate) !== null && _a2 !== void 0 ? _a2 : existingHeartbeatsObject.lastSentHeartbeatDate,
            heartbeats: [
              ...existingHeartbeatsObject.heartbeats,
              ...heartbeatsObject.heartbeats
            ]
          });
        }
      }
    };
    registerCoreComponents("");
  }
});

// node_modules/firebase/app/dist/esm/index.esm.js
var name2, version2;
var init_index_esm2 = __esm({
  "node_modules/firebase/app/dist/esm/index.esm.js"() {
    init_index_esm20174();
    init_index_esm20174();
    name2 = "firebase";
    version2 = "9.15.0";
    registerVersion(name2, version2, "app");
  }
});

// node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/tslib/tslib.js"(exports2, module2) {
    var __extends2;
    var __assign2;
    var __rest2;
    var __decorate2;
    var __param2;
    var __metadata2;
    var __awaiter2;
    var __generator2;
    var __exportStar2;
    var __values2;
    var __read2;
    var __spread2;
    var __spreadArrays2;
    var __spreadArray2;
    var __await2;
    var __asyncGenerator2;
    var __asyncDelegator2;
    var __asyncValues2;
    var __makeTemplateObject2;
    var __importStar2;
    var __importDefault2;
    var __classPrivateFieldGet2;
    var __classPrivateFieldSet2;
    var __classPrivateFieldIn2;
    var __createBinding2;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports3) {
          factory(createExporter(root, createExporter(exports3)));
        });
      } else if (typeof module2 === "object" && typeof module2.exports === "object") {
        factory(createExporter(root, createExporter(module2.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports3, previous) {
        if (exports3 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports3, "__esModule", { value: true });
          } else {
            exports3.__esModule = true;
          }
        }
        return function(id, v6) {
          return exports3[id] = previous ? previous(id, v6) : v6;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d6, b6) {
        d6.__proto__ = b6;
      } || function(d6, b6) {
        for (var p6 in b6)
          if (Object.prototype.hasOwnProperty.call(b6, p6))
            d6[p6] = b6[p6];
      };
      __extends2 = function(d6, b6) {
        if (typeof b6 !== "function" && b6 !== null)
          throw new TypeError("Class extends value " + String(b6) + " is not a constructor or null");
        extendStatics(d6, b6);
        function __() {
          this.constructor = d6;
        }
        d6.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
      };
      __assign2 = Object.assign || function(t3) {
        for (var s6, i4 = 1, n3 = arguments.length; i4 < n3; i4++) {
          s6 = arguments[i4];
          for (var p6 in s6)
            if (Object.prototype.hasOwnProperty.call(s6, p6))
              t3[p6] = s6[p6];
        }
        return t3;
      };
      __rest2 = function(s6, e7) {
        var t3 = {};
        for (var p6 in s6)
          if (Object.prototype.hasOwnProperty.call(s6, p6) && e7.indexOf(p6) < 0)
            t3[p6] = s6[p6];
        if (s6 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i4 = 0, p6 = Object.getOwnPropertySymbols(s6); i4 < p6.length; i4++) {
            if (e7.indexOf(p6[i4]) < 0 && Object.prototype.propertyIsEnumerable.call(s6, p6[i4]))
              t3[p6[i4]] = s6[p6[i4]];
          }
        return t3;
      };
      __decorate2 = function(decorators, target, key, desc) {
        var c4 = arguments.length, r6 = c4 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d6;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r6 = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i4 = decorators.length - 1; i4 >= 0; i4--)
            if (d6 = decorators[i4])
              r6 = (c4 < 3 ? d6(r6) : c4 > 3 ? d6(target, key, r6) : d6(target, key)) || r6;
        return c4 > 3 && r6 && Object.defineProperty(target, key, r6), r6;
      };
      __param2 = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      };
      __metadata2 = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter2 = function(thisArg, _arguments, P6, generator) {
        function adopt(value) {
          return value instanceof P6 ? value : new P6(function(resolve) {
            resolve(value);
          });
        }
        return new (P6 || (P6 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e7) {
              reject(e7);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e7) {
              reject(e7);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator2 = function(thisArg, body) {
        var _6 = { label: 0, sent: function() {
          if (t3[0] & 1)
            throw t3[1];
          return t3[1];
        }, trys: [], ops: [] }, f6, y7, t3, g6;
        return g6 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g6[Symbol.iterator] = function() {
          return this;
        }), g6;
        function verb(n3) {
          return function(v6) {
            return step([n3, v6]);
          };
        }
        function step(op2) {
          if (f6)
            throw new TypeError("Generator is already executing.");
          while (g6 && (g6 = 0, op2[0] && (_6 = 0)), _6)
            try {
              if (f6 = 1, y7 && (t3 = op2[0] & 2 ? y7["return"] : op2[0] ? y7["throw"] || ((t3 = y7["return"]) && t3.call(y7), 0) : y7.next) && !(t3 = t3.call(y7, op2[1])).done)
                return t3;
              if (y7 = 0, t3)
                op2 = [op2[0] & 2, t3.value];
              switch (op2[0]) {
                case 0:
                case 1:
                  t3 = op2;
                  break;
                case 4:
                  _6.label++;
                  return { value: op2[1], done: false };
                case 5:
                  _6.label++;
                  y7 = op2[1];
                  op2 = [0];
                  continue;
                case 7:
                  op2 = _6.ops.pop();
                  _6.trys.pop();
                  continue;
                default:
                  if (!(t3 = _6.trys, t3 = t3.length > 0 && t3[t3.length - 1]) && (op2[0] === 6 || op2[0] === 2)) {
                    _6 = 0;
                    continue;
                  }
                  if (op2[0] === 3 && (!t3 || op2[1] > t3[0] && op2[1] < t3[3])) {
                    _6.label = op2[1];
                    break;
                  }
                  if (op2[0] === 6 && _6.label < t3[1]) {
                    _6.label = t3[1];
                    t3 = op2;
                    break;
                  }
                  if (t3 && _6.label < t3[2]) {
                    _6.label = t3[2];
                    _6.ops.push(op2);
                    break;
                  }
                  if (t3[2])
                    _6.ops.pop();
                  _6.trys.pop();
                  continue;
              }
              op2 = body.call(thisArg, _6);
            } catch (e7) {
              op2 = [6, e7];
              y7 = 0;
            } finally {
              f6 = t3 = 0;
            }
          if (op2[0] & 5)
            throw op2[1];
          return { value: op2[0] ? op2[1] : void 0, done: true };
        }
      };
      __exportStar2 = function(m8, o4) {
        for (var p6 in m8)
          if (p6 !== "default" && !Object.prototype.hasOwnProperty.call(o4, p6))
            __createBinding2(o4, m8, p6);
      };
      __createBinding2 = Object.create ? function(o4, m8, k6, k22) {
        if (k22 === void 0)
          k22 = k6;
        var desc = Object.getOwnPropertyDescriptor(m8, k6);
        if (!desc || ("get" in desc ? !m8.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m8[k6];
          } };
        }
        Object.defineProperty(o4, k22, desc);
      } : function(o4, m8, k6, k22) {
        if (k22 === void 0)
          k22 = k6;
        o4[k22] = m8[k6];
      };
      __values2 = function(o4) {
        var s6 = typeof Symbol === "function" && Symbol.iterator, m8 = s6 && o4[s6], i4 = 0;
        if (m8)
          return m8.call(o4);
        if (o4 && typeof o4.length === "number")
          return {
            next: function() {
              if (o4 && i4 >= o4.length)
                o4 = void 0;
              return { value: o4 && o4[i4++], done: !o4 };
            }
          };
        throw new TypeError(s6 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read2 = function(o4, n3) {
        var m8 = typeof Symbol === "function" && o4[Symbol.iterator];
        if (!m8)
          return o4;
        var i4 = m8.call(o4), r6, ar2 = [], e7;
        try {
          while ((n3 === void 0 || n3-- > 0) && !(r6 = i4.next()).done)
            ar2.push(r6.value);
        } catch (error) {
          e7 = { error };
        } finally {
          try {
            if (r6 && !r6.done && (m8 = i4["return"]))
              m8.call(i4);
          } finally {
            if (e7)
              throw e7.error;
          }
        }
        return ar2;
      };
      __spread2 = function() {
        for (var ar2 = [], i4 = 0; i4 < arguments.length; i4++)
          ar2 = ar2.concat(__read2(arguments[i4]));
        return ar2;
      };
      __spreadArrays2 = function() {
        for (var s6 = 0, i4 = 0, il = arguments.length; i4 < il; i4++)
          s6 += arguments[i4].length;
        for (var r6 = Array(s6), k6 = 0, i4 = 0; i4 < il; i4++)
          for (var a4 = arguments[i4], j3 = 0, jl = a4.length; j3 < jl; j3++, k6++)
            r6[k6] = a4[j3];
        return r6;
      };
      __spreadArray2 = function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i4 = 0, l4 = from.length, ar2; i4 < l4; i4++) {
            if (ar2 || !(i4 in from)) {
              if (!ar2)
                ar2 = Array.prototype.slice.call(from, 0, i4);
              ar2[i4] = from[i4];
            }
          }
        return to.concat(ar2 || Array.prototype.slice.call(from));
      };
      __await2 = function(v6) {
        return this instanceof __await2 ? (this.v = v6, this) : new __await2(v6);
      };
      __asyncGenerator2 = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g6 = generator.apply(thisArg, _arguments || []), i4, q7 = [];
        return i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4;
        function verb(n3) {
          if (g6[n3])
            i4[n3] = function(v6) {
              return new Promise(function(a4, b6) {
                q7.push([n3, v6, a4, b6]) > 1 || resume(n3, v6);
              });
            };
        }
        function resume(n3, v6) {
          try {
            step(g6[n3](v6));
          } catch (e7) {
            settle(q7[0][3], e7);
          }
        }
        function step(r6) {
          r6.value instanceof __await2 ? Promise.resolve(r6.value.v).then(fulfill, reject) : settle(q7[0][2], r6);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f6, v6) {
          if (f6(v6), q7.shift(), q7.length)
            resume(q7[0][0], q7[0][1]);
        }
      };
      __asyncDelegator2 = function(o4) {
        var i4, p6;
        return i4 = {}, verb("next"), verb("throw", function(e7) {
          throw e7;
        }), verb("return"), i4[Symbol.iterator] = function() {
          return this;
        }, i4;
        function verb(n3, f6) {
          i4[n3] = o4[n3] ? function(v6) {
            return (p6 = !p6) ? { value: __await2(o4[n3](v6)), done: n3 === "return" } : f6 ? f6(v6) : v6;
          } : f6;
        }
      };
      __asyncValues2 = function(o4) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m8 = o4[Symbol.asyncIterator], i4;
        return m8 ? m8.call(o4) : (o4 = typeof __values2 === "function" ? __values2(o4) : o4[Symbol.iterator](), i4 = {}, verb("next"), verb("throw"), verb("return"), i4[Symbol.asyncIterator] = function() {
          return this;
        }, i4);
        function verb(n3) {
          i4[n3] = o4[n3] && function(v6) {
            return new Promise(function(resolve, reject) {
              v6 = o4[n3](v6), settle(resolve, reject, v6.done, v6.value);
            });
          };
        }
        function settle(resolve, reject, d6, v6) {
          Promise.resolve(v6).then(function(v7) {
            resolve({ value: v7, done: d6 });
          }, reject);
        }
      };
      __makeTemplateObject2 = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      var __setModuleDefault = Object.create ? function(o4, v6) {
        Object.defineProperty(o4, "default", { enumerable: true, value: v6 });
      } : function(o4, v6) {
        o4["default"] = v6;
      };
      __importStar2 = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k6 in mod)
            if (k6 !== "default" && Object.prototype.hasOwnProperty.call(mod, k6))
              __createBinding2(result, mod, k6);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      __importDefault2 = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet2 = function(receiver, state, kind, f6) {
        if (kind === "a" && !f6)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f6 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f6 : kind === "a" ? f6.call(receiver) : f6 ? f6.value : state.get(receiver);
      };
      __classPrivateFieldSet2 = function(receiver, state, value, kind, f6) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f6)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f6 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f6.call(receiver, value) : f6 ? f6.value = value : state.set(receiver, value), value;
      };
      __classPrivateFieldIn2 = function(state, receiver) {
        if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
      };
      exporter("__extends", __extends2);
      exporter("__assign", __assign2);
      exporter("__rest", __rest2);
      exporter("__decorate", __decorate2);
      exporter("__param", __param2);
      exporter("__metadata", __metadata2);
      exporter("__awaiter", __awaiter2);
      exporter("__generator", __generator2);
      exporter("__exportStar", __exportStar2);
      exporter("__createBinding", __createBinding2);
      exporter("__values", __values2);
      exporter("__read", __read2);
      exporter("__spread", __spread2);
      exporter("__spreadArrays", __spreadArrays2);
      exporter("__spreadArray", __spreadArray2);
      exporter("__await", __await2);
      exporter("__asyncGenerator", __asyncGenerator2);
      exporter("__asyncDelegator", __asyncDelegator2);
      exporter("__asyncValues", __asyncValues2);
      exporter("__makeTemplateObject", __makeTemplateObject2);
      exporter("__importStar", __importStar2);
      exporter("__importDefault", __importDefault2);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet2);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet2);
      exporter("__classPrivateFieldIn", __classPrivateFieldIn2);
    });
  }
});

// node_modules/tslib/modules/index.js
var import_tslib, __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __createBinding, __values, __read, __spread, __spreadArrays, __spreadArray, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet, __classPrivateFieldIn;
var init_modules = __esm({
  "node_modules/tslib/modules/index.js"() {
    import_tslib = __toESM(require_tslib(), 1);
    ({
      __extends,
      __assign,
      __rest,
      __decorate,
      __param,
      __metadata,
      __awaiter,
      __generator,
      __exportStar,
      __createBinding,
      __values,
      __read,
      __spread,
      __spreadArrays,
      __spreadArray,
      __await,
      __asyncGenerator,
      __asyncDelegator,
      __asyncValues,
      __makeTemplateObject,
      __importStar,
      __importDefault,
      __classPrivateFieldGet,
      __classPrivateFieldSet,
      __classPrivateFieldIn
    } = import_tslib.default);
  }
});

// node_modules/@firebase/auth/dist/esm2017/index-c6def6da.js
function _prodErrorMap() {
  return {
    ["dependent-sdk-initialized-before-auth"]: "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK."
  };
}
function _logError(msg, ...args) {
  if (logClient.logLevel <= LogLevel.ERROR) {
    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);
  }
}
function _fail(authOrCode, ...rest) {
  throw createErrorInternal(authOrCode, ...rest);
}
function _createError(authOrCode, ...rest) {
  return createErrorInternal(authOrCode, ...rest);
}
function _errorWithCustomMessage(auth, code, message) {
  const errorMap = Object.assign(Object.assign({}, prodErrorMap()), { [code]: message });
  const factory = new ErrorFactory("auth", "Firebase", errorMap);
  return factory.create(code, {
    appName: auth.name
  });
}
function createErrorInternal(authOrCode, ...rest) {
  if (typeof authOrCode !== "string") {
    const code = rest[0];
    const fullParams = [...rest.slice(1)];
    if (fullParams[0]) {
      fullParams[0].appName = authOrCode.name;
    }
    return authOrCode._errorFactory.create(code, ...fullParams);
  }
  return _DEFAULT_AUTH_ERROR_FACTORY.create(authOrCode, ...rest);
}
function _assert(assertion, authOrCode, ...rest) {
  if (!assertion) {
    throw createErrorInternal(authOrCode, ...rest);
  }
}
function debugFail(failure) {
  const message = `INTERNAL ASSERTION FAILED: ` + failure;
  _logError(message);
  throw new Error(message);
}
function debugAssert(assertion, message) {
  if (!assertion) {
    debugFail(message);
  }
}
function _getInstance(cls) {
  debugAssert(cls instanceof Function, "Expected a class definition");
  let instance = instanceCache.get(cls);
  if (instance) {
    debugAssert(instance instanceof cls, "Instance stored in cache mismatched with class");
    return instance;
  }
  instance = new cls();
  instanceCache.set(cls, instance);
  return instance;
}
function initializeAuth(app, deps) {
  const provider = _getProvider(app, "auth");
  if (provider.isInitialized()) {
    const auth2 = provider.getImmediate();
    const initialOptions = provider.getOptions();
    if (deepEqual(initialOptions, deps !== null && deps !== void 0 ? deps : {})) {
      return auth2;
    } else {
      _fail(auth2, "already-initialized");
    }
  }
  const auth = provider.initialize({ options: deps });
  return auth;
}
function _initializeAuthInstance(auth, deps) {
  const persistence = (deps === null || deps === void 0 ? void 0 : deps.persistence) || [];
  const hierarchy = (Array.isArray(persistence) ? persistence : [persistence]).map(_getInstance);
  if (deps === null || deps === void 0 ? void 0 : deps.errorMap) {
    auth._updateErrorMap(deps.errorMap);
  }
  auth._initializeWithPersistence(hierarchy, deps === null || deps === void 0 ? void 0 : deps.popupRedirectResolver);
}
function _isHttpOrHttps() {
  return _getCurrentScheme() === "http:" || _getCurrentScheme() === "https:";
}
function _getCurrentScheme() {
  var _a2;
  return typeof self !== "undefined" && ((_a2 = self.location) === null || _a2 === void 0 ? void 0 : _a2.protocol) || null;
}
function _isOnline() {
  if (typeof navigator !== "undefined" && navigator && "onLine" in navigator && typeof navigator.onLine === "boolean" && (_isHttpOrHttps() || isBrowserExtension() || "connection" in navigator)) {
    return navigator.onLine;
  }
  return true;
}
function _getUserLanguage() {
  if (typeof navigator === "undefined") {
    return null;
  }
  const navigatorLanguage = navigator;
  return navigatorLanguage.languages && navigatorLanguage.languages[0] || navigatorLanguage.language || null;
}
function _emulatorUrl(config, path2) {
  debugAssert(config.emulator, "Emulator should always be set here");
  const { url } = config.emulator;
  if (!path2) {
    return url;
  }
  return `${url}${path2.startsWith("/") ? path2.slice(1) : path2}`;
}
function _addTidIfNecessary(auth, request) {
  if (auth.tenantId && !request.tenantId) {
    return Object.assign(Object.assign({}, request), { tenantId: auth.tenantId });
  }
  return request;
}
async function _performApiRequest(auth, method, path2, request, customErrorMap = {}) {
  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {
    let body = {};
    let params = {};
    if (request) {
      if (method === "GET") {
        params = request;
      } else {
        body = {
          body: JSON.stringify(request)
        };
      }
    }
    const query = querystring(Object.assign({ key: auth.config.apiKey }, params)).slice(1);
    const headers = await auth._getAdditionalHeaders();
    headers["Content-Type"] = "application/json";
    if (auth.languageCode) {
      headers["X-Firebase-Locale"] = auth.languageCode;
    }
    return FetchProvider.fetch()(_getFinalTarget(auth, auth.config.apiHost, path2, query), Object.assign({
      method,
      headers,
      referrerPolicy: "no-referrer"
    }, body));
  });
}
async function _performFetchWithErrorHandling(auth, customErrorMap, fetchFn) {
  auth._canInitEmulator = false;
  const errorMap = Object.assign(Object.assign({}, SERVER_ERROR_MAP), customErrorMap);
  try {
    const networkTimeout = new NetworkTimeout(auth);
    const response = await Promise.race([
      fetchFn(),
      networkTimeout.promise
    ]);
    networkTimeout.clearNetworkTimeout();
    const json = await response.json();
    if ("needConfirmation" in json) {
      throw _makeTaggedError(auth, "account-exists-with-different-credential", json);
    }
    if (response.ok && !("errorMessage" in json)) {
      return json;
    } else {
      const errorMessage = response.ok ? json.errorMessage : json.error.message;
      const [serverErrorCode, serverErrorMessage] = errorMessage.split(" : ");
      if (serverErrorCode === "FEDERATED_USER_ID_ALREADY_LINKED") {
        throw _makeTaggedError(auth, "credential-already-in-use", json);
      } else if (serverErrorCode === "EMAIL_EXISTS") {
        throw _makeTaggedError(auth, "email-already-in-use", json);
      } else if (serverErrorCode === "USER_DISABLED") {
        throw _makeTaggedError(auth, "user-disabled", json);
      }
      const authError = errorMap[serverErrorCode] || serverErrorCode.toLowerCase().replace(/[_\s]+/g, "-");
      if (serverErrorMessage) {
        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);
      } else {
        _fail(auth, authError);
      }
    }
  } catch (e7) {
    if (e7 instanceof FirebaseError) {
      throw e7;
    }
    _fail(auth, "network-request-failed");
  }
}
async function _performSignInRequest(auth, method, path2, request, customErrorMap = {}) {
  const serverResponse = await _performApiRequest(auth, method, path2, request, customErrorMap);
  if ("mfaPendingCredential" in serverResponse) {
    _fail(auth, "multi-factor-auth-required", {
      _serverResponse: serverResponse
    });
  }
  return serverResponse;
}
function _getFinalTarget(auth, host, path2, query) {
  const base = `${host}${path2}?${query}`;
  if (!auth.config.emulator) {
    return `${auth.config.apiScheme}://${base}`;
  }
  return _emulatorUrl(auth.config, base);
}
function _makeTaggedError(auth, code, response) {
  const errorParams = {
    appName: auth.name
  };
  if (response.email) {
    errorParams.email = response.email;
  }
  if (response.phoneNumber) {
    errorParams.phoneNumber = response.phoneNumber;
  }
  const error = _createError(auth, code, errorParams);
  error.customData._tokenResponse = response;
  return error;
}
async function deleteAccount(auth, request) {
  return _performApiRequest(auth, "POST", "/v1/accounts:delete", request);
}
async function getAccountInfo(auth, request) {
  return _performApiRequest(auth, "POST", "/v1/accounts:lookup", request);
}
function utcTimestampToDateString(utcTimestamp) {
  if (!utcTimestamp) {
    return void 0;
  }
  try {
    const date = new Date(Number(utcTimestamp));
    if (!isNaN(date.getTime())) {
      return date.toUTCString();
    }
  } catch (e7) {
  }
  return void 0;
}
async function getIdTokenResult(user, forceRefresh = false) {
  const userInternal = getModularInstance(user);
  const token = await userInternal.getIdToken(forceRefresh);
  const claims = _parseToken(token);
  _assert(claims && claims.exp && claims.auth_time && claims.iat, userInternal.auth, "internal-error");
  const firebase = typeof claims.firebase === "object" ? claims.firebase : void 0;
  const signInProvider = firebase === null || firebase === void 0 ? void 0 : firebase["sign_in_provider"];
  return {
    claims,
    token,
    authTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.auth_time)),
    issuedAtTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.iat)),
    expirationTime: utcTimestampToDateString(secondsStringToMilliseconds(claims.exp)),
    signInProvider: signInProvider || null,
    signInSecondFactor: (firebase === null || firebase === void 0 ? void 0 : firebase["sign_in_second_factor"]) || null
  };
}
function secondsStringToMilliseconds(seconds) {
  return Number(seconds) * 1e3;
}
function _parseToken(token) {
  const [algorithm, payload, signature] = token.split(".");
  if (algorithm === void 0 || payload === void 0 || signature === void 0) {
    _logError("JWT malformed, contained fewer than 3 sections");
    return null;
  }
  try {
    const decoded = base64Decode(payload);
    if (!decoded) {
      _logError("Failed to decode base64 JWT payload");
      return null;
    }
    return JSON.parse(decoded);
  } catch (e7) {
    _logError("Caught error parsing JWT payload as JSON", e7 === null || e7 === void 0 ? void 0 : e7.toString());
    return null;
  }
}
function _tokenExpiresIn(token) {
  const parsedToken = _parseToken(token);
  _assert(parsedToken, "internal-error");
  _assert(typeof parsedToken.exp !== "undefined", "internal-error");
  _assert(typeof parsedToken.iat !== "undefined", "internal-error");
  return Number(parsedToken.exp) - Number(parsedToken.iat);
}
async function _logoutIfInvalidated(user, promise, bypassAuthState = false) {
  if (bypassAuthState) {
    return promise;
  }
  try {
    return await promise;
  } catch (e7) {
    if (e7 instanceof FirebaseError && isUserInvalidated(e7)) {
      if (user.auth.currentUser === user) {
        await user.auth.signOut();
      }
    }
    throw e7;
  }
}
function isUserInvalidated({ code }) {
  return code === `auth/${"user-disabled"}` || code === `auth/${"user-token-expired"}`;
}
async function _reloadWithoutSaving(user) {
  var _a2;
  const auth = user.auth;
  const idToken = await user.getIdToken();
  const response = await _logoutIfInvalidated(user, getAccountInfo(auth, { idToken }));
  _assert(response === null || response === void 0 ? void 0 : response.users.length, auth, "internal-error");
  const coreAccount = response.users[0];
  user._notifyReloadListener(coreAccount);
  const newProviderData = ((_a2 = coreAccount.providerUserInfo) === null || _a2 === void 0 ? void 0 : _a2.length) ? extractProviderData(coreAccount.providerUserInfo) : [];
  const providerData = mergeProviderData(user.providerData, newProviderData);
  const oldIsAnonymous = user.isAnonymous;
  const newIsAnonymous = !(user.email && coreAccount.passwordHash) && !(providerData === null || providerData === void 0 ? void 0 : providerData.length);
  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;
  const updates = {
    uid: coreAccount.localId,
    displayName: coreAccount.displayName || null,
    photoURL: coreAccount.photoUrl || null,
    email: coreAccount.email || null,
    emailVerified: coreAccount.emailVerified || false,
    phoneNumber: coreAccount.phoneNumber || null,
    tenantId: coreAccount.tenantId || null,
    providerData,
    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),
    isAnonymous
  };
  Object.assign(user, updates);
}
async function reload(user) {
  const userInternal = getModularInstance(user);
  await _reloadWithoutSaving(userInternal);
  await userInternal.auth._persistUserIfCurrent(userInternal);
  userInternal.auth._notifyListenersIfCurrent(userInternal);
}
function mergeProviderData(original, newData) {
  const deduped = original.filter((o4) => !newData.some((n3) => n3.providerId === o4.providerId));
  return [...deduped, ...newData];
}
function extractProviderData(providers) {
  return providers.map((_a2) => {
    var { providerId } = _a2, provider = __rest(_a2, ["providerId"]);
    return {
      providerId,
      uid: provider.rawId || "",
      displayName: provider.displayName || null,
      email: provider.email || null,
      phoneNumber: provider.phoneNumber || null,
      photoURL: provider.photoUrl || null
    };
  });
}
async function requestStsToken(auth, refreshToken) {
  const response = await _performFetchWithErrorHandling(auth, {}, async () => {
    const body = querystring({
      "grant_type": "refresh_token",
      "refresh_token": refreshToken
    }).slice(1);
    const { tokenApiHost, apiKey } = auth.config;
    const url = _getFinalTarget(auth, tokenApiHost, "/v1/token", `key=${apiKey}`);
    const headers = await auth._getAdditionalHeaders();
    headers["Content-Type"] = "application/x-www-form-urlencoded";
    return FetchProvider.fetch()(url, {
      method: "POST",
      headers,
      body
    });
  });
  return {
    accessToken: response.access_token,
    expiresIn: response.expires_in,
    refreshToken: response.refresh_token
  };
}
function assertStringOrUndefined(assertion, appName) {
  _assert(typeof assertion === "string" || typeof assertion === "undefined", "internal-error", { appName });
}
function _persistenceKeyName(key, apiKey, appName) {
  return `${"firebase"}:${key}:${apiKey}:${appName}`;
}
function _getBrowserName(userAgent) {
  const ua = userAgent.toLowerCase();
  if (ua.includes("opera/") || ua.includes("opr/") || ua.includes("opios/")) {
    return "Opera";
  } else if (_isIEMobile(ua)) {
    return "IEMobile";
  } else if (ua.includes("msie") || ua.includes("trident/")) {
    return "IE";
  } else if (ua.includes("edge/")) {
    return "Edge";
  } else if (_isFirefox(ua)) {
    return "Firefox";
  } else if (ua.includes("silk/")) {
    return "Silk";
  } else if (_isBlackBerry(ua)) {
    return "Blackberry";
  } else if (_isWebOS(ua)) {
    return "Webos";
  } else if (_isSafari(ua)) {
    return "Safari";
  } else if ((ua.includes("chrome/") || _isChromeIOS(ua)) && !ua.includes("edge/")) {
    return "Chrome";
  } else if (_isAndroid(ua)) {
    return "Android";
  } else {
    const re3 = /([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/;
    const matches = userAgent.match(re3);
    if ((matches === null || matches === void 0 ? void 0 : matches.length) === 2) {
      return matches[1];
    }
  }
  return "Other";
}
function _isFirefox(ua = getUA()) {
  return /firefox\//i.test(ua);
}
function _isSafari(userAgent = getUA()) {
  const ua = userAgent.toLowerCase();
  return ua.includes("safari/") && !ua.includes("chrome/") && !ua.includes("crios/") && !ua.includes("android");
}
function _isChromeIOS(ua = getUA()) {
  return /crios\//i.test(ua);
}
function _isIEMobile(ua = getUA()) {
  return /iemobile/i.test(ua);
}
function _isAndroid(ua = getUA()) {
  return /android/i.test(ua);
}
function _isBlackBerry(ua = getUA()) {
  return /blackberry/i.test(ua);
}
function _isWebOS(ua = getUA()) {
  return /webos/i.test(ua);
}
function _isIOS(ua = getUA()) {
  return /iphone|ipad|ipod/i.test(ua) || /macintosh/i.test(ua) && /mobile/i.test(ua);
}
function _isIE10() {
  return isIE() && document.documentMode === 10;
}
function _isMobileBrowser(ua = getUA()) {
  return _isIOS(ua) || _isAndroid(ua) || _isWebOS(ua) || _isBlackBerry(ua) || /windows phone/i.test(ua) || _isIEMobile(ua);
}
function _isIframe() {
  try {
    return !!(window && window !== window.top);
  } catch (e7) {
    return false;
  }
}
function _getClientVersion(clientPlatform, frameworks = []) {
  let reportedPlatform;
  switch (clientPlatform) {
    case "Browser":
      reportedPlatform = _getBrowserName(getUA());
      break;
    case "Worker":
      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;
      break;
    default:
      reportedPlatform = clientPlatform;
  }
  const reportedFrameworks = frameworks.length ? frameworks.join(",") : "FirebaseCore-web";
  return `${reportedPlatform}/${"JsCore"}/${SDK_VERSION}/${reportedFrameworks}`;
}
function _castAuth(auth) {
  return getModularInstance(auth);
}
async function updateEmailPassword(auth, request) {
  return _performApiRequest(auth, "POST", "/v1/accounts:update", request);
}
async function signInWithPassword(auth, request) {
  return _performSignInRequest(auth, "POST", "/v1/accounts:signInWithPassword", _addTidIfNecessary(auth, request));
}
async function signInWithEmailLink$1(auth, request) {
  return _performSignInRequest(auth, "POST", "/v1/accounts:signInWithEmailLink", _addTidIfNecessary(auth, request));
}
async function signInWithEmailLinkForLinking(auth, request) {
  return _performSignInRequest(auth, "POST", "/v1/accounts:signInWithEmailLink", _addTidIfNecessary(auth, request));
}
async function signInWithIdp(auth, request) {
  return _performSignInRequest(auth, "POST", "/v1/accounts:signInWithIdp", _addTidIfNecessary(auth, request));
}
async function sendPhoneVerificationCode(auth, request) {
  return _performApiRequest(auth, "POST", "/v1/accounts:sendVerificationCode", _addTidIfNecessary(auth, request));
}
async function signInWithPhoneNumber$1(auth, request) {
  return _performSignInRequest(auth, "POST", "/v1/accounts:signInWithPhoneNumber", _addTidIfNecessary(auth, request));
}
async function linkWithPhoneNumber$1(auth, request) {
  const response = await _performSignInRequest(auth, "POST", "/v1/accounts:signInWithPhoneNumber", _addTidIfNecessary(auth, request));
  if (response.temporaryProof) {
    throw _makeTaggedError(auth, "account-exists-with-different-credential", response);
  }
  return response;
}
async function verifyPhoneNumberForExisting(auth, request) {
  const apiRequest = Object.assign(Object.assign({}, request), { operation: "REAUTH" });
  return _performSignInRequest(auth, "POST", "/v1/accounts:signInWithPhoneNumber", _addTidIfNecessary(auth, apiRequest), VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_);
}
function parseMode(mode) {
  switch (mode) {
    case "recoverEmail":
      return "RECOVER_EMAIL";
    case "resetPassword":
      return "PASSWORD_RESET";
    case "signIn":
      return "EMAIL_SIGNIN";
    case "verifyEmail":
      return "VERIFY_EMAIL";
    case "verifyAndChangeEmail":
      return "VERIFY_AND_CHANGE_EMAIL";
    case "revertSecondFactorAddition":
      return "REVERT_SECOND_FACTOR_ADDITION";
    default:
      return null;
  }
}
function parseDeepLink(url) {
  const link = querystringDecode(extractQuerystring(url))["link"];
  const doubleDeepLink = link ? querystringDecode(extractQuerystring(link))["deep_link_id"] : null;
  const iOSDeepLink = querystringDecode(extractQuerystring(url))["deep_link_id"];
  const iOSDoubleDeepLink = iOSDeepLink ? querystringDecode(extractQuerystring(iOSDeepLink))["link"] : null;
  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;
}
function providerIdForResponse(response) {
  if (response.providerId) {
    return response.providerId;
  }
  if ("phoneNumber" in response) {
    return "phone";
  }
  return null;
}
function _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user) {
  const idTokenProvider = operationType === "reauthenticate" ? credential._getReauthenticationResolver(auth) : credential._getIdTokenResponse(auth);
  return idTokenProvider.catch((error) => {
    if (error.code === `auth/${"multi-factor-auth-required"}`) {
      throw MultiFactorError._fromErrorAndOperation(auth, error, operationType, user);
    }
    throw error;
  });
}
async function _link$1(user, credential, bypassAuthState = false) {
  const response = await _logoutIfInvalidated(user, credential._linkToIdToken(user.auth, await user.getIdToken()), bypassAuthState);
  return UserCredentialImpl._forOperation(user, "link", response);
}
async function _reauthenticate(user, credential, bypassAuthState = false) {
  const { auth } = user;
  const operationType = "reauthenticate";
  try {
    const response = await _logoutIfInvalidated(user, _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential, user), bypassAuthState);
    _assert(response.idToken, auth, "internal-error");
    const parsed = _parseToken(response.idToken);
    _assert(parsed, auth, "internal-error");
    const { sub: localId } = parsed;
    _assert(user.uid === localId, auth, "user-mismatch");
    return UserCredentialImpl._forOperation(user, operationType, response);
  } catch (e7) {
    if ((e7 === null || e7 === void 0 ? void 0 : e7.code) === `auth/${"user-not-found"}`) {
      _fail(auth, "user-mismatch");
    }
    throw e7;
  }
}
async function _signInWithCredential(auth, credential, bypassAuthState = false) {
  const operationType = "signIn";
  const response = await _processCredentialSavingMfaContextIfNecessary(auth, operationType, credential);
  const userCredential = await UserCredentialImpl._fromIdTokenResponse(auth, operationType, response);
  if (!bypassAuthState) {
    await auth._updateCurrentUser(userCredential.user);
  }
  return userCredential;
}
function startEnrollPhoneMfa(auth, request) {
  return _performApiRequest(auth, "POST", "/v2/accounts/mfaEnrollment:start", _addTidIfNecessary(auth, request));
}
function finalizeEnrollPhoneMfa(auth, request) {
  return _performApiRequest(auth, "POST", "/v2/accounts/mfaEnrollment:finalize", _addTidIfNecessary(auth, request));
}
function _iframeCannotSyncWebStorage() {
  const ua = getUA();
  return _isSafari(ua) || _isIOS(ua);
}
function _allSettled(promises) {
  return Promise.all(promises.map(async (promise) => {
    try {
      const value = await promise;
      return {
        fulfilled: true,
        value
      };
    } catch (reason) {
      return {
        fulfilled: false,
        reason
      };
    }
  }));
}
function _generateEventId(prefix = "", digits = 10) {
  let random = "";
  for (let i4 = 0; i4 < digits; i4++) {
    random += Math.floor(Math.random() * 10);
  }
  return prefix + random;
}
function _window() {
  return window;
}
function _isWorker() {
  return typeof _window()["WorkerGlobalScope"] !== "undefined" && typeof _window()["importScripts"] === "function";
}
async function _getActiveServiceWorker() {
  if (!(navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker)) {
    return null;
  }
  try {
    const registration = await navigator.serviceWorker.ready;
    return registration.active;
  } catch (_a2) {
    return null;
  }
}
function _getServiceWorkerController() {
  var _a2;
  return ((_a2 = navigator === null || navigator === void 0 ? void 0 : navigator.serviceWorker) === null || _a2 === void 0 ? void 0 : _a2.controller) || null;
}
function _getWorkerGlobalScope() {
  return _isWorker() ? self : null;
}
function getObjectStore(db, isReadWrite) {
  return db.transaction([DB_OBJECTSTORE_NAME], isReadWrite ? "readwrite" : "readonly").objectStore(DB_OBJECTSTORE_NAME);
}
function _deleteDatabase() {
  const request = indexedDB.deleteDatabase(DB_NAME2);
  return new DBPromise(request).toPromise();
}
function _openDatabase() {
  const request = indexedDB.open(DB_NAME2, DB_VERSION2);
  return new Promise((resolve, reject) => {
    request.addEventListener("error", () => {
      reject(request.error);
    });
    request.addEventListener("upgradeneeded", () => {
      const db = request.result;
      try {
        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });
      } catch (e7) {
        reject(e7);
      }
    });
    request.addEventListener("success", async () => {
      const db = request.result;
      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {
        db.close();
        await _deleteDatabase();
        resolve(await _openDatabase());
      } else {
        resolve(db);
      }
    });
  });
}
async function _putObject(db, key, value) {
  const request = getObjectStore(db, true).put({
    [DB_DATA_KEYPATH]: key,
    value
  });
  return new DBPromise(request).toPromise();
}
async function getObject(db, key) {
  const request = getObjectStore(db, false).get(key);
  const data = await new DBPromise(request).toPromise();
  return data === void 0 ? null : data.value;
}
function _deleteObject(db, key) {
  const request = getObjectStore(db, true).delete(key);
  return new DBPromise(request).toPromise();
}
function startSignInPhoneMfa(auth, request) {
  return _performApiRequest(auth, "POST", "/v2/accounts/mfaSignIn:start", _addTidIfNecessary(auth, request));
}
function finalizeSignInPhoneMfa(auth, request) {
  return _performApiRequest(auth, "POST", "/v2/accounts/mfaSignIn:finalize", _addTidIfNecessary(auth, request));
}
function _generateCallbackName(prefix) {
  return `__${prefix}${Math.floor(Math.random() * 1e6)}`;
}
async function _verifyPhoneNumber(auth, options, verifier) {
  var _a2;
  const recaptchaToken = await verifier.verify();
  try {
    _assert(typeof recaptchaToken === "string", auth, "argument-error");
    _assert(verifier.type === RECAPTCHA_VERIFIER_TYPE, auth, "argument-error");
    let phoneInfoOptions;
    if (typeof options === "string") {
      phoneInfoOptions = {
        phoneNumber: options
      };
    } else {
      phoneInfoOptions = options;
    }
    if ("session" in phoneInfoOptions) {
      const session = phoneInfoOptions.session;
      if ("phoneNumber" in phoneInfoOptions) {
        _assert(session.type === "enroll", auth, "internal-error");
        const response = await startEnrollPhoneMfa(auth, {
          idToken: session.credential,
          phoneEnrollmentInfo: {
            phoneNumber: phoneInfoOptions.phoneNumber,
            recaptchaToken
          }
        });
        return response.phoneSessionInfo.sessionInfo;
      } else {
        _assert(session.type === "signin", auth, "internal-error");
        const mfaEnrollmentId = ((_a2 = phoneInfoOptions.multiFactorHint) === null || _a2 === void 0 ? void 0 : _a2.uid) || phoneInfoOptions.multiFactorUid;
        _assert(mfaEnrollmentId, auth, "missing-multi-factor-info");
        const response = await startSignInPhoneMfa(auth, {
          mfaPendingCredential: session.credential,
          mfaEnrollmentId,
          phoneSignInInfo: {
            recaptchaToken
          }
        });
        return response.phoneResponseInfo.sessionInfo;
      }
    } else {
      const { sessionInfo } = await sendPhoneVerificationCode(auth, {
        phoneNumber: phoneInfoOptions.phoneNumber,
        recaptchaToken
      });
      return sessionInfo;
    }
  } finally {
    verifier._reset();
  }
}
function _signIn(params) {
  return _signInWithCredential(params.auth, new IdpCredential(params), params.bypassAuthState);
}
function _reauth(params) {
  const { auth, user } = params;
  _assert(user, auth, "internal-error");
  return _reauthenticate(user, new IdpCredential(params), params.bypassAuthState);
}
async function _link(params) {
  const { auth, user } = params;
  _assert(user, auth, "internal-error");
  return _link$1(user, new IdpCredential(params), params.bypassAuthState);
}
function getVersionForPlatform(clientPlatform) {
  switch (clientPlatform) {
    case "Node":
      return "node";
    case "ReactNative":
      return "rn";
    case "Worker":
      return "webworker";
    case "Cordova":
      return "cordova";
    default:
      return void 0;
  }
}
function registerAuth(clientPlatform) {
  _registerComponent(new Component("auth", (container, { options: deps }) => {
    const app = container.getProvider("app").getImmediate();
    const heartbeatServiceProvider = container.getProvider("heartbeat");
    const { apiKey, authDomain } = app.options;
    return ((app2, heartbeatServiceProvider2) => {
      _assert(apiKey && !apiKey.includes(":"), "invalid-api-key", { appName: app2.name });
      _assert(!(authDomain === null || authDomain === void 0 ? void 0 : authDomain.includes(":")), "argument-error", {
        appName: app2.name
      });
      const config = {
        apiKey,
        authDomain,
        clientPlatform,
        apiHost: "identitytoolkit.googleapis.com",
        tokenApiHost: "securetoken.googleapis.com",
        apiScheme: "https",
        sdkClientVersion: _getClientVersion(clientPlatform)
      };
      const authInstance = new AuthImpl(app2, heartbeatServiceProvider2, config);
      _initializeAuthInstance(authInstance, deps);
      return authInstance;
    })(app, heartbeatServiceProvider);
  }, "PUBLIC").setInstantiationMode("EXPLICIT").setInstanceCreatedCallback((container, _instanceIdentifier, _instance) => {
    const authInternalProvider = container.getProvider("auth-internal");
    authInternalProvider.initialize();
  }));
  _registerComponent(new Component("auth-internal", (container) => {
    const auth = _castAuth(container.getProvider("auth").getImmediate());
    return ((auth2) => new AuthInterop(auth2))(auth);
  }, "PRIVATE").setInstantiationMode("EXPLICIT"));
  registerVersion(name3, version3, getVersionForPlatform(clientPlatform));
  registerVersion(name3, version3, "esm2017");
}
var prodErrorMap, _DEFAULT_AUTH_ERROR_FACTORY, logClient, instanceCache, Delay, FetchProvider, SERVER_ERROR_MAP, DEFAULT_API_TIMEOUT_MS, NetworkTimeout, ProactiveRefresh, UserMetadata, StsTokenManager, UserImpl, InMemoryPersistence, inMemoryPersistence, PersistenceUserManager, AuthMiddlewareQueue, AuthImpl, Subscription, AuthCredential, EmailAuthCredential, IDP_REQUEST_URI$1, OAuthCredential, VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_, PhoneAuthCredential, ActionCodeURL, EmailAuthProvider, FederatedAuthProvider, BaseOAuthProvider, FacebookAuthProvider, GoogleAuthProvider, GithubAuthProvider, TwitterAuthProvider, UserCredentialImpl, MultiFactorError, STORAGE_AVAILABLE_KEY, BrowserPersistenceClass, _POLLING_INTERVAL_MS$1, IE10_LOCAL_STORAGE_SYNC_DELAY, BrowserLocalPersistence, browserLocalPersistence, BrowserSessionPersistence, browserSessionPersistence, Receiver, Sender, DB_NAME2, DB_VERSION2, DB_OBJECTSTORE_NAME, DB_DATA_KEYPATH, DBPromise, _POLLING_INTERVAL_MS, _TRANSACTION_RETRY_COUNT, IndexedDBLocalPersistence, indexedDBLocalPersistence, _JSLOAD_CALLBACK, NETWORK_TIMEOUT_DELAY, RECAPTCHA_VERIFIER_TYPE, PhoneAuthProvider, IdpCredential, AbstractPopupRedirectOperation, _POLL_WINDOW_CLOSE_TIMEOUT, PopupOperation, EVENT_DUPLICATION_CACHE_DURATION_MS, NETWORK_TIMEOUT, PING_TIMEOUT, MultiFactorAssertionImpl, PhoneMultiFactorAssertionImpl, PhoneMultiFactorGenerator, name3, version3, AuthInterop, DEFAULT_ID_TOKEN_MAX_AGE, authIdTokenMaxAge;
var init_index_c6def6da = __esm({
  "node_modules/@firebase/auth/dist/esm2017/index-c6def6da.js"() {
    init_index_esm2017();
    init_index_esm20174();
    init_index_esm20173();
    init_modules();
    init_index_esm20172();
    prodErrorMap = _prodErrorMap;
    _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory("auth", "Firebase", _prodErrorMap());
    logClient = new Logger("@firebase/auth");
    instanceCache = /* @__PURE__ */ new Map();
    Delay = class {
      constructor(shortDelay, longDelay) {
        this.shortDelay = shortDelay;
        this.longDelay = longDelay;
        debugAssert(longDelay > shortDelay, "Short delay should be less than long delay!");
        this.isMobile = isMobileCordova() || isReactNative();
      }
      get() {
        if (!_isOnline()) {
          return Math.min(5e3, this.shortDelay);
        }
        return this.isMobile ? this.longDelay : this.shortDelay;
      }
    };
    FetchProvider = class {
      static initialize(fetchImpl, headersImpl, responseImpl) {
        this.fetchImpl = fetchImpl;
        if (headersImpl) {
          this.headersImpl = headersImpl;
        }
        if (responseImpl) {
          this.responseImpl = responseImpl;
        }
      }
      static fetch() {
        if (this.fetchImpl) {
          return this.fetchImpl;
        }
        if (typeof self !== "undefined" && "fetch" in self) {
          return self.fetch;
        }
        debugFail("Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill");
      }
      static headers() {
        if (this.headersImpl) {
          return this.headersImpl;
        }
        if (typeof self !== "undefined" && "Headers" in self) {
          return self.Headers;
        }
        debugFail("Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill");
      }
      static response() {
        if (this.responseImpl) {
          return this.responseImpl;
        }
        if (typeof self !== "undefined" && "Response" in self) {
          return self.Response;
        }
        debugFail("Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill");
      }
    };
    SERVER_ERROR_MAP = {
      ["CREDENTIAL_MISMATCH"]: "custom-token-mismatch",
      ["MISSING_CUSTOM_TOKEN"]: "internal-error",
      ["INVALID_IDENTIFIER"]: "invalid-email",
      ["MISSING_CONTINUE_URI"]: "internal-error",
      ["INVALID_PASSWORD"]: "wrong-password",
      ["MISSING_PASSWORD"]: "internal-error",
      ["EMAIL_EXISTS"]: "email-already-in-use",
      ["PASSWORD_LOGIN_DISABLED"]: "operation-not-allowed",
      ["INVALID_IDP_RESPONSE"]: "invalid-credential",
      ["INVALID_PENDING_TOKEN"]: "invalid-credential",
      ["FEDERATED_USER_ID_ALREADY_LINKED"]: "credential-already-in-use",
      ["MISSING_REQ_TYPE"]: "internal-error",
      ["EMAIL_NOT_FOUND"]: "user-not-found",
      ["RESET_PASSWORD_EXCEED_LIMIT"]: "too-many-requests",
      ["EXPIRED_OOB_CODE"]: "expired-action-code",
      ["INVALID_OOB_CODE"]: "invalid-action-code",
      ["MISSING_OOB_CODE"]: "internal-error",
      ["CREDENTIAL_TOO_OLD_LOGIN_AGAIN"]: "requires-recent-login",
      ["INVALID_ID_TOKEN"]: "invalid-user-token",
      ["TOKEN_EXPIRED"]: "user-token-expired",
      ["USER_NOT_FOUND"]: "user-token-expired",
      ["TOO_MANY_ATTEMPTS_TRY_LATER"]: "too-many-requests",
      ["INVALID_CODE"]: "invalid-verification-code",
      ["INVALID_SESSION_INFO"]: "invalid-verification-id",
      ["INVALID_TEMPORARY_PROOF"]: "invalid-credential",
      ["MISSING_SESSION_INFO"]: "missing-verification-id",
      ["SESSION_EXPIRED"]: "code-expired",
      ["MISSING_ANDROID_PACKAGE_NAME"]: "missing-android-pkg-name",
      ["UNAUTHORIZED_DOMAIN"]: "unauthorized-continue-uri",
      ["INVALID_OAUTH_CLIENT_ID"]: "invalid-oauth-client-id",
      ["ADMIN_ONLY_OPERATION"]: "admin-restricted-operation",
      ["INVALID_MFA_PENDING_CREDENTIAL"]: "invalid-multi-factor-session",
      ["MFA_ENROLLMENT_NOT_FOUND"]: "multi-factor-info-not-found",
      ["MISSING_MFA_ENROLLMENT_ID"]: "missing-multi-factor-info",
      ["MISSING_MFA_PENDING_CREDENTIAL"]: "missing-multi-factor-session",
      ["SECOND_FACTOR_EXISTS"]: "second-factor-already-in-use",
      ["SECOND_FACTOR_LIMIT_EXCEEDED"]: "maximum-second-factor-count-exceeded",
      ["BLOCKING_FUNCTION_ERROR_RESPONSE"]: "internal-error"
    };
    DEFAULT_API_TIMEOUT_MS = new Delay(3e4, 6e4);
    NetworkTimeout = class {
      constructor(auth) {
        this.auth = auth;
        this.timer = null;
        this.promise = new Promise((_6, reject) => {
          this.timer = setTimeout(() => {
            return reject(_createError(this.auth, "network-request-failed"));
          }, DEFAULT_API_TIMEOUT_MS.get());
        });
      }
      clearNetworkTimeout() {
        clearTimeout(this.timer);
      }
    };
    ProactiveRefresh = class {
      constructor(user) {
        this.user = user;
        this.isRunning = false;
        this.timerId = null;
        this.errorBackoff = 3e4;
      }
      _start() {
        if (this.isRunning) {
          return;
        }
        this.isRunning = true;
        this.schedule();
      }
      _stop() {
        if (!this.isRunning) {
          return;
        }
        this.isRunning = false;
        if (this.timerId !== null) {
          clearTimeout(this.timerId);
        }
      }
      getInterval(wasError) {
        var _a2;
        if (wasError) {
          const interval = this.errorBackoff;
          this.errorBackoff = Math.min(this.errorBackoff * 2, 96e4);
          return interval;
        } else {
          this.errorBackoff = 3e4;
          const expTime = (_a2 = this.user.stsTokenManager.expirationTime) !== null && _a2 !== void 0 ? _a2 : 0;
          const interval = expTime - Date.now() - 3e5;
          return Math.max(0, interval);
        }
      }
      schedule(wasError = false) {
        if (!this.isRunning) {
          return;
        }
        const interval = this.getInterval(wasError);
        this.timerId = setTimeout(async () => {
          await this.iteration();
        }, interval);
      }
      async iteration() {
        try {
          await this.user.getIdToken(true);
        } catch (e7) {
          if ((e7 === null || e7 === void 0 ? void 0 : e7.code) === `auth/${"network-request-failed"}`) {
            this.schedule(true);
          }
          return;
        }
        this.schedule();
      }
    };
    UserMetadata = class {
      constructor(createdAt, lastLoginAt) {
        this.createdAt = createdAt;
        this.lastLoginAt = lastLoginAt;
        this._initializeTime();
      }
      _initializeTime() {
        this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);
        this.creationTime = utcTimestampToDateString(this.createdAt);
      }
      _copy(metadata) {
        this.createdAt = metadata.createdAt;
        this.lastLoginAt = metadata.lastLoginAt;
        this._initializeTime();
      }
      toJSON() {
        return {
          createdAt: this.createdAt,
          lastLoginAt: this.lastLoginAt
        };
      }
    };
    StsTokenManager = class {
      constructor() {
        this.refreshToken = null;
        this.accessToken = null;
        this.expirationTime = null;
      }
      get isExpired() {
        return !this.expirationTime || Date.now() > this.expirationTime - 3e4;
      }
      updateFromServerResponse(response) {
        _assert(response.idToken, "internal-error");
        _assert(typeof response.idToken !== "undefined", "internal-error");
        _assert(typeof response.refreshToken !== "undefined", "internal-error");
        const expiresIn = "expiresIn" in response && typeof response.expiresIn !== "undefined" ? Number(response.expiresIn) : _tokenExpiresIn(response.idToken);
        this.updateTokensAndExpiration(response.idToken, response.refreshToken, expiresIn);
      }
      async getToken(auth, forceRefresh = false) {
        _assert(!this.accessToken || this.refreshToken, auth, "user-token-expired");
        if (!forceRefresh && this.accessToken && !this.isExpired) {
          return this.accessToken;
        }
        if (this.refreshToken) {
          await this.refresh(auth, this.refreshToken);
          return this.accessToken;
        }
        return null;
      }
      clearRefreshToken() {
        this.refreshToken = null;
      }
      async refresh(auth, oldToken) {
        const { accessToken, refreshToken, expiresIn } = await requestStsToken(auth, oldToken);
        this.updateTokensAndExpiration(accessToken, refreshToken, Number(expiresIn));
      }
      updateTokensAndExpiration(accessToken, refreshToken, expiresInSec) {
        this.refreshToken = refreshToken || null;
        this.accessToken = accessToken || null;
        this.expirationTime = Date.now() + expiresInSec * 1e3;
      }
      static fromJSON(appName, object) {
        const { refreshToken, accessToken, expirationTime } = object;
        const manager = new StsTokenManager();
        if (refreshToken) {
          _assert(typeof refreshToken === "string", "internal-error", {
            appName
          });
          manager.refreshToken = refreshToken;
        }
        if (accessToken) {
          _assert(typeof accessToken === "string", "internal-error", {
            appName
          });
          manager.accessToken = accessToken;
        }
        if (expirationTime) {
          _assert(typeof expirationTime === "number", "internal-error", {
            appName
          });
          manager.expirationTime = expirationTime;
        }
        return manager;
      }
      toJSON() {
        return {
          refreshToken: this.refreshToken,
          accessToken: this.accessToken,
          expirationTime: this.expirationTime
        };
      }
      _assign(stsTokenManager) {
        this.accessToken = stsTokenManager.accessToken;
        this.refreshToken = stsTokenManager.refreshToken;
        this.expirationTime = stsTokenManager.expirationTime;
      }
      _clone() {
        return Object.assign(new StsTokenManager(), this.toJSON());
      }
      _performRefresh() {
        return debugFail("not implemented");
      }
    };
    UserImpl = class {
      constructor(_a2) {
        var { uid, auth, stsTokenManager } = _a2, opt = __rest(_a2, ["uid", "auth", "stsTokenManager"]);
        this.providerId = "firebase";
        this.proactiveRefresh = new ProactiveRefresh(this);
        this.reloadUserInfo = null;
        this.reloadListener = null;
        this.uid = uid;
        this.auth = auth;
        this.stsTokenManager = stsTokenManager;
        this.accessToken = stsTokenManager.accessToken;
        this.displayName = opt.displayName || null;
        this.email = opt.email || null;
        this.emailVerified = opt.emailVerified || false;
        this.phoneNumber = opt.phoneNumber || null;
        this.photoURL = opt.photoURL || null;
        this.isAnonymous = opt.isAnonymous || false;
        this.tenantId = opt.tenantId || null;
        this.providerData = opt.providerData ? [...opt.providerData] : [];
        this.metadata = new UserMetadata(opt.createdAt || void 0, opt.lastLoginAt || void 0);
      }
      async getIdToken(forceRefresh) {
        const accessToken = await _logoutIfInvalidated(this, this.stsTokenManager.getToken(this.auth, forceRefresh));
        _assert(accessToken, this.auth, "internal-error");
        if (this.accessToken !== accessToken) {
          this.accessToken = accessToken;
          await this.auth._persistUserIfCurrent(this);
          this.auth._notifyListenersIfCurrent(this);
        }
        return accessToken;
      }
      getIdTokenResult(forceRefresh) {
        return getIdTokenResult(this, forceRefresh);
      }
      reload() {
        return reload(this);
      }
      _assign(user) {
        if (this === user) {
          return;
        }
        _assert(this.uid === user.uid, this.auth, "internal-error");
        this.displayName = user.displayName;
        this.photoURL = user.photoURL;
        this.email = user.email;
        this.emailVerified = user.emailVerified;
        this.phoneNumber = user.phoneNumber;
        this.isAnonymous = user.isAnonymous;
        this.tenantId = user.tenantId;
        this.providerData = user.providerData.map((userInfo) => Object.assign({}, userInfo));
        this.metadata._copy(user.metadata);
        this.stsTokenManager._assign(user.stsTokenManager);
      }
      _clone(auth) {
        return new UserImpl(Object.assign(Object.assign({}, this), { auth, stsTokenManager: this.stsTokenManager._clone() }));
      }
      _onReload(callback) {
        _assert(!this.reloadListener, this.auth, "internal-error");
        this.reloadListener = callback;
        if (this.reloadUserInfo) {
          this._notifyReloadListener(this.reloadUserInfo);
          this.reloadUserInfo = null;
        }
      }
      _notifyReloadListener(userInfo) {
        if (this.reloadListener) {
          this.reloadListener(userInfo);
        } else {
          this.reloadUserInfo = userInfo;
        }
      }
      _startProactiveRefresh() {
        this.proactiveRefresh._start();
      }
      _stopProactiveRefresh() {
        this.proactiveRefresh._stop();
      }
      async _updateTokensIfNecessary(response, reload2 = false) {
        let tokensRefreshed = false;
        if (response.idToken && response.idToken !== this.stsTokenManager.accessToken) {
          this.stsTokenManager.updateFromServerResponse(response);
          tokensRefreshed = true;
        }
        if (reload2) {
          await _reloadWithoutSaving(this);
        }
        await this.auth._persistUserIfCurrent(this);
        if (tokensRefreshed) {
          this.auth._notifyListenersIfCurrent(this);
        }
      }
      async delete() {
        const idToken = await this.getIdToken();
        await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));
        this.stsTokenManager.clearRefreshToken();
        return this.auth.signOut();
      }
      toJSON() {
        return Object.assign(Object.assign({
          uid: this.uid,
          email: this.email || void 0,
          emailVerified: this.emailVerified,
          displayName: this.displayName || void 0,
          isAnonymous: this.isAnonymous,
          photoURL: this.photoURL || void 0,
          phoneNumber: this.phoneNumber || void 0,
          tenantId: this.tenantId || void 0,
          providerData: this.providerData.map((userInfo) => Object.assign({}, userInfo)),
          stsTokenManager: this.stsTokenManager.toJSON(),
          _redirectEventId: this._redirectEventId
        }, this.metadata.toJSON()), {
          apiKey: this.auth.config.apiKey,
          appName: this.auth.name
        });
      }
      get refreshToken() {
        return this.stsTokenManager.refreshToken || "";
      }
      static _fromJSON(auth, object) {
        var _a2, _b, _c, _d, _e5, _f, _g, _h;
        const displayName = (_a2 = object.displayName) !== null && _a2 !== void 0 ? _a2 : void 0;
        const email = (_b = object.email) !== null && _b !== void 0 ? _b : void 0;
        const phoneNumber = (_c = object.phoneNumber) !== null && _c !== void 0 ? _c : void 0;
        const photoURL = (_d = object.photoURL) !== null && _d !== void 0 ? _d : void 0;
        const tenantId = (_e5 = object.tenantId) !== null && _e5 !== void 0 ? _e5 : void 0;
        const _redirectEventId = (_f = object._redirectEventId) !== null && _f !== void 0 ? _f : void 0;
        const createdAt = (_g = object.createdAt) !== null && _g !== void 0 ? _g : void 0;
        const lastLoginAt = (_h = object.lastLoginAt) !== null && _h !== void 0 ? _h : void 0;
        const { uid, emailVerified, isAnonymous, providerData, stsTokenManager: plainObjectTokenManager } = object;
        _assert(uid && plainObjectTokenManager, auth, "internal-error");
        const stsTokenManager = StsTokenManager.fromJSON(this.name, plainObjectTokenManager);
        _assert(typeof uid === "string", auth, "internal-error");
        assertStringOrUndefined(displayName, auth.name);
        assertStringOrUndefined(email, auth.name);
        _assert(typeof emailVerified === "boolean", auth, "internal-error");
        _assert(typeof isAnonymous === "boolean", auth, "internal-error");
        assertStringOrUndefined(phoneNumber, auth.name);
        assertStringOrUndefined(photoURL, auth.name);
        assertStringOrUndefined(tenantId, auth.name);
        assertStringOrUndefined(_redirectEventId, auth.name);
        assertStringOrUndefined(createdAt, auth.name);
        assertStringOrUndefined(lastLoginAt, auth.name);
        const user = new UserImpl({
          uid,
          auth,
          email,
          emailVerified,
          displayName,
          isAnonymous,
          photoURL,
          phoneNumber,
          tenantId,
          stsTokenManager,
          createdAt,
          lastLoginAt
        });
        if (providerData && Array.isArray(providerData)) {
          user.providerData = providerData.map((userInfo) => Object.assign({}, userInfo));
        }
        if (_redirectEventId) {
          user._redirectEventId = _redirectEventId;
        }
        return user;
      }
      static async _fromIdTokenResponse(auth, idTokenResponse, isAnonymous = false) {
        const stsTokenManager = new StsTokenManager();
        stsTokenManager.updateFromServerResponse(idTokenResponse);
        const user = new UserImpl({
          uid: idTokenResponse.localId,
          auth,
          stsTokenManager,
          isAnonymous
        });
        await _reloadWithoutSaving(user);
        return user;
      }
    };
    InMemoryPersistence = class {
      constructor() {
        this.type = "NONE";
        this.storage = {};
      }
      async _isAvailable() {
        return true;
      }
      async _set(key, value) {
        this.storage[key] = value;
      }
      async _get(key) {
        const value = this.storage[key];
        return value === void 0 ? null : value;
      }
      async _remove(key) {
        delete this.storage[key];
      }
      _addListener(_key, _listener) {
        return;
      }
      _removeListener(_key, _listener) {
        return;
      }
    };
    InMemoryPersistence.type = "NONE";
    inMemoryPersistence = InMemoryPersistence;
    PersistenceUserManager = class {
      constructor(persistence, auth, userKey) {
        this.persistence = persistence;
        this.auth = auth;
        this.userKey = userKey;
        const { config, name: name5 } = this.auth;
        this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name5);
        this.fullPersistenceKey = _persistenceKeyName("persistence", config.apiKey, name5);
        this.boundEventHandler = auth._onStorageEvent.bind(auth);
        this.persistence._addListener(this.fullUserKey, this.boundEventHandler);
      }
      setCurrentUser(user) {
        return this.persistence._set(this.fullUserKey, user.toJSON());
      }
      async getCurrentUser() {
        const blob = await this.persistence._get(this.fullUserKey);
        return blob ? UserImpl._fromJSON(this.auth, blob) : null;
      }
      removeCurrentUser() {
        return this.persistence._remove(this.fullUserKey);
      }
      savePersistenceForRedirect() {
        return this.persistence._set(this.fullPersistenceKey, this.persistence.type);
      }
      async setPersistence(newPersistence) {
        if (this.persistence === newPersistence) {
          return;
        }
        const currentUser = await this.getCurrentUser();
        await this.removeCurrentUser();
        this.persistence = newPersistence;
        if (currentUser) {
          return this.setCurrentUser(currentUser);
        }
      }
      delete() {
        this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);
      }
      static async create(auth, persistenceHierarchy, userKey = "authUser") {
        if (!persistenceHierarchy.length) {
          return new PersistenceUserManager(_getInstance(inMemoryPersistence), auth, userKey);
        }
        const availablePersistences = (await Promise.all(persistenceHierarchy.map(async (persistence) => {
          if (await persistence._isAvailable()) {
            return persistence;
          }
          return void 0;
        }))).filter((persistence) => persistence);
        let selectedPersistence = availablePersistences[0] || _getInstance(inMemoryPersistence);
        const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);
        let userToMigrate = null;
        for (const persistence of persistenceHierarchy) {
          try {
            const blob = await persistence._get(key);
            if (blob) {
              const user = UserImpl._fromJSON(auth, blob);
              if (persistence !== selectedPersistence) {
                userToMigrate = user;
              }
              selectedPersistence = persistence;
              break;
            }
          } catch (_a2) {
          }
        }
        const migrationHierarchy = availablePersistences.filter((p6) => p6._shouldAllowMigration);
        if (!selectedPersistence._shouldAllowMigration || !migrationHierarchy.length) {
          return new PersistenceUserManager(selectedPersistence, auth, userKey);
        }
        selectedPersistence = migrationHierarchy[0];
        if (userToMigrate) {
          await selectedPersistence._set(key, userToMigrate.toJSON());
        }
        await Promise.all(persistenceHierarchy.map(async (persistence) => {
          if (persistence !== selectedPersistence) {
            try {
              await persistence._remove(key);
            } catch (_a2) {
            }
          }
        }));
        return new PersistenceUserManager(selectedPersistence, auth, userKey);
      }
    };
    AuthMiddlewareQueue = class {
      constructor(auth) {
        this.auth = auth;
        this.queue = [];
      }
      pushCallback(callback, onAbort) {
        const wrappedCallback = (user) => new Promise((resolve, reject) => {
          try {
            const result = callback(user);
            resolve(result);
          } catch (e7) {
            reject(e7);
          }
        });
        wrappedCallback.onAbort = onAbort;
        this.queue.push(wrappedCallback);
        const index16 = this.queue.length - 1;
        return () => {
          this.queue[index16] = () => Promise.resolve();
        };
      }
      async runMiddleware(nextUser) {
        if (this.auth.currentUser === nextUser) {
          return;
        }
        const onAbortStack = [];
        try {
          for (const beforeStateCallback of this.queue) {
            await beforeStateCallback(nextUser);
            if (beforeStateCallback.onAbort) {
              onAbortStack.push(beforeStateCallback.onAbort);
            }
          }
        } catch (e7) {
          onAbortStack.reverse();
          for (const onAbort of onAbortStack) {
            try {
              onAbort();
            } catch (_6) {
            }
          }
          throw this.auth._errorFactory.create("login-blocked", {
            originalMessage: e7 === null || e7 === void 0 ? void 0 : e7.message
          });
        }
      }
    };
    AuthImpl = class {
      constructor(app, heartbeatServiceProvider, config) {
        this.app = app;
        this.heartbeatServiceProvider = heartbeatServiceProvider;
        this.config = config;
        this.currentUser = null;
        this.emulatorConfig = null;
        this.operations = Promise.resolve();
        this.authStateSubscription = new Subscription(this);
        this.idTokenSubscription = new Subscription(this);
        this.beforeStateQueue = new AuthMiddlewareQueue(this);
        this.redirectUser = null;
        this.isProactiveRefreshEnabled = false;
        this._canInitEmulator = true;
        this._isInitialized = false;
        this._deleted = false;
        this._initializationPromise = null;
        this._popupRedirectResolver = null;
        this._errorFactory = _DEFAULT_AUTH_ERROR_FACTORY;
        this.lastNotifiedUid = void 0;
        this.languageCode = null;
        this.tenantId = null;
        this.settings = { appVerificationDisabledForTesting: false };
        this.frameworks = [];
        this.name = app.name;
        this.clientVersion = config.sdkClientVersion;
      }
      _initializeWithPersistence(persistenceHierarchy, popupRedirectResolver) {
        if (popupRedirectResolver) {
          this._popupRedirectResolver = _getInstance(popupRedirectResolver);
        }
        this._initializationPromise = this.queue(async () => {
          var _a2, _b;
          if (this._deleted) {
            return;
          }
          this.persistenceManager = await PersistenceUserManager.create(this, persistenceHierarchy);
          if (this._deleted) {
            return;
          }
          if ((_a2 = this._popupRedirectResolver) === null || _a2 === void 0 ? void 0 : _a2._shouldInitProactively) {
            try {
              await this._popupRedirectResolver._initialize(this);
            } catch (e7) {
            }
          }
          await this.initializeCurrentUser(popupRedirectResolver);
          this.lastNotifiedUid = ((_b = this.currentUser) === null || _b === void 0 ? void 0 : _b.uid) || null;
          if (this._deleted) {
            return;
          }
          this._isInitialized = true;
        });
        return this._initializationPromise;
      }
      async _onStorageEvent() {
        if (this._deleted) {
          return;
        }
        const user = await this.assertedPersistence.getCurrentUser();
        if (!this.currentUser && !user) {
          return;
        }
        if (this.currentUser && user && this.currentUser.uid === user.uid) {
          this._currentUser._assign(user);
          await this.currentUser.getIdToken();
          return;
        }
        await this._updateCurrentUser(user, true);
      }
      async initializeCurrentUser(popupRedirectResolver) {
        var _a2;
        const previouslyStoredUser = await this.assertedPersistence.getCurrentUser();
        let futureCurrentUser = previouslyStoredUser;
        let needsTocheckMiddleware = false;
        if (popupRedirectResolver && this.config.authDomain) {
          await this.getOrInitRedirectPersistenceManager();
          const redirectUserEventId = (_a2 = this.redirectUser) === null || _a2 === void 0 ? void 0 : _a2._redirectEventId;
          const storedUserEventId = futureCurrentUser === null || futureCurrentUser === void 0 ? void 0 : futureCurrentUser._redirectEventId;
          const result = await this.tryRedirectSignIn(popupRedirectResolver);
          if ((!redirectUserEventId || redirectUserEventId === storedUserEventId) && (result === null || result === void 0 ? void 0 : result.user)) {
            futureCurrentUser = result.user;
            needsTocheckMiddleware = true;
          }
        }
        if (!futureCurrentUser) {
          return this.directlySetCurrentUser(null);
        }
        if (!futureCurrentUser._redirectEventId) {
          if (needsTocheckMiddleware) {
            try {
              await this.beforeStateQueue.runMiddleware(futureCurrentUser);
            } catch (e7) {
              futureCurrentUser = previouslyStoredUser;
              this._popupRedirectResolver._overrideRedirectResult(this, () => Promise.reject(e7));
            }
          }
          if (futureCurrentUser) {
            return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);
          } else {
            return this.directlySetCurrentUser(null);
          }
        }
        _assert(this._popupRedirectResolver, this, "argument-error");
        await this.getOrInitRedirectPersistenceManager();
        if (this.redirectUser && this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId) {
          return this.directlySetCurrentUser(futureCurrentUser);
        }
        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);
      }
      async tryRedirectSignIn(redirectResolver) {
        let result = null;
        try {
          result = await this._popupRedirectResolver._completeRedirectFn(this, redirectResolver, true);
        } catch (e7) {
          await this._setRedirectUser(null);
        }
        return result;
      }
      async reloadAndSetCurrentUserOrClear(user) {
        try {
          await _reloadWithoutSaving(user);
        } catch (e7) {
          if ((e7 === null || e7 === void 0 ? void 0 : e7.code) !== `auth/${"network-request-failed"}`) {
            return this.directlySetCurrentUser(null);
          }
        }
        return this.directlySetCurrentUser(user);
      }
      useDeviceLanguage() {
        this.languageCode = _getUserLanguage();
      }
      async _delete() {
        this._deleted = true;
      }
      async updateCurrentUser(userExtern) {
        const user = userExtern ? getModularInstance(userExtern) : null;
        if (user) {
          _assert(user.auth.config.apiKey === this.config.apiKey, this, "invalid-user-token");
        }
        return this._updateCurrentUser(user && user._clone(this));
      }
      async _updateCurrentUser(user, skipBeforeStateCallbacks = false) {
        if (this._deleted) {
          return;
        }
        if (user) {
          _assert(this.tenantId === user.tenantId, this, "tenant-id-mismatch");
        }
        if (!skipBeforeStateCallbacks) {
          await this.beforeStateQueue.runMiddleware(user);
        }
        return this.queue(async () => {
          await this.directlySetCurrentUser(user);
          this.notifyAuthListeners();
        });
      }
      async signOut() {
        await this.beforeStateQueue.runMiddleware(null);
        if (this.redirectPersistenceManager || this._popupRedirectResolver) {
          await this._setRedirectUser(null);
        }
        return this._updateCurrentUser(null, true);
      }
      setPersistence(persistence) {
        return this.queue(async () => {
          await this.assertedPersistence.setPersistence(_getInstance(persistence));
        });
      }
      _getPersistence() {
        return this.assertedPersistence.persistence.type;
      }
      _updateErrorMap(errorMap) {
        this._errorFactory = new ErrorFactory("auth", "Firebase", errorMap());
      }
      onAuthStateChanged(nextOrObserver, error, completed) {
        return this.registerStateListener(this.authStateSubscription, nextOrObserver, error, completed);
      }
      beforeAuthStateChanged(callback, onAbort) {
        return this.beforeStateQueue.pushCallback(callback, onAbort);
      }
      onIdTokenChanged(nextOrObserver, error, completed) {
        return this.registerStateListener(this.idTokenSubscription, nextOrObserver, error, completed);
      }
      toJSON() {
        var _a2;
        return {
          apiKey: this.config.apiKey,
          authDomain: this.config.authDomain,
          appName: this.name,
          currentUser: (_a2 = this._currentUser) === null || _a2 === void 0 ? void 0 : _a2.toJSON()
        };
      }
      async _setRedirectUser(user, popupRedirectResolver) {
        const redirectManager = await this.getOrInitRedirectPersistenceManager(popupRedirectResolver);
        return user === null ? redirectManager.removeCurrentUser() : redirectManager.setCurrentUser(user);
      }
      async getOrInitRedirectPersistenceManager(popupRedirectResolver) {
        if (!this.redirectPersistenceManager) {
          const resolver = popupRedirectResolver && _getInstance(popupRedirectResolver) || this._popupRedirectResolver;
          _assert(resolver, this, "argument-error");
          this.redirectPersistenceManager = await PersistenceUserManager.create(this, [_getInstance(resolver._redirectPersistence)], "redirectUser");
          this.redirectUser = await this.redirectPersistenceManager.getCurrentUser();
        }
        return this.redirectPersistenceManager;
      }
      async _redirectUserForId(id) {
        var _a2, _b;
        if (this._isInitialized) {
          await this.queue(async () => {
          });
        }
        if (((_a2 = this._currentUser) === null || _a2 === void 0 ? void 0 : _a2._redirectEventId) === id) {
          return this._currentUser;
        }
        if (((_b = this.redirectUser) === null || _b === void 0 ? void 0 : _b._redirectEventId) === id) {
          return this.redirectUser;
        }
        return null;
      }
      async _persistUserIfCurrent(user) {
        if (user === this.currentUser) {
          return this.queue(async () => this.directlySetCurrentUser(user));
        }
      }
      _notifyListenersIfCurrent(user) {
        if (user === this.currentUser) {
          this.notifyAuthListeners();
        }
      }
      _key() {
        return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;
      }
      _startProactiveRefresh() {
        this.isProactiveRefreshEnabled = true;
        if (this.currentUser) {
          this._currentUser._startProactiveRefresh();
        }
      }
      _stopProactiveRefresh() {
        this.isProactiveRefreshEnabled = false;
        if (this.currentUser) {
          this._currentUser._stopProactiveRefresh();
        }
      }
      get _currentUser() {
        return this.currentUser;
      }
      notifyAuthListeners() {
        var _a2, _b;
        if (!this._isInitialized) {
          return;
        }
        this.idTokenSubscription.next(this.currentUser);
        const currentUid = (_b = (_a2 = this.currentUser) === null || _a2 === void 0 ? void 0 : _a2.uid) !== null && _b !== void 0 ? _b : null;
        if (this.lastNotifiedUid !== currentUid) {
          this.lastNotifiedUid = currentUid;
          this.authStateSubscription.next(this.currentUser);
        }
      }
      registerStateListener(subscription, nextOrObserver, error, completed) {
        if (this._deleted) {
          return () => {
          };
        }
        const cb = typeof nextOrObserver === "function" ? nextOrObserver : nextOrObserver.next.bind(nextOrObserver);
        const promise = this._isInitialized ? Promise.resolve() : this._initializationPromise;
        _assert(promise, this, "internal-error");
        promise.then(() => cb(this.currentUser));
        if (typeof nextOrObserver === "function") {
          return subscription.addObserver(nextOrObserver, error, completed);
        } else {
          return subscription.addObserver(nextOrObserver);
        }
      }
      async directlySetCurrentUser(user) {
        if (this.currentUser && this.currentUser !== user) {
          this._currentUser._stopProactiveRefresh();
        }
        if (user && this.isProactiveRefreshEnabled) {
          user._startProactiveRefresh();
        }
        this.currentUser = user;
        if (user) {
          await this.assertedPersistence.setCurrentUser(user);
        } else {
          await this.assertedPersistence.removeCurrentUser();
        }
      }
      queue(action) {
        this.operations = this.operations.then(action, action);
        return this.operations;
      }
      get assertedPersistence() {
        _assert(this.persistenceManager, this, "internal-error");
        return this.persistenceManager;
      }
      _logFramework(framework) {
        if (!framework || this.frameworks.includes(framework)) {
          return;
        }
        this.frameworks.push(framework);
        this.frameworks.sort();
        this.clientVersion = _getClientVersion(this.config.clientPlatform, this._getFrameworks());
      }
      _getFrameworks() {
        return this.frameworks;
      }
      async _getAdditionalHeaders() {
        var _a2;
        const headers = {
          ["X-Client-Version"]: this.clientVersion
        };
        if (this.app.options.appId) {
          headers["X-Firebase-gmpid"] = this.app.options.appId;
        }
        const heartbeatsHeader = await ((_a2 = this.heartbeatServiceProvider.getImmediate({
          optional: true
        })) === null || _a2 === void 0 ? void 0 : _a2.getHeartbeatsHeader());
        if (heartbeatsHeader) {
          headers["X-Firebase-Client"] = heartbeatsHeader;
        }
        return headers;
      }
    };
    Subscription = class {
      constructor(auth) {
        this.auth = auth;
        this.observer = null;
        this.addObserver = createSubscribe((observer) => this.observer = observer);
      }
      get next() {
        _assert(this.observer, this.auth, "internal-error");
        return this.observer.next.bind(this.observer);
      }
    };
    AuthCredential = class {
      constructor(providerId, signInMethod) {
        this.providerId = providerId;
        this.signInMethod = signInMethod;
      }
      toJSON() {
        return debugFail("not implemented");
      }
      _getIdTokenResponse(_auth) {
        return debugFail("not implemented");
      }
      _linkToIdToken(_auth, _idToken) {
        return debugFail("not implemented");
      }
      _getReauthenticationResolver(_auth) {
        return debugFail("not implemented");
      }
    };
    EmailAuthCredential = class extends AuthCredential {
      constructor(_email, _password, signInMethod, _tenantId = null) {
        super("password", signInMethod);
        this._email = _email;
        this._password = _password;
        this._tenantId = _tenantId;
      }
      static _fromEmailAndPassword(email, password) {
        return new EmailAuthCredential(email, password, "password");
      }
      static _fromEmailAndCode(email, oobCode, tenantId = null) {
        return new EmailAuthCredential(email, oobCode, "emailLink", tenantId);
      }
      toJSON() {
        return {
          email: this._email,
          password: this._password,
          signInMethod: this.signInMethod,
          tenantId: this._tenantId
        };
      }
      static fromJSON(json) {
        const obj = typeof json === "string" ? JSON.parse(json) : json;
        if ((obj === null || obj === void 0 ? void 0 : obj.email) && (obj === null || obj === void 0 ? void 0 : obj.password)) {
          if (obj.signInMethod === "password") {
            return this._fromEmailAndPassword(obj.email, obj.password);
          } else if (obj.signInMethod === "emailLink") {
            return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);
          }
        }
        return null;
      }
      async _getIdTokenResponse(auth) {
        switch (this.signInMethod) {
          case "password":
            return signInWithPassword(auth, {
              returnSecureToken: true,
              email: this._email,
              password: this._password
            });
          case "emailLink":
            return signInWithEmailLink$1(auth, {
              email: this._email,
              oobCode: this._password
            });
          default:
            _fail(auth, "internal-error");
        }
      }
      async _linkToIdToken(auth, idToken) {
        switch (this.signInMethod) {
          case "password":
            return updateEmailPassword(auth, {
              idToken,
              returnSecureToken: true,
              email: this._email,
              password: this._password
            });
          case "emailLink":
            return signInWithEmailLinkForLinking(auth, {
              idToken,
              email: this._email,
              oobCode: this._password
            });
          default:
            _fail(auth, "internal-error");
        }
      }
      _getReauthenticationResolver(auth) {
        return this._getIdTokenResponse(auth);
      }
    };
    IDP_REQUEST_URI$1 = "http://localhost";
    OAuthCredential = class extends AuthCredential {
      constructor() {
        super(...arguments);
        this.pendingToken = null;
      }
      static _fromParams(params) {
        const cred = new OAuthCredential(params.providerId, params.signInMethod);
        if (params.idToken || params.accessToken) {
          if (params.idToken) {
            cred.idToken = params.idToken;
          }
          if (params.accessToken) {
            cred.accessToken = params.accessToken;
          }
          if (params.nonce && !params.pendingToken) {
            cred.nonce = params.nonce;
          }
          if (params.pendingToken) {
            cred.pendingToken = params.pendingToken;
          }
        } else if (params.oauthToken && params.oauthTokenSecret) {
          cred.accessToken = params.oauthToken;
          cred.secret = params.oauthTokenSecret;
        } else {
          _fail("argument-error");
        }
        return cred;
      }
      toJSON() {
        return {
          idToken: this.idToken,
          accessToken: this.accessToken,
          secret: this.secret,
          nonce: this.nonce,
          pendingToken: this.pendingToken,
          providerId: this.providerId,
          signInMethod: this.signInMethod
        };
      }
      static fromJSON(json) {
        const obj = typeof json === "string" ? JSON.parse(json) : json;
        const { providerId, signInMethod } = obj, rest = __rest(obj, ["providerId", "signInMethod"]);
        if (!providerId || !signInMethod) {
          return null;
        }
        const cred = new OAuthCredential(providerId, signInMethod);
        cred.idToken = rest.idToken || void 0;
        cred.accessToken = rest.accessToken || void 0;
        cred.secret = rest.secret;
        cred.nonce = rest.nonce;
        cred.pendingToken = rest.pendingToken || null;
        return cred;
      }
      _getIdTokenResponse(auth) {
        const request = this.buildRequest();
        return signInWithIdp(auth, request);
      }
      _linkToIdToken(auth, idToken) {
        const request = this.buildRequest();
        request.idToken = idToken;
        return signInWithIdp(auth, request);
      }
      _getReauthenticationResolver(auth) {
        const request = this.buildRequest();
        request.autoCreate = false;
        return signInWithIdp(auth, request);
      }
      buildRequest() {
        const request = {
          requestUri: IDP_REQUEST_URI$1,
          returnSecureToken: true
        };
        if (this.pendingToken) {
          request.pendingToken = this.pendingToken;
        } else {
          const postBody = {};
          if (this.idToken) {
            postBody["id_token"] = this.idToken;
          }
          if (this.accessToken) {
            postBody["access_token"] = this.accessToken;
          }
          if (this.secret) {
            postBody["oauth_token_secret"] = this.secret;
          }
          postBody["providerId"] = this.providerId;
          if (this.nonce && !this.pendingToken) {
            postBody["nonce"] = this.nonce;
          }
          request.postBody = querystring(postBody);
        }
        return request;
      }
    };
    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_ = {
      ["USER_NOT_FOUND"]: "user-not-found"
    };
    PhoneAuthCredential = class extends AuthCredential {
      constructor(params) {
        super("phone", "phone");
        this.params = params;
      }
      static _fromVerification(verificationId, verificationCode) {
        return new PhoneAuthCredential({ verificationId, verificationCode });
      }
      static _fromTokenResponse(phoneNumber, temporaryProof) {
        return new PhoneAuthCredential({ phoneNumber, temporaryProof });
      }
      _getIdTokenResponse(auth) {
        return signInWithPhoneNumber$1(auth, this._makeVerificationRequest());
      }
      _linkToIdToken(auth, idToken) {
        return linkWithPhoneNumber$1(auth, Object.assign({ idToken }, this._makeVerificationRequest()));
      }
      _getReauthenticationResolver(auth) {
        return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());
      }
      _makeVerificationRequest() {
        const { temporaryProof, phoneNumber, verificationId, verificationCode } = this.params;
        if (temporaryProof && phoneNumber) {
          return { temporaryProof, phoneNumber };
        }
        return {
          sessionInfo: verificationId,
          code: verificationCode
        };
      }
      toJSON() {
        const obj = {
          providerId: this.providerId
        };
        if (this.params.phoneNumber) {
          obj.phoneNumber = this.params.phoneNumber;
        }
        if (this.params.temporaryProof) {
          obj.temporaryProof = this.params.temporaryProof;
        }
        if (this.params.verificationCode) {
          obj.verificationCode = this.params.verificationCode;
        }
        if (this.params.verificationId) {
          obj.verificationId = this.params.verificationId;
        }
        return obj;
      }
      static fromJSON(json) {
        if (typeof json === "string") {
          json = JSON.parse(json);
        }
        const { verificationId, verificationCode, phoneNumber, temporaryProof } = json;
        if (!verificationCode && !verificationId && !phoneNumber && !temporaryProof) {
          return null;
        }
        return new PhoneAuthCredential({
          verificationId,
          verificationCode,
          phoneNumber,
          temporaryProof
        });
      }
    };
    ActionCodeURL = class {
      constructor(actionLink) {
        var _a2, _b, _c, _d, _e5, _f;
        const searchParams = querystringDecode(extractQuerystring(actionLink));
        const apiKey = (_a2 = searchParams["apiKey"]) !== null && _a2 !== void 0 ? _a2 : null;
        const code = (_b = searchParams["oobCode"]) !== null && _b !== void 0 ? _b : null;
        const operation = parseMode((_c = searchParams["mode"]) !== null && _c !== void 0 ? _c : null);
        _assert(apiKey && code && operation, "argument-error");
        this.apiKey = apiKey;
        this.operation = operation;
        this.code = code;
        this.continueUrl = (_d = searchParams["continueUrl"]) !== null && _d !== void 0 ? _d : null;
        this.languageCode = (_e5 = searchParams["languageCode"]) !== null && _e5 !== void 0 ? _e5 : null;
        this.tenantId = (_f = searchParams["tenantId"]) !== null && _f !== void 0 ? _f : null;
      }
      static parseLink(link) {
        const actionLink = parseDeepLink(link);
        try {
          return new ActionCodeURL(actionLink);
        } catch (_a2) {
          return null;
        }
      }
    };
    EmailAuthProvider = class {
      constructor() {
        this.providerId = EmailAuthProvider.PROVIDER_ID;
      }
      static credential(email, password) {
        return EmailAuthCredential._fromEmailAndPassword(email, password);
      }
      static credentialWithLink(email, emailLink) {
        const actionCodeUrl = ActionCodeURL.parseLink(emailLink);
        _assert(actionCodeUrl, "argument-error");
        return EmailAuthCredential._fromEmailAndCode(email, actionCodeUrl.code, actionCodeUrl.tenantId);
      }
    };
    EmailAuthProvider.PROVIDER_ID = "password";
    EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD = "password";
    EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD = "emailLink";
    FederatedAuthProvider = class {
      constructor(providerId) {
        this.providerId = providerId;
        this.defaultLanguageCode = null;
        this.customParameters = {};
      }
      setDefaultLanguage(languageCode) {
        this.defaultLanguageCode = languageCode;
      }
      setCustomParameters(customOAuthParameters) {
        this.customParameters = customOAuthParameters;
        return this;
      }
      getCustomParameters() {
        return this.customParameters;
      }
    };
    BaseOAuthProvider = class extends FederatedAuthProvider {
      constructor() {
        super(...arguments);
        this.scopes = [];
      }
      addScope(scope) {
        if (!this.scopes.includes(scope)) {
          this.scopes.push(scope);
        }
        return this;
      }
      getScopes() {
        return [...this.scopes];
      }
    };
    FacebookAuthProvider = class extends BaseOAuthProvider {
      constructor() {
        super("facebook.com");
      }
      static credential(accessToken) {
        return OAuthCredential._fromParams({
          providerId: FacebookAuthProvider.PROVIDER_ID,
          signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,
          accessToken
        });
      }
      static credentialFromResult(userCredential) {
        return FacebookAuthProvider.credentialFromTaggedObject(userCredential);
      }
      static credentialFromError(error) {
        return FacebookAuthProvider.credentialFromTaggedObject(error.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {
        if (!tokenResponse || !("oauthAccessToken" in tokenResponse)) {
          return null;
        }
        if (!tokenResponse.oauthAccessToken) {
          return null;
        }
        try {
          return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);
        } catch (_a2) {
          return null;
        }
      }
    };
    FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD = "facebook.com";
    FacebookAuthProvider.PROVIDER_ID = "facebook.com";
    GoogleAuthProvider = class extends BaseOAuthProvider {
      constructor() {
        super("google.com");
        this.addScope("profile");
      }
      static credential(idToken, accessToken) {
        return OAuthCredential._fromParams({
          providerId: GoogleAuthProvider.PROVIDER_ID,
          signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,
          idToken,
          accessToken
        });
      }
      static credentialFromResult(userCredential) {
        return GoogleAuthProvider.credentialFromTaggedObject(userCredential);
      }
      static credentialFromError(error) {
        return GoogleAuthProvider.credentialFromTaggedObject(error.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {
        if (!tokenResponse) {
          return null;
        }
        const { oauthIdToken, oauthAccessToken } = tokenResponse;
        if (!oauthIdToken && !oauthAccessToken) {
          return null;
        }
        try {
          return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);
        } catch (_a2) {
          return null;
        }
      }
    };
    GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD = "google.com";
    GoogleAuthProvider.PROVIDER_ID = "google.com";
    GithubAuthProvider = class extends BaseOAuthProvider {
      constructor() {
        super("github.com");
      }
      static credential(accessToken) {
        return OAuthCredential._fromParams({
          providerId: GithubAuthProvider.PROVIDER_ID,
          signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,
          accessToken
        });
      }
      static credentialFromResult(userCredential) {
        return GithubAuthProvider.credentialFromTaggedObject(userCredential);
      }
      static credentialFromError(error) {
        return GithubAuthProvider.credentialFromTaggedObject(error.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {
        if (!tokenResponse || !("oauthAccessToken" in tokenResponse)) {
          return null;
        }
        if (!tokenResponse.oauthAccessToken) {
          return null;
        }
        try {
          return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);
        } catch (_a2) {
          return null;
        }
      }
    };
    GithubAuthProvider.GITHUB_SIGN_IN_METHOD = "github.com";
    GithubAuthProvider.PROVIDER_ID = "github.com";
    TwitterAuthProvider = class extends BaseOAuthProvider {
      constructor() {
        super("twitter.com");
      }
      static credential(token, secret) {
        return OAuthCredential._fromParams({
          providerId: TwitterAuthProvider.PROVIDER_ID,
          signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,
          oauthToken: token,
          oauthTokenSecret: secret
        });
      }
      static credentialFromResult(userCredential) {
        return TwitterAuthProvider.credentialFromTaggedObject(userCredential);
      }
      static credentialFromError(error) {
        return TwitterAuthProvider.credentialFromTaggedObject(error.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {
        if (!tokenResponse) {
          return null;
        }
        const { oauthAccessToken, oauthTokenSecret } = tokenResponse;
        if (!oauthAccessToken || !oauthTokenSecret) {
          return null;
        }
        try {
          return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);
        } catch (_a2) {
          return null;
        }
      }
    };
    TwitterAuthProvider.TWITTER_SIGN_IN_METHOD = "twitter.com";
    TwitterAuthProvider.PROVIDER_ID = "twitter.com";
    UserCredentialImpl = class {
      constructor(params) {
        this.user = params.user;
        this.providerId = params.providerId;
        this._tokenResponse = params._tokenResponse;
        this.operationType = params.operationType;
      }
      static async _fromIdTokenResponse(auth, operationType, idTokenResponse, isAnonymous = false) {
        const user = await UserImpl._fromIdTokenResponse(auth, idTokenResponse, isAnonymous);
        const providerId = providerIdForResponse(idTokenResponse);
        const userCred = new UserCredentialImpl({
          user,
          providerId,
          _tokenResponse: idTokenResponse,
          operationType
        });
        return userCred;
      }
      static async _forOperation(user, operationType, response) {
        await user._updateTokensIfNecessary(response, true);
        const providerId = providerIdForResponse(response);
        return new UserCredentialImpl({
          user,
          providerId,
          _tokenResponse: response,
          operationType
        });
      }
    };
    MultiFactorError = class extends FirebaseError {
      constructor(auth, error, operationType, user) {
        var _a2;
        super(error.code, error.message);
        this.operationType = operationType;
        this.user = user;
        Object.setPrototypeOf(this, MultiFactorError.prototype);
        this.customData = {
          appName: auth.name,
          tenantId: (_a2 = auth.tenantId) !== null && _a2 !== void 0 ? _a2 : void 0,
          _serverResponse: error.customData._serverResponse,
          operationType
        };
      }
      static _fromErrorAndOperation(auth, error, operationType, user) {
        return new MultiFactorError(auth, error, operationType, user);
      }
    };
    STORAGE_AVAILABLE_KEY = "__sak";
    BrowserPersistenceClass = class {
      constructor(storageRetriever, type) {
        this.storageRetriever = storageRetriever;
        this.type = type;
      }
      _isAvailable() {
        try {
          if (!this.storage) {
            return Promise.resolve(false);
          }
          this.storage.setItem(STORAGE_AVAILABLE_KEY, "1");
          this.storage.removeItem(STORAGE_AVAILABLE_KEY);
          return Promise.resolve(true);
        } catch (_a2) {
          return Promise.resolve(false);
        }
      }
      _set(key, value) {
        this.storage.setItem(key, JSON.stringify(value));
        return Promise.resolve();
      }
      _get(key) {
        const json = this.storage.getItem(key);
        return Promise.resolve(json ? JSON.parse(json) : null);
      }
      _remove(key) {
        this.storage.removeItem(key);
        return Promise.resolve();
      }
      get storage() {
        return this.storageRetriever();
      }
    };
    _POLLING_INTERVAL_MS$1 = 1e3;
    IE10_LOCAL_STORAGE_SYNC_DELAY = 10;
    BrowserLocalPersistence = class extends BrowserPersistenceClass {
      constructor() {
        super(() => window.localStorage, "LOCAL");
        this.boundEventHandler = (event, poll) => this.onStorageEvent(event, poll);
        this.listeners = {};
        this.localCache = {};
        this.pollTimer = null;
        this.safariLocalStorageNotSynced = _iframeCannotSyncWebStorage() && _isIframe();
        this.fallbackToPolling = _isMobileBrowser();
        this._shouldAllowMigration = true;
      }
      forAllChangedKeys(cb) {
        for (const key of Object.keys(this.listeners)) {
          const newValue = this.storage.getItem(key);
          const oldValue = this.localCache[key];
          if (newValue !== oldValue) {
            cb(key, oldValue, newValue);
          }
        }
      }
      onStorageEvent(event, poll = false) {
        if (!event.key) {
          this.forAllChangedKeys((key2, _oldValue, newValue) => {
            this.notifyListeners(key2, newValue);
          });
          return;
        }
        const key = event.key;
        if (poll) {
          this.detachListener();
        } else {
          this.stopPolling();
        }
        if (this.safariLocalStorageNotSynced) {
          const storedValue2 = this.storage.getItem(key);
          if (event.newValue !== storedValue2) {
            if (event.newValue !== null) {
              this.storage.setItem(key, event.newValue);
            } else {
              this.storage.removeItem(key);
            }
          } else if (this.localCache[key] === event.newValue && !poll) {
            return;
          }
        }
        const triggerListeners = () => {
          const storedValue2 = this.storage.getItem(key);
          if (!poll && this.localCache[key] === storedValue2) {
            return;
          }
          this.notifyListeners(key, storedValue2);
        };
        const storedValue = this.storage.getItem(key);
        if (_isIE10() && storedValue !== event.newValue && event.newValue !== event.oldValue) {
          setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);
        } else {
          triggerListeners();
        }
      }
      notifyListeners(key, value) {
        this.localCache[key] = value;
        const listeners = this.listeners[key];
        if (listeners) {
          for (const listener of Array.from(listeners)) {
            listener(value ? JSON.parse(value) : value);
          }
        }
      }
      startPolling() {
        this.stopPolling();
        this.pollTimer = setInterval(() => {
          this.forAllChangedKeys((key, oldValue, newValue) => {
            this.onStorageEvent(
              new StorageEvent("storage", {
                key,
                oldValue,
                newValue
              }),
              true
            );
          });
        }, _POLLING_INTERVAL_MS$1);
      }
      stopPolling() {
        if (this.pollTimer) {
          clearInterval(this.pollTimer);
          this.pollTimer = null;
        }
      }
      attachListener() {
        window.addEventListener("storage", this.boundEventHandler);
      }
      detachListener() {
        window.removeEventListener("storage", this.boundEventHandler);
      }
      _addListener(key, listener) {
        if (Object.keys(this.listeners).length === 0) {
          if (this.fallbackToPolling) {
            this.startPolling();
          } else {
            this.attachListener();
          }
        }
        if (!this.listeners[key]) {
          this.listeners[key] = /* @__PURE__ */ new Set();
          this.localCache[key] = this.storage.getItem(key);
        }
        this.listeners[key].add(listener);
      }
      _removeListener(key, listener) {
        if (this.listeners[key]) {
          this.listeners[key].delete(listener);
          if (this.listeners[key].size === 0) {
            delete this.listeners[key];
          }
        }
        if (Object.keys(this.listeners).length === 0) {
          this.detachListener();
          this.stopPolling();
        }
      }
      async _set(key, value) {
        await super._set(key, value);
        this.localCache[key] = JSON.stringify(value);
      }
      async _get(key) {
        const value = await super._get(key);
        this.localCache[key] = JSON.stringify(value);
        return value;
      }
      async _remove(key) {
        await super._remove(key);
        delete this.localCache[key];
      }
    };
    BrowserLocalPersistence.type = "LOCAL";
    browserLocalPersistence = BrowserLocalPersistence;
    BrowserSessionPersistence = class extends BrowserPersistenceClass {
      constructor() {
        super(() => window.sessionStorage, "SESSION");
      }
      _addListener(_key, _listener) {
        return;
      }
      _removeListener(_key, _listener) {
        return;
      }
    };
    BrowserSessionPersistence.type = "SESSION";
    browserSessionPersistence = BrowserSessionPersistence;
    Receiver = class {
      constructor(eventTarget) {
        this.eventTarget = eventTarget;
        this.handlersMap = {};
        this.boundEventHandler = this.handleEvent.bind(this);
      }
      static _getInstance(eventTarget) {
        const existingInstance = this.receivers.find((receiver) => receiver.isListeningto(eventTarget));
        if (existingInstance) {
          return existingInstance;
        }
        const newInstance = new Receiver(eventTarget);
        this.receivers.push(newInstance);
        return newInstance;
      }
      isListeningto(eventTarget) {
        return this.eventTarget === eventTarget;
      }
      async handleEvent(event) {
        const messageEvent = event;
        const { eventId, eventType, data } = messageEvent.data;
        const handlers = this.handlersMap[eventType];
        if (!(handlers === null || handlers === void 0 ? void 0 : handlers.size)) {
          return;
        }
        messageEvent.ports[0].postMessage({
          status: "ack",
          eventId,
          eventType
        });
        const promises = Array.from(handlers).map(async (handler) => handler(messageEvent.origin, data));
        const response = await _allSettled(promises);
        messageEvent.ports[0].postMessage({
          status: "done",
          eventId,
          eventType,
          response
        });
      }
      _subscribe(eventType, eventHandler) {
        if (Object.keys(this.handlersMap).length === 0) {
          this.eventTarget.addEventListener("message", this.boundEventHandler);
        }
        if (!this.handlersMap[eventType]) {
          this.handlersMap[eventType] = /* @__PURE__ */ new Set();
        }
        this.handlersMap[eventType].add(eventHandler);
      }
      _unsubscribe(eventType, eventHandler) {
        if (this.handlersMap[eventType] && eventHandler) {
          this.handlersMap[eventType].delete(eventHandler);
        }
        if (!eventHandler || this.handlersMap[eventType].size === 0) {
          delete this.handlersMap[eventType];
        }
        if (Object.keys(this.handlersMap).length === 0) {
          this.eventTarget.removeEventListener("message", this.boundEventHandler);
        }
      }
    };
    Receiver.receivers = [];
    Sender = class {
      constructor(target) {
        this.target = target;
        this.handlers = /* @__PURE__ */ new Set();
      }
      removeMessageHandler(handler) {
        if (handler.messageChannel) {
          handler.messageChannel.port1.removeEventListener("message", handler.onMessage);
          handler.messageChannel.port1.close();
        }
        this.handlers.delete(handler);
      }
      async _send(eventType, data, timeout = 50) {
        const messageChannel = typeof MessageChannel !== "undefined" ? new MessageChannel() : null;
        if (!messageChannel) {
          throw new Error("connection_unavailable");
        }
        let completionTimer;
        let handler;
        return new Promise((resolve, reject) => {
          const eventId = _generateEventId("", 20);
          messageChannel.port1.start();
          const ackTimer = setTimeout(() => {
            reject(new Error("unsupported_event"));
          }, timeout);
          handler = {
            messageChannel,
            onMessage(event) {
              const messageEvent = event;
              if (messageEvent.data.eventId !== eventId) {
                return;
              }
              switch (messageEvent.data.status) {
                case "ack":
                  clearTimeout(ackTimer);
                  completionTimer = setTimeout(() => {
                    reject(new Error("timeout"));
                  }, 3e3);
                  break;
                case "done":
                  clearTimeout(completionTimer);
                  resolve(messageEvent.data.response);
                  break;
                default:
                  clearTimeout(ackTimer);
                  clearTimeout(completionTimer);
                  reject(new Error("invalid_response"));
                  break;
              }
            }
          };
          this.handlers.add(handler);
          messageChannel.port1.addEventListener("message", handler.onMessage);
          this.target.postMessage({
            eventType,
            eventId,
            data
          }, [messageChannel.port2]);
        }).finally(() => {
          if (handler) {
            this.removeMessageHandler(handler);
          }
        });
      }
    };
    DB_NAME2 = "firebaseLocalStorageDb";
    DB_VERSION2 = 1;
    DB_OBJECTSTORE_NAME = "firebaseLocalStorage";
    DB_DATA_KEYPATH = "fbase_key";
    DBPromise = class {
      constructor(request) {
        this.request = request;
      }
      toPromise() {
        return new Promise((resolve, reject) => {
          this.request.addEventListener("success", () => {
            resolve(this.request.result);
          });
          this.request.addEventListener("error", () => {
            reject(this.request.error);
          });
        });
      }
    };
    _POLLING_INTERVAL_MS = 800;
    _TRANSACTION_RETRY_COUNT = 3;
    IndexedDBLocalPersistence = class {
      constructor() {
        this.type = "LOCAL";
        this._shouldAllowMigration = true;
        this.listeners = {};
        this.localCache = {};
        this.pollTimer = null;
        this.pendingWrites = 0;
        this.receiver = null;
        this.sender = null;
        this.serviceWorkerReceiverAvailable = false;
        this.activeServiceWorker = null;
        this._workerInitializationPromise = this.initializeServiceWorkerMessaging().then(() => {
        }, () => {
        });
      }
      async _openDb() {
        if (this.db) {
          return this.db;
        }
        this.db = await _openDatabase();
        return this.db;
      }
      async _withRetries(op2) {
        let numAttempts = 0;
        while (true) {
          try {
            const db = await this._openDb();
            return await op2(db);
          } catch (e7) {
            if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {
              throw e7;
            }
            if (this.db) {
              this.db.close();
              this.db = void 0;
            }
          }
        }
      }
      async initializeServiceWorkerMessaging() {
        return _isWorker() ? this.initializeReceiver() : this.initializeSender();
      }
      async initializeReceiver() {
        this.receiver = Receiver._getInstance(_getWorkerGlobalScope());
        this.receiver._subscribe("keyChanged", async (_origin, data) => {
          const keys = await this._poll();
          return {
            keyProcessed: keys.includes(data.key)
          };
        });
        this.receiver._subscribe("ping", async (_origin, _data) => {
          return ["keyChanged"];
        });
      }
      async initializeSender() {
        var _a2, _b;
        this.activeServiceWorker = await _getActiveServiceWorker();
        if (!this.activeServiceWorker) {
          return;
        }
        this.sender = new Sender(this.activeServiceWorker);
        const results = await this.sender._send("ping", {}, 800);
        if (!results) {
          return;
        }
        if (((_a2 = results[0]) === null || _a2 === void 0 ? void 0 : _a2.fulfilled) && ((_b = results[0]) === null || _b === void 0 ? void 0 : _b.value.includes("keyChanged"))) {
          this.serviceWorkerReceiverAvailable = true;
        }
      }
      async notifyServiceWorker(key) {
        if (!this.sender || !this.activeServiceWorker || _getServiceWorkerController() !== this.activeServiceWorker) {
          return;
        }
        try {
          await this.sender._send(
            "keyChanged",
            { key },
            this.serviceWorkerReceiverAvailable ? 800 : 50
          );
        } catch (_a2) {
        }
      }
      async _isAvailable() {
        try {
          if (!indexedDB) {
            return false;
          }
          const db = await _openDatabase();
          await _putObject(db, STORAGE_AVAILABLE_KEY, "1");
          await _deleteObject(db, STORAGE_AVAILABLE_KEY);
          return true;
        } catch (_a2) {
        }
        return false;
      }
      async _withPendingWrite(write) {
        this.pendingWrites++;
        try {
          await write();
        } finally {
          this.pendingWrites--;
        }
      }
      async _set(key, value) {
        return this._withPendingWrite(async () => {
          await this._withRetries((db) => _putObject(db, key, value));
          this.localCache[key] = value;
          return this.notifyServiceWorker(key);
        });
      }
      async _get(key) {
        const obj = await this._withRetries((db) => getObject(db, key));
        this.localCache[key] = obj;
        return obj;
      }
      async _remove(key) {
        return this._withPendingWrite(async () => {
          await this._withRetries((db) => _deleteObject(db, key));
          delete this.localCache[key];
          return this.notifyServiceWorker(key);
        });
      }
      async _poll() {
        const result = await this._withRetries((db) => {
          const getAllRequest = getObjectStore(db, false).getAll();
          return new DBPromise(getAllRequest).toPromise();
        });
        if (!result) {
          return [];
        }
        if (this.pendingWrites !== 0) {
          return [];
        }
        const keys = [];
        const keysInResult = /* @__PURE__ */ new Set();
        for (const { fbase_key: key, value } of result) {
          keysInResult.add(key);
          if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {
            this.notifyListeners(key, value);
            keys.push(key);
          }
        }
        for (const localKey of Object.keys(this.localCache)) {
          if (this.localCache[localKey] && !keysInResult.has(localKey)) {
            this.notifyListeners(localKey, null);
            keys.push(localKey);
          }
        }
        return keys;
      }
      notifyListeners(key, newValue) {
        this.localCache[key] = newValue;
        const listeners = this.listeners[key];
        if (listeners) {
          for (const listener of Array.from(listeners)) {
            listener(newValue);
          }
        }
      }
      startPolling() {
        this.stopPolling();
        this.pollTimer = setInterval(async () => this._poll(), _POLLING_INTERVAL_MS);
      }
      stopPolling() {
        if (this.pollTimer) {
          clearInterval(this.pollTimer);
          this.pollTimer = null;
        }
      }
      _addListener(key, listener) {
        if (Object.keys(this.listeners).length === 0) {
          this.startPolling();
        }
        if (!this.listeners[key]) {
          this.listeners[key] = /* @__PURE__ */ new Set();
          void this._get(key);
        }
        this.listeners[key].add(listener);
      }
      _removeListener(key, listener) {
        if (this.listeners[key]) {
          this.listeners[key].delete(listener);
          if (this.listeners[key].size === 0) {
            delete this.listeners[key];
          }
        }
        if (Object.keys(this.listeners).length === 0) {
          this.stopPolling();
        }
      }
    };
    IndexedDBLocalPersistence.type = "LOCAL";
    indexedDBLocalPersistence = IndexedDBLocalPersistence;
    _JSLOAD_CALLBACK = _generateCallbackName("rcb");
    NETWORK_TIMEOUT_DELAY = new Delay(3e4, 6e4);
    RECAPTCHA_VERIFIER_TYPE = "recaptcha";
    PhoneAuthProvider = class {
      constructor(auth) {
        this.providerId = PhoneAuthProvider.PROVIDER_ID;
        this.auth = _castAuth(auth);
      }
      verifyPhoneNumber(phoneOptions, applicationVerifier) {
        return _verifyPhoneNumber(this.auth, phoneOptions, getModularInstance(applicationVerifier));
      }
      static credential(verificationId, verificationCode) {
        return PhoneAuthCredential._fromVerification(verificationId, verificationCode);
      }
      static credentialFromResult(userCredential) {
        const credential = userCredential;
        return PhoneAuthProvider.credentialFromTaggedObject(credential);
      }
      static credentialFromError(error) {
        return PhoneAuthProvider.credentialFromTaggedObject(error.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: tokenResponse }) {
        if (!tokenResponse) {
          return null;
        }
        const { phoneNumber, temporaryProof } = tokenResponse;
        if (phoneNumber && temporaryProof) {
          return PhoneAuthCredential._fromTokenResponse(phoneNumber, temporaryProof);
        }
        return null;
      }
    };
    PhoneAuthProvider.PROVIDER_ID = "phone";
    PhoneAuthProvider.PHONE_SIGN_IN_METHOD = "phone";
    IdpCredential = class extends AuthCredential {
      constructor(params) {
        super("custom", "custom");
        this.params = params;
      }
      _getIdTokenResponse(auth) {
        return signInWithIdp(auth, this._buildIdpRequest());
      }
      _linkToIdToken(auth, idToken) {
        return signInWithIdp(auth, this._buildIdpRequest(idToken));
      }
      _getReauthenticationResolver(auth) {
        return signInWithIdp(auth, this._buildIdpRequest());
      }
      _buildIdpRequest(idToken) {
        const request = {
          requestUri: this.params.requestUri,
          sessionId: this.params.sessionId,
          postBody: this.params.postBody,
          tenantId: this.params.tenantId,
          pendingToken: this.params.pendingToken,
          returnSecureToken: true,
          returnIdpCredential: true
        };
        if (idToken) {
          request.idToken = idToken;
        }
        return request;
      }
    };
    AbstractPopupRedirectOperation = class {
      constructor(auth, filter, resolver, user, bypassAuthState = false) {
        this.auth = auth;
        this.resolver = resolver;
        this.user = user;
        this.bypassAuthState = bypassAuthState;
        this.pendingPromise = null;
        this.eventManager = null;
        this.filter = Array.isArray(filter) ? filter : [filter];
      }
      execute() {
        return new Promise(async (resolve, reject) => {
          this.pendingPromise = { resolve, reject };
          try {
            this.eventManager = await this.resolver._initialize(this.auth);
            await this.onExecution();
            this.eventManager.registerConsumer(this);
          } catch (e7) {
            this.reject(e7);
          }
        });
      }
      async onAuthEvent(event) {
        const { urlResponse, sessionId, postBody, tenantId, error, type } = event;
        if (error) {
          this.reject(error);
          return;
        }
        const params = {
          auth: this.auth,
          requestUri: urlResponse,
          sessionId,
          tenantId: tenantId || void 0,
          postBody: postBody || void 0,
          user: this.user,
          bypassAuthState: this.bypassAuthState
        };
        try {
          this.resolve(await this.getIdpTask(type)(params));
        } catch (e7) {
          this.reject(e7);
        }
      }
      onError(error) {
        this.reject(error);
      }
      getIdpTask(type) {
        switch (type) {
          case "signInViaPopup":
          case "signInViaRedirect":
            return _signIn;
          case "linkViaPopup":
          case "linkViaRedirect":
            return _link;
          case "reauthViaPopup":
          case "reauthViaRedirect":
            return _reauth;
          default:
            _fail(this.auth, "internal-error");
        }
      }
      resolve(cred) {
        debugAssert(this.pendingPromise, "Pending promise was never set");
        this.pendingPromise.resolve(cred);
        this.unregisterAndCleanUp();
      }
      reject(error) {
        debugAssert(this.pendingPromise, "Pending promise was never set");
        this.pendingPromise.reject(error);
        this.unregisterAndCleanUp();
      }
      unregisterAndCleanUp() {
        if (this.eventManager) {
          this.eventManager.unregisterConsumer(this);
        }
        this.pendingPromise = null;
        this.cleanUp();
      }
    };
    _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2e3, 1e4);
    PopupOperation = class extends AbstractPopupRedirectOperation {
      constructor(auth, filter, provider, resolver, user) {
        super(auth, filter, resolver, user);
        this.provider = provider;
        this.authWindow = null;
        this.pollId = null;
        if (PopupOperation.currentPopupAction) {
          PopupOperation.currentPopupAction.cancel();
        }
        PopupOperation.currentPopupAction = this;
      }
      async executeNotNull() {
        const result = await this.execute();
        _assert(result, this.auth, "internal-error");
        return result;
      }
      async onExecution() {
        debugAssert(this.filter.length === 1, "Popup operations only handle one event");
        const eventId = _generateEventId();
        this.authWindow = await this.resolver._openPopup(
          this.auth,
          this.provider,
          this.filter[0],
          eventId
        );
        this.authWindow.associatedEvent = eventId;
        this.resolver._originValidation(this.auth).catch((e7) => {
          this.reject(e7);
        });
        this.resolver._isIframeWebStorageSupported(this.auth, (isSupported) => {
          if (!isSupported) {
            this.reject(_createError(this.auth, "web-storage-unsupported"));
          }
        });
        this.pollUserCancellation();
      }
      get eventId() {
        var _a2;
        return ((_a2 = this.authWindow) === null || _a2 === void 0 ? void 0 : _a2.associatedEvent) || null;
      }
      cancel() {
        this.reject(_createError(this.auth, "cancelled-popup-request"));
      }
      cleanUp() {
        if (this.authWindow) {
          this.authWindow.close();
        }
        if (this.pollId) {
          window.clearTimeout(this.pollId);
        }
        this.authWindow = null;
        this.pollId = null;
        PopupOperation.currentPopupAction = null;
      }
      pollUserCancellation() {
        const poll = () => {
          var _a2, _b;
          if ((_b = (_a2 = this.authWindow) === null || _a2 === void 0 ? void 0 : _a2.window) === null || _b === void 0 ? void 0 : _b.closed) {
            this.pollId = window.setTimeout(() => {
              this.pollId = null;
              this.reject(_createError(this.auth, "popup-closed-by-user"));
            }, 2e3);
            return;
          }
          this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());
        };
        poll();
      }
    };
    PopupOperation.currentPopupAction = null;
    EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1e3;
    NETWORK_TIMEOUT = new Delay(3e4, 6e4);
    PING_TIMEOUT = new Delay(5e3, 15e3);
    MultiFactorAssertionImpl = class {
      constructor(factorId) {
        this.factorId = factorId;
      }
      _process(auth, session, displayName) {
        switch (session.type) {
          case "enroll":
            return this._finalizeEnroll(auth, session.credential, displayName);
          case "signin":
            return this._finalizeSignIn(auth, session.credential);
          default:
            return debugFail("unexpected MultiFactorSessionType");
        }
      }
    };
    PhoneMultiFactorAssertionImpl = class extends MultiFactorAssertionImpl {
      constructor(credential) {
        super("phone");
        this.credential = credential;
      }
      static _fromCredential(credential) {
        return new PhoneMultiFactorAssertionImpl(credential);
      }
      _finalizeEnroll(auth, idToken, displayName) {
        return finalizeEnrollPhoneMfa(auth, {
          idToken,
          displayName,
          phoneVerificationInfo: this.credential._makeVerificationRequest()
        });
      }
      _finalizeSignIn(auth, mfaPendingCredential) {
        return finalizeSignInPhoneMfa(auth, {
          mfaPendingCredential,
          phoneVerificationInfo: this.credential._makeVerificationRequest()
        });
      }
    };
    PhoneMultiFactorGenerator = class {
      constructor() {
      }
      static assertion(credential) {
        return PhoneMultiFactorAssertionImpl._fromCredential(credential);
      }
    };
    PhoneMultiFactorGenerator.FACTOR_ID = "phone";
    name3 = "@firebase/auth";
    version3 = "0.21.0";
    AuthInterop = class {
      constructor(auth) {
        this.auth = auth;
        this.internalListeners = /* @__PURE__ */ new Map();
      }
      getUid() {
        var _a2;
        this.assertAuthConfigured();
        return ((_a2 = this.auth.currentUser) === null || _a2 === void 0 ? void 0 : _a2.uid) || null;
      }
      async getToken(forceRefresh) {
        this.assertAuthConfigured();
        await this.auth._initializationPromise;
        if (!this.auth.currentUser) {
          return null;
        }
        const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);
        return { accessToken };
      }
      addAuthTokenListener(listener) {
        this.assertAuthConfigured();
        if (this.internalListeners.has(listener)) {
          return;
        }
        const unsubscribe = this.auth.onIdTokenChanged((user) => {
          listener((user === null || user === void 0 ? void 0 : user.stsTokenManager.accessToken) || null);
        });
        this.internalListeners.set(listener, unsubscribe);
        this.updateProactiveRefresh();
      }
      removeAuthTokenListener(listener) {
        this.assertAuthConfigured();
        const unsubscribe = this.internalListeners.get(listener);
        if (!unsubscribe) {
          return;
        }
        this.internalListeners.delete(listener);
        unsubscribe();
        this.updateProactiveRefresh();
      }
      assertAuthConfigured() {
        _assert(this.auth._initializationPromise, "dependent-sdk-initialized-before-auth");
      }
      updateProactiveRefresh() {
        if (this.internalListeners.size > 0) {
          this.auth._startProactiveRefresh();
        } else {
          this.auth._stopProactiveRefresh();
        }
      }
    };
    DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;
    authIdTokenMaxAge = getExperimentalSetting("authIdTokenMaxAge") || DEFAULT_ID_TOKEN_MAX_AGE;
    registerAuth("Browser");
  }
});

// node_modules/@firebase/auth/dist/esm2017/index.js
var init_esm2017 = __esm({
  "node_modules/@firebase/auth/dist/esm2017/index.js"() {
    init_index_c6def6da();
    init_index_esm2017();
    init_index_esm20174();
    init_index_esm20173();
    init_modules();
    init_index_esm20172();
  }
});

// node_modules/firebase/auth/dist/esm/index.esm.js
var init_index_esm3 = __esm({
  "node_modules/firebase/auth/dist/esm/index.esm.js"() {
    init_esm2017();
  }
});

// .svelte-kit/output/server/chunks/firebase.js
var firebase_exports = {};
__export(firebase_exports, {
  app: () => E2,
  auth: () => P3
});
var c, E2, P3;
var init_firebase = __esm({
  ".svelte-kit/output/server/chunks/firebase.js"() {
    init_public();
    init_index_esm2();
    init_index_esm3();
    c = { apiKey: o2, authDomain: s3, projectId: t, storageBucket: e, messagingSenderId: p3, appId: n };
    E2 = initializeApp(c);
    P3 = initializeAuth(E2, { persistence: [indexedDBLocalPersistence, browserLocalPersistence, browserSessionPersistence] });
  }
});

// node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js
function p4(t3) {
  m3.setLogLevel(t3);
}
function y4(t3, ...e7) {
  if (m3.logLevel <= LogLevel.DEBUG) {
    const n3 = e7.map(v2);
    m3.debug(`Firestore (${w2}): ${t3}`, ...n3);
  }
}
function g4(t3, ...e7) {
  if (m3.logLevel <= LogLevel.ERROR) {
    const n3 = e7.map(v2);
    m3.error(`Firestore (${w2}): ${t3}`, ...n3);
  }
}
function _5(t3, ...e7) {
  if (m3.logLevel <= LogLevel.WARN) {
    const n3 = e7.map(v2);
    m3.warn(`Firestore (${w2}): ${t3}`, ...n3);
  }
}
function v2(t3) {
  if ("string" == typeof t3)
    return t3;
  try {
    return e7 = t3, JSON.stringify(e7);
  } catch (e8) {
    return t3;
  }
  var e7;
}
function b3(t3 = "Unexpected state") {
  const e7 = `FIRESTORE (${w2}) INTERNAL ASSERTION FAILED: ` + t3;
  throw g4(e7), new Error(e7);
}
function E3(t3, e7) {
  t3 || b3();
}
function I5(t3, e7) {
  return t3;
}
function st2(t3, e7, n3) {
  if (!n3)
    throw new U2(P4, `Function ${t3}() cannot be called with an empty ${e7}.`);
}
function it2(t3) {
  if (!rt2.isDocumentKey(t3))
    throw new U2(P4, `Invalid document reference. Document references must have an even number of segments, but ${t3} has ${t3.length}.`);
}
function ot2(t3) {
  if (rt2.isDocumentKey(t3))
    throw new U2(P4, `Invalid collection reference. Collection references must have an odd number of segments, but ${t3} has ${t3.length}.`);
}
function ut2(t3) {
  if (void 0 === t3)
    return "undefined";
  if (null === t3)
    return "null";
  if ("string" == typeof t3)
    return t3.length > 20 && (t3 = `${t3.substring(0, 20)}...`), JSON.stringify(t3);
  if ("number" == typeof t3 || "boolean" == typeof t3)
    return "" + t3;
  if ("object" == typeof t3) {
    if (t3 instanceof Array)
      return "an array";
    {
      const e7 = function(t4) {
        if (t4.constructor)
          return t4.constructor.name;
        return null;
      }(t3);
      return e7 ? `a custom ${e7} object` : "an object";
    }
  }
  return "function" == typeof t3 ? "a function" : b3();
}
function ct2(t3, e7) {
  if ("_delegate" in t3 && (t3 = t3._delegate), !(t3 instanceof e7)) {
    if (e7.name === t3.constructor.name)
      throw new U2(P4, "Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?");
    {
      const n3 = ut2(t3);
      throw new U2(P4, `Expected type '${e7.name}', but it was: ${n3}`);
    }
  }
  return t3;
}
function at2(t3, e7) {
  if (e7 <= 0)
    throw new U2(P4, `Function ${t3}() requires a positive number, but it was: ${e7}.`);
}
function ht2(t3) {
  return null == t3;
}
function lt2(t3) {
  return 0 === t3 && 1 / t3 == -1 / 0;
}
function mt2(t3) {
  if (void 0 === t3)
    return g4("RPC_ERROR", "HTTP error has no status"), R2;
  switch (t3) {
    case 200:
      return T3;
    case 400:
      return S4;
    case 401:
      return F3;
    case 403:
      return D2;
    case 404:
      return $3;
    case 409:
      return q4;
    case 416:
      return O2;
    case 429:
      return x3;
    case 499:
      return A5;
    case 500:
      return R2;
    case 501:
      return k4;
    case 503:
      return L3;
    case 504:
      return V3;
    default:
      return t3 >= 200 && t3 < 300 ? T3 : t3 >= 400 && t3 < 500 ? S4 : t3 >= 500 && t3 < 600 ? C4 : R2;
  }
}
function yt2(t3) {
  const e7 = "undefined" != typeof self && (self.crypto || self.msCrypto), n3 = new Uint8Array(t3);
  if (e7 && "function" == typeof e7.getRandomValues)
    e7.getRandomValues(n3);
  else
    for (let e8 = 0; e8 < t3; e8++)
      n3[e8] = Math.floor(256 * Math.random());
  return n3;
}
function _t3(t3, e7) {
  return t3 < e7 ? -1 : t3 > e7 ? 1 : 0;
}
function vt2(t3, e7, n3) {
  return t3.length === e7.length && t3.every((t4, r6) => n3(t4, e7[r6]));
}
function bt2(t3) {
  let e7 = 0;
  for (const n3 in t3)
    Object.prototype.hasOwnProperty.call(t3, n3) && e7++;
  return e7;
}
function Et2(t3, e7) {
  for (const n3 in t3)
    Object.prototype.hasOwnProperty.call(t3, n3) && e7(n3, t3[n3]);
}
function At2(t3) {
  if (E3(!!t3), "string" == typeof t3) {
    let e7 = 0;
    const n3 = Tt2.exec(t3);
    if (E3(!!n3), n3[1]) {
      let t4 = n3[1];
      t4 = (t4 + "000000000").substr(0, 9), e7 = Number(t4);
    }
    const r6 = new Date(t3);
    return {
      seconds: Math.floor(r6.getTime() / 1e3),
      nanos: e7
    };
  }
  return {
    seconds: Rt2(t3.seconds),
    nanos: Rt2(t3.nanos)
  };
}
function Rt2(t3) {
  return "number" == typeof t3 ? t3 : "string" == typeof t3 ? Number(t3) : 0;
}
function Pt2(t3) {
  return "string" == typeof t3 ? It2.fromBase64String(t3) : It2.fromUint8Array(t3);
}
function $t2(t3) {
  var e7, n3;
  return "server_timestamp" === (null === (n3 = ((null === (e7 = null == t3 ? void 0 : t3.mapValue) || void 0 === e7 ? void 0 : e7.fields) || {}).__type__) || void 0 === n3 ? void 0 : n3.stringValue);
}
function Nt2(t3) {
  const e7 = t3.mapValue.fields.__previous_value__;
  return $t2(e7) ? Nt2(e7) : e7;
}
function Dt(t3) {
  const e7 = At2(t3.mapValue.fields.__local_write_time__.timestampValue);
  return new Vt2(e7.seconds, e7.nanos);
}
function xt2(t3) {
  return "nullValue" in t3 ? 0 : "booleanValue" in t3 ? 1 : "integerValue" in t3 || "doubleValue" in t3 ? 2 : "timestampValue" in t3 ? 3 : "stringValue" in t3 ? 5 : "bytesValue" in t3 ? 6 : "referenceValue" in t3 ? 7 : "geoPointValue" in t3 ? 8 : "arrayValue" in t3 ? 9 : "mapValue" in t3 ? $t2(t3) ? 4 : function(t4) {
    return "__max__" === (((t4.mapValue || {}).fields || {}).__type__ || {}).stringValue;
  }(t3) ? 9007199254740991 : 10 : b3();
}
function St2(t3, e7) {
  if (t3 === e7)
    return true;
  const n3 = xt2(t3);
  if (n3 !== xt2(e7))
    return false;
  switch (n3) {
    case 0:
    case 9007199254740991:
      return true;
    case 1:
      return t3.booleanValue === e7.booleanValue;
    case 4:
      return Dt(t3).isEqual(Dt(e7));
    case 3:
      return function(t4, e8) {
        if ("string" == typeof t4.timestampValue && "string" == typeof e8.timestampValue && t4.timestampValue.length === e8.timestampValue.length)
          return t4.timestampValue === e8.timestampValue;
        const n4 = At2(t4.timestampValue), r6 = At2(e8.timestampValue);
        return n4.seconds === r6.seconds && n4.nanos === r6.nanos;
      }(t3, e7);
    case 5:
      return t3.stringValue === e7.stringValue;
    case 6:
      return function(t4, e8) {
        return Pt2(t4.bytesValue).isEqual(Pt2(e8.bytesValue));
      }(t3, e7);
    case 7:
      return t3.referenceValue === e7.referenceValue;
    case 8:
      return function(t4, e8) {
        return Rt2(t4.geoPointValue.latitude) === Rt2(e8.geoPointValue.latitude) && Rt2(t4.geoPointValue.longitude) === Rt2(e8.geoPointValue.longitude);
      }(t3, e7);
    case 2:
      return function(t4, e8) {
        if ("integerValue" in t4 && "integerValue" in e8)
          return Rt2(t4.integerValue) === Rt2(e8.integerValue);
        if ("doubleValue" in t4 && "doubleValue" in e8) {
          const n4 = Rt2(t4.doubleValue), r6 = Rt2(e8.doubleValue);
          return n4 === r6 ? lt2(n4) === lt2(r6) : isNaN(n4) && isNaN(r6);
        }
        return false;
      }(t3, e7);
    case 9:
      return vt2(t3.arrayValue.values || [], e7.arrayValue.values || [], St2);
    case 10:
      return function(t4, e8) {
        const n4 = t4.mapValue.fields || {}, r6 = e8.mapValue.fields || {};
        if (bt2(n4) !== bt2(r6))
          return false;
        for (const t5 in n4)
          if (n4.hasOwnProperty(t5) && (void 0 === r6[t5] || !St2(n4[t5], r6[t5])))
            return false;
        return true;
      }(t3, e7);
    default:
      return b3();
  }
}
function qt2(t3, e7) {
  return void 0 !== (t3.values || []).find((t4) => St2(t4, e7));
}
function Ot2(t3, e7) {
  if (t3 === e7)
    return 0;
  const n3 = xt2(t3), r6 = xt2(e7);
  if (n3 !== r6)
    return _t3(n3, r6);
  switch (n3) {
    case 0:
    case 9007199254740991:
      return 0;
    case 1:
      return _t3(t3.booleanValue, e7.booleanValue);
    case 2:
      return function(t4, e8) {
        const n4 = Rt2(t4.integerValue || t4.doubleValue), r7 = Rt2(e8.integerValue || e8.doubleValue);
        return n4 < r7 ? -1 : n4 > r7 ? 1 : n4 === r7 ? 0 : isNaN(n4) ? isNaN(r7) ? 0 : -1 : 1;
      }(t3, e7);
    case 3:
      return kt2(t3.timestampValue, e7.timestampValue);
    case 4:
      return kt2(Dt(t3), Dt(e7));
    case 5:
      return _t3(t3.stringValue, e7.stringValue);
    case 6:
      return function(t4, e8) {
        const n4 = Pt2(t4), r7 = Pt2(e8);
        return n4.compareTo(r7);
      }(t3.bytesValue, e7.bytesValue);
    case 7:
      return function(t4, e8) {
        const n4 = t4.split("/"), r7 = e8.split("/");
        for (let t5 = 0; t5 < n4.length && t5 < r7.length; t5++) {
          const e9 = _t3(n4[t5], r7[t5]);
          if (0 !== e9)
            return e9;
        }
        return _t3(n4.length, r7.length);
      }(t3.referenceValue, e7.referenceValue);
    case 8:
      return function(t4, e8) {
        const n4 = _t3(Rt2(t4.latitude), Rt2(e8.latitude));
        if (0 !== n4)
          return n4;
        return _t3(Rt2(t4.longitude), Rt2(e8.longitude));
      }(t3.geoPointValue, e7.geoPointValue);
    case 9:
      return function(t4, e8) {
        const n4 = t4.values || [], r7 = e8.values || [];
        for (let t5 = 0; t5 < n4.length && t5 < r7.length; ++t5) {
          const e9 = Ot2(n4[t5], r7[t5]);
          if (e9)
            return e9;
        }
        return _t3(n4.length, r7.length);
      }(t3.arrayValue, e7.arrayValue);
    case 10:
      return function(t4, e8) {
        if (t4 === Ft2 && e8 === Ft2)
          return 0;
        if (t4 === Ft2)
          return 1;
        if (e8 === Ft2)
          return -1;
        const n4 = t4.fields || {}, r7 = Object.keys(n4), s6 = e8.fields || {}, i4 = Object.keys(s6);
        r7.sort(), i4.sort();
        for (let t5 = 0; t5 < r7.length && t5 < i4.length; ++t5) {
          const e9 = _t3(r7[t5], i4[t5]);
          if (0 !== e9)
            return e9;
          const o4 = Ot2(n4[r7[t5]], s6[i4[t5]]);
          if (0 !== o4)
            return o4;
        }
        return _t3(r7.length, i4.length);
      }(t3.mapValue, e7.mapValue);
    default:
      throw b3();
  }
}
function kt2(t3, e7) {
  if ("string" == typeof t3 && "string" == typeof e7 && t3.length === e7.length)
    return _t3(t3, e7);
  const n3 = At2(t3), r6 = At2(e7), s6 = _t3(n3.seconds, r6.seconds);
  return 0 !== s6 ? s6 : _t3(n3.nanos, r6.nanos);
}
function Ct2(t3, e7) {
  return {
    referenceValue: `projects/${t3.projectId}/databases/${t3.database}/documents/${e7.path.canonicalString()}`
  };
}
function Lt(t3) {
  return !!t3 && "arrayValue" in t3;
}
function Mt(t3) {
  return !!t3 && "nullValue" in t3;
}
function Ut2(t3) {
  return !!t3 && "doubleValue" in t3 && isNaN(Number(t3.doubleValue));
}
function jt2(t3) {
  return !!t3 && "mapValue" in t3;
}
function Bt2(t3) {
  if (t3.geoPointValue)
    return {
      geoPointValue: Object.assign({}, t3.geoPointValue)
    };
  if (t3.timestampValue && "object" == typeof t3.timestampValue)
    return {
      timestampValue: Object.assign({}, t3.timestampValue)
    };
  if (t3.mapValue) {
    const e7 = {
      mapValue: {
        fields: {}
      }
    };
    return Et2(t3.mapValue.fields, (t4, n3) => e7.mapValue.fields[t4] = Bt2(n3)), e7;
  }
  if (t3.arrayValue) {
    const e7 = {
      arrayValue: {
        values: []
      }
    };
    for (let n3 = 0; n3 < (t3.arrayValue.values || []).length; ++n3)
      e7.arrayValue.values[n3] = Bt2(t3.arrayValue.values[n3]);
    return e7;
  }
  return Object.assign({}, t3);
}
function zt2(t3, e7) {
  if (null === t3)
    return null === e7;
  if (null === e7)
    return false;
  if (t3.inclusive !== e7.inclusive || t3.position.length !== e7.position.length)
    return false;
  for (let n3 = 0; n3 < t3.position.length; n3++) {
    if (!St2(t3.position[n3], e7.position[n3]))
      return false;
  }
  return true;
}
function Yt(t3, e7) {
  return t3 instanceof Gt2 ? function(t4, e8) {
    return e8 instanceof Gt2 && t4.op === e8.op && t4.field.isEqual(e8.field) && St2(t4.value, e8.value);
  }(t3, e7) : t3 instanceof Kt ? function(t4, e8) {
    if (e8 instanceof Kt && t4.op === e8.op && t4.filters.length === e8.filters.length) {
      return t4.filters.reduce((t5, n3, r6) => t5 && Yt(n3, e8.filters[r6]), true);
    }
    return false;
  }(t3, e7) : void b3();
}
function Zt(t3, e7) {
  var n3;
  return ((null === (n3 = e7.arrayValue) || void 0 === n3 ? void 0 : n3.values) || []).map((t4) => rt2.fromName(t4.referenceValue));
}
function ie(t3, e7) {
  return t3.dir === e7.dir && t3.field.isEqual(e7.field);
}
function pe2(t3, e7 = null, n3 = [], r6 = [], s6 = null, i4 = null, o4 = null) {
  return new me2(t3, e7, n3, r6, s6, i4, o4);
}
function ge2(t3) {
  return t3.explicitOrderBy.length > 0 ? t3.explicitOrderBy[0].field : null;
}
function _e3(t3) {
  for (const e7 of t3.filters) {
    const t4 = e7.getFirstInequalityField();
    if (null !== t4)
      return t4;
  }
  return null;
}
function ve2(t3) {
  return null !== t3.collectionGroup;
}
function be2(t3) {
  const e7 = I5(t3);
  if (null === e7.q) {
    e7.q = [];
    const t4 = _e3(e7), n3 = ge2(e7);
    if (null !== t4 && null === n3)
      t4.isKeyField() || e7.q.push(new se2(t4)), e7.q.push(new se2(nt2.keyField(), "asc"));
    else {
      let t5 = false;
      for (const n4 of e7.explicitOrderBy)
        e7.q.push(n4), n4.field.isKeyField() && (t5 = true);
      if (!t5) {
        const t6 = e7.explicitOrderBy.length > 0 ? e7.explicitOrderBy[e7.explicitOrderBy.length - 1].dir : "asc";
        e7.q.push(new se2(nt2.keyField(), t6));
      }
    }
  }
  return e7.q;
}
function Ee(t3) {
  const e7 = I5(t3);
  if (!e7.O)
    if ("F" === e7.limitType)
      e7.O = pe2(e7.path, e7.collectionGroup, be2(e7), e7.filters, e7.limit, e7.startAt, e7.endAt);
    else {
      const t4 = [];
      for (const n4 of be2(e7)) {
        const e8 = "desc" === n4.dir ? "asc" : "desc";
        t4.push(new se2(n4.field, e8));
      }
      const n3 = e7.endAt ? new Qt(e7.endAt.position, e7.endAt.inclusive) : null, r6 = e7.startAt ? new Qt(e7.startAt.position, e7.startAt.inclusive) : null;
      e7.O = pe2(e7.path, e7.collectionGroup, t4, e7.filters, e7.limit, n3, r6);
    }
  return e7.O;
}
function Ie2(t3, e7) {
  e7.getFirstInequalityField(), _e3(t3);
  const n3 = t3.filters.concat([e7]);
  return new ye2(t3.path, t3.collectionGroup, t3.explicitOrderBy.slice(), n3, t3.limit, t3.limitType, t3.startAt, t3.endAt);
}
function Te2(t3, e7) {
  return function(t4, e8) {
    if (t4.limit !== e8.limit)
      return false;
    if (t4.orderBy.length !== e8.orderBy.length)
      return false;
    for (let n3 = 0; n3 < t4.orderBy.length; n3++)
      if (!ie(t4.orderBy[n3], e8.orderBy[n3]))
        return false;
    if (t4.filters.length !== e8.filters.length)
      return false;
    for (let n3 = 0; n3 < t4.filters.length; n3++)
      if (!Yt(t4.filters[n3], e8.filters[n3]))
        return false;
    return t4.collectionGroup === e8.collectionGroup && !!t4.path.isEqual(e8.path) && !!zt2(t4.startAt, e8.startAt) && zt2(t4.endAt, e8.endAt);
  }(Ee(t3), Ee(e7)) && t3.limitType === e7.limitType;
}
function Ae2(t3, e7) {
  return function(t4) {
    return "number" == typeof t4 && Number.isInteger(t4) && !lt2(t4) && t4 <= Number.MAX_SAFE_INTEGER && t4 >= Number.MIN_SAFE_INTEGER;
  }(e7) ? function(t4) {
    return {
      integerValue: "" + t4
    };
  }(e7) : function(t4, e8) {
    if (t4.k) {
      if (isNaN(e8))
        return {
          doubleValue: "NaN"
        };
      if (e8 === 1 / 0)
        return {
          doubleValue: "Infinity"
        };
      if (e8 === -1 / 0)
        return {
          doubleValue: "-Infinity"
        };
    }
    return {
      doubleValue: lt2(e8) ? "-0" : e8
    };
  }(t3, e7);
}
function je2(t3, e7) {
  if (t3.k) {
    return `${new Date(1e3 * e7.seconds).toISOString().replace(/\.\d*/, "").replace("Z", "")}.${("000000000" + e7.nanoseconds).slice(-9)}Z`;
  }
  return {
    seconds: "" + e7.seconds,
    nanos: e7.nanoseconds
  };
}
function Be2(t3, e7) {
  return t3.k ? e7.toBase64() : e7.toUint8Array();
}
function Qe(t3, e7) {
  return je2(t3, e7.toTimestamp());
}
function ze2(t3) {
  return E3(!!t3), oe2.fromTimestamp(function(t4) {
    const e7 = At2(t4);
    return new Vt2(e7.seconds, e7.nanos);
  }(t3));
}
function We2(t3, e7) {
  return function(t4) {
    return new tt2(["projects", t4.projectId, "databases", t4.database]);
  }(t3).child("documents").child(e7).canonicalString();
}
function Ge2(t3, e7) {
  return We2(t3.databaseId, e7.path);
}
function Ke(t3, e7) {
  const n3 = function(t4) {
    const e8 = tt2.fromString(t4);
    return E3(cn(e8)), e8;
  }(e7);
  if (n3.get(1) !== t3.databaseId.projectId)
    throw new U2(P4, "Tried to deserialize key from different project: " + n3.get(1) + " vs " + t3.databaseId.projectId);
  if (n3.get(3) !== t3.databaseId.database)
    throw new U2(P4, "Tried to deserialize key from different database: " + n3.get(3) + " vs " + t3.databaseId.database);
  return new rt2((E3((r6 = n3).length > 4 && "documents" === r6.get(4)), r6.popFirst(5)));
  var r6;
}
function Ye2(t3, e7) {
  return We2(t3.databaseId, e7);
}
function He2(t3) {
  return new tt2(["projects", t3.databaseId.projectId, "databases", t3.databaseId.database]).canonicalString();
}
function Je2(t3, e7, n3) {
  return {
    name: Ge2(t3, e7),
    fields: n3.value.mapValue.fields
  };
}
function Xe(t3, e7) {
  return "found" in e7 ? function(t4, e8) {
    E3(!!e8.found), e8.found.name, e8.found.updateTime;
    const n3 = Ke(t4, e8.found.name), r6 = ze2(e8.found.updateTime), s6 = e8.found.createTime ? ze2(e8.found.createTime) : oe2.min(), i4 = new de2({
      mapValue: {
        fields: e8.found.fields
      }
    });
    return we2.newFoundDocument(n3, r6, s6, i4);
  }(t3, e7) : "missing" in e7 ? function(t4, e8) {
    E3(!!e8.missing), E3(!!e8.readTime);
    const n3 = Ke(t4, e8.missing), r6 = ze2(e8.readTime);
    return we2.newNoDocument(n3, r6);
  }(t3, e7) : b3();
}
function Ze2(t3, e7) {
  let n3;
  if (e7 instanceof Se2)
    n3 = {
      update: Je2(t3, e7.key, e7.value)
    };
  else if (e7 instanceof Oe2)
    n3 = {
      delete: Ge2(t3, e7.key)
    };
  else if (e7 instanceof qe2)
    n3 = {
      update: Je2(t3, e7.key, e7.data),
      updateMask: un(e7.fieldMask)
    };
  else {
    if (!(e7 instanceof ke2))
      return b3();
    n3 = {
      verify: Ge2(t3, e7.key)
    };
  }
  return e7.fieldTransforms.length > 0 && (n3.updateTransforms = e7.fieldTransforms.map((t4) => function(t5, e8) {
    const n4 = e8.transform;
    if (n4 instanceof Pe2)
      return {
        fieldPath: e8.field.canonicalString(),
        setToServerValue: "REQUEST_TIME"
      };
    if (n4 instanceof Ve2)
      return {
        fieldPath: e8.field.canonicalString(),
        appendMissingElements: {
          values: n4.elements
        }
      };
    if (n4 instanceof $e2)
      return {
        fieldPath: e8.field.canonicalString(),
        removeAllFromArray: {
          values: n4.elements
        }
      };
    if (n4 instanceof Ne2)
      return {
        fieldPath: e8.field.canonicalString(),
        increment: n4.L
      };
    throw b3();
  }(0, t4))), e7.precondition.isNone || (n3.currentDocument = function(t4, e8) {
    return void 0 !== e8.updateTime ? {
      updateTime: Qe(t4, e8.updateTime)
    } : void 0 !== e8.exists ? {
      exists: e8.exists
    } : b3();
  }(t3, e7.precondition)), n3;
}
function tn(t3, e7) {
  const n3 = {
    structuredQuery: {}
  }, r6 = e7.path;
  null !== e7.collectionGroup ? (n3.parent = Ye2(t3, r6), n3.structuredQuery.from = [{
    collectionId: e7.collectionGroup,
    allDescendants: true
  }]) : (n3.parent = Ye2(t3, r6.popLast()), n3.structuredQuery.from = [{
    collectionId: r6.lastSegment()
  }]);
  const s6 = function(t4) {
    if (0 === t4.length)
      return;
    return on(Kt.create(t4, "and"));
  }(e7.filters);
  s6 && (n3.structuredQuery.where = s6);
  const i4 = function(t4) {
    if (0 === t4.length)
      return;
    return t4.map((t5) => function(t6) {
      return {
        field: sn(t6.field),
        direction: en(t6.dir)
      };
    }(t5));
  }(e7.orderBy);
  i4 && (n3.structuredQuery.orderBy = i4);
  const o4 = function(t4, e8) {
    return t4.k || ht2(e8) ? e8 : {
      value: e8
    };
  }(t3, e7.limit);
  var u;
  return null !== o4 && (n3.structuredQuery.limit = o4), e7.startAt && (n3.structuredQuery.startAt = {
    before: (u = e7.startAt).inclusive,
    values: u.position
  }), e7.endAt && (n3.structuredQuery.endAt = function(t4) {
    return {
      before: !t4.inclusive,
      values: t4.position
    };
  }(e7.endAt)), n3;
}
function en(t3) {
  return Ce2[t3];
}
function nn(t3) {
  return Le2[t3];
}
function rn(t3) {
  return Me2[t3];
}
function sn(t3) {
  return {
    fieldPath: t3.canonicalString()
  };
}
function on(t3) {
  return t3 instanceof Gt2 ? function(t4) {
    if ("==" === t4.op) {
      if (Ut2(t4.value))
        return {
          unaryFilter: {
            field: sn(t4.field),
            op: "IS_NAN"
          }
        };
      if (Mt(t4.value))
        return {
          unaryFilter: {
            field: sn(t4.field),
            op: "IS_NULL"
          }
        };
    } else if ("!=" === t4.op) {
      if (Ut2(t4.value))
        return {
          unaryFilter: {
            field: sn(t4.field),
            op: "IS_NOT_NAN"
          }
        };
      if (Mt(t4.value))
        return {
          unaryFilter: {
            field: sn(t4.field),
            op: "IS_NOT_NULL"
          }
        };
    }
    return {
      fieldFilter: {
        field: sn(t4.field),
        op: nn(t4.op),
        value: t4.value
      }
    };
  }(t3) : t3 instanceof Kt ? function(t4) {
    const e7 = t4.getFilters().map((t5) => on(t5));
    if (1 === e7.length)
      return e7[0];
    return {
      compositeFilter: {
        op: rn(t4.op),
        filters: e7
      }
    };
  }(t3) : b3();
}
function un(t3) {
  const e7 = [];
  return t3.fields.forEach((t4) => e7.push(t4.canonicalString())), {
    fieldPaths: e7
  };
}
function cn(t3) {
  return t3.length >= 4 && "projects" === t3.get(0) && "databases" === t3.get(2);
}
function an(t3) {
  return new Ue2(t3, true);
}
async function fn(t3, e7) {
  const n3 = I5(t3), r6 = He2(n3.C) + "/documents", s6 = {
    writes: e7.map((t4) => Ze2(n3.C, t4))
  };
  await n3.I("Commit", r6, s6);
}
async function dn(t3, e7) {
  const n3 = I5(t3), r6 = He2(n3.C) + "/documents", s6 = {
    documents: e7.map((t4) => Ge2(n3.C, t4))
  }, i4 = await n3.P("BatchGetDocuments", r6, s6, e7.length), o4 = /* @__PURE__ */ new Map();
  i4.forEach((t4) => {
    const e8 = Xe(n3.C, t4);
    o4.set(e8.key.toString(), e8);
  });
  const u = [];
  return e7.forEach((t4) => {
    const e8 = o4.get(t4.toString());
    E3(!!e8), u.push(e8);
  }), u;
}
async function wn(t3, e7) {
  const n3 = I5(t3), r6 = tn(n3.C, Ee(e7));
  return (await n3.P("RunQuery", r6.parent, {
    structuredQuery: r6.structuredQuery
  })).filter((t4) => !!t4.document).map((t4) => function(t5, e8, n4) {
    const r7 = Ke(t5, e8.name), s6 = ze2(e8.updateTime), i4 = e8.createTime ? ze2(e8.createTime) : oe2.min(), o4 = new de2({
      mapValue: {
        fields: e8.fields
      }
    }), u = we2.newFoundDocument(r7, s6, i4, o4);
    return n4 && u.setHasCommittedMutations(), n4 ? u.setHasCommittedMutations() : u;
  }(n3.C, t4.document, void 0));
}
async function mn(t3, e7) {
  const n3 = I5(t3), r6 = function(t4, e8) {
    const n4 = tn(t4, e8);
    return {
      structuredAggregationQuery: {
        aggregations: [{
          count: {},
          alias: "count_alias"
        }],
        structuredQuery: n4.structuredQuery
      },
      parent: n4.parent
    };
  }(n3.C, Ee(e7)), s6 = r6.parent;
  n3.connection.v || delete r6.parent;
  return (await n3.P("RunAggregationQuery", s6, r6, 1)).filter((t4) => !!t4.result).map((t4) => t4.result.aggregateFields);
}
function yn(t3) {
  if (t3._terminated)
    throw new U2(S4, "The client has already been terminated.");
  if (!pn.has(t3)) {
    y4("ComponentProvider", "Initializing Datastore");
    const i4 = function(t4) {
      return new pt2(t4, fetch.bind(null));
    }((e7 = t3._databaseId, n3 = t3.app.options.appId || "", r6 = t3._persistenceKey, s6 = t3._freezeSettings(), new J2(e7, n3, r6, s6.host, s6.ssl, s6.experimentalForceLongPolling, s6.experimentalAutoDetectLongPolling, s6.useFetchStreams))), o4 = an(t3._databaseId), u = function(t4, e8, n4, r7) {
      return new ln(t4, e8, n4, r7);
    }(t3._authCredentials, t3._appCheckCredentials, i4, o4);
    pn.set(t3, u);
  }
  var e7, n3, r6, s6;
  return pn.get(t3);
}
function vn(t3, e7, n3) {
  n3 || (n3 = "(default)");
  const r6 = _getProvider(t3, "firestore/lite");
  if (r6.isInitialized(n3))
    throw new U2(S4, "Firestore can only be initialized once per app.");
  return r6.initialize({
    options: e7,
    instanceIdentifier: n3
  });
}
function bn(e7, n3) {
  const r6 = "object" == typeof e7 ? e7 : getApp(), s6 = "string" == typeof e7 ? e7 : n3 || "(default)", i4 = _getProvider(r6, "firestore/lite").getImmediate({
    identifier: s6
  });
  if (!i4._initialized) {
    const t3 = getDefaultEmulatorHostnameAndPort("firestore");
    t3 && En(i4, ...t3);
  }
  return i4;
}
function En(t3, e7, n3, r6 = {}) {
  var s6;
  const i4 = (t3 = ct2(t3, _n2))._getSettings();
  if ("firestore.googleapis.com" !== i4.host && i4.host !== e7 && _5("Host has been set in both settings() and useEmulator(), emulator host will be used"), t3._setSettings(Object.assign(Object.assign({}, i4), {
    host: `${e7}:${n3}`,
    ssl: false
  })), r6.mockUserToken) {
    let e8, n4;
    if ("string" == typeof r6.mockUserToken)
      e8 = r6.mockUserToken, n4 = d4.MOCK_USER;
    else {
      e8 = createMockUserToken(r6.mockUserToken, null === (s6 = t3._app) || void 0 === s6 ? void 0 : s6.options.projectId);
      const i5 = r6.mockUserToken.sub || r6.mockUserToken.user_id;
      if (!i5)
        throw new U2(P4, "mockUserToken must contain 'sub' or 'user_id' field!");
      n4 = new d4(i5);
    }
    t3._authCredentials = new z4(new B3(e8, n4));
  }
}
function In(t3) {
  return t3 = ct2(t3, _n2), _removeServiceInstance(t3.app, "firestore/lite"), t3._delete();
}
function Nn(t3, e7, ...n3) {
  if (t3 = getModularInstance(t3), st2("collection", "path", e7), t3 instanceof _n2) {
    const r6 = tt2.fromString(e7, ...n3);
    return ot2(r6), new $n(t3, null, r6);
  }
  {
    if (!(t3 instanceof Pn || t3 instanceof $n))
      throw new U2(P4, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    const r6 = t3._path.child(tt2.fromString(e7, ...n3));
    return ot2(r6), new $n(
      t3.firestore,
      null,
      r6
    );
  }
}
function Dn(t3, e7) {
  if (t3 = ct2(t3, _n2), st2("collectionGroup", "collection id", e7), e7.indexOf("/") >= 0)
    throw new U2(P4, `Invalid collection ID '${e7}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);
  return new Vn(
    t3,
    null,
    function(t4) {
      return new ye2(tt2.emptyPath(), t4);
    }(e7)
  );
}
function Fn(t3, e7, ...n3) {
  if (t3 = getModularInstance(t3), 1 === arguments.length && (e7 = gt2.N()), st2("doc", "path", e7), t3 instanceof _n2) {
    const r6 = tt2.fromString(e7, ...n3);
    return it2(r6), new Pn(
      t3,
      null,
      new rt2(r6)
    );
  }
  {
    if (!(t3 instanceof Pn || t3 instanceof $n))
      throw new U2(P4, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    const r6 = t3._path.child(tt2.fromString(e7, ...n3));
    return it2(r6), new Pn(t3.firestore, t3 instanceof $n ? t3.converter : null, new rt2(r6));
  }
}
function xn(t3, e7) {
  return t3 = getModularInstance(t3), e7 = getModularInstance(e7), (t3 instanceof Pn || t3 instanceof $n) && (e7 instanceof Pn || e7 instanceof $n) && (t3.firestore === e7.firestore && t3.path === e7.path && t3.converter === e7.converter);
}
function Sn(t3, e7) {
  return t3 = getModularInstance(t3), e7 = getModularInstance(e7), t3 instanceof Vn && e7 instanceof Vn && (t3.firestore === e7.firestore && Te2(t3._query, e7._query) && t3.converter === e7.converter);
}
function kn() {
  return new On("__name__");
}
function Bn(t3) {
  switch (t3) {
    case 0:
    case 2:
    case 1:
      return true;
    case 3:
    case 4:
      return false;
    default:
      throw b3();
  }
}
function Wn(t3) {
  const e7 = t3._freezeSettings(), n3 = an(t3._databaseId);
  return new zn(t3._databaseId, !!e7.ignoreUndefinedProperties, n3);
}
function Gn(t3, e7, n3, r6, s6, i4 = {}) {
  const o4 = t3.ft(i4.merge || i4.mergeFields ? 2 : 0, e7, n3, s6);
  or("Data must be an object, but it was:", o4, r6);
  const u = sr(r6, o4);
  let c4, a4;
  if (i4.merge)
    c4 = new fe2(o4.fieldMask), a4 = o4.fieldTransforms;
  else if (i4.mergeFields) {
    const t4 = [];
    for (const r7 of i4.mergeFields) {
      const s7 = ur(e7, r7, n3);
      if (!o4.contains(s7))
        throw new U2(P4, `Field '${s7}' is specified in your field mask but missing from your input data.`);
      lr(t4, s7) || t4.push(s7);
    }
    c4 = new fe2(t4), a4 = o4.fieldTransforms.filter((t5) => c4.covers(t5.field));
  } else
    c4 = null, a4 = o4.fieldTransforms;
  return new Un(new de2(u), c4, a4);
}
function Yn(t3, e7, n3) {
  return new Qn({
    nt: 3,
    lt: e7.settings.lt,
    methodName: t3._methodName,
    it: n3
  }, e7.databaseId, e7.C, e7.ignoreUndefinedProperties);
}
function tr(t3, e7, n3, r6) {
  const s6 = t3.ft(1, e7, n3);
  or("Data must be an object, but it was:", s6, r6);
  const i4 = [], o4 = de2.empty();
  Et2(r6, (t4, r7) => {
    const u2 = ar(e7, t4, n3);
    r7 = getModularInstance(r7);
    const c4 = s6.ut(u2);
    if (r7 instanceof Kn)
      i4.push(u2);
    else {
      const t5 = rr(r7, c4);
      null != t5 && (i4.push(u2), o4.set(u2, t5));
    }
  });
  const u = new fe2(i4);
  return new jn(o4, u, s6.fieldTransforms);
}
function er(t3, e7, n3, r6, s6, i4) {
  const o4 = t3.ft(1, e7, n3), u = [ur(e7, r6, n3)], c4 = [s6];
  if (i4.length % 2 != 0)
    throw new U2(P4, `Function ${e7}() needs to be called with an even number of arguments that alternate between field names and values.`);
  for (let t4 = 0; t4 < i4.length; t4 += 2)
    u.push(ur(e7, i4[t4])), c4.push(i4[t4 + 1]);
  const a4 = [], h3 = de2.empty();
  for (let t4 = u.length - 1; t4 >= 0; --t4)
    if (!lr(a4, u[t4])) {
      const e8 = u[t4];
      let n4 = c4[t4];
      n4 = getModularInstance(n4);
      const r7 = o4.ut(e8);
      if (n4 instanceof Kn)
        a4.push(e8);
      else {
        const t5 = rr(n4, r7);
        null != t5 && (a4.push(e8), h3.set(e8, t5));
      }
    }
  const f6 = new fe2(a4);
  return new jn(h3, f6, o4.fieldTransforms);
}
function nr(t3, e7, n3, r6 = false) {
  return rr(n3, t3.ft(r6 ? 4 : 3, e7));
}
function rr(t3, e7) {
  if (ir(
    t3 = getModularInstance(t3)
  ))
    return or("Unsupported field value:", e7, t3), sr(t3, e7);
  if (t3 instanceof Cn)
    return function(t4, e8) {
      if (!Bn(e8.nt))
        throw e8.at(`${t4._methodName}() can only be used with update() and set()`);
      if (!e8.path)
        throw e8.at(`${t4._methodName}() is not currently supported inside arrays`);
      const n3 = t4._toFieldTransform(e8);
      n3 && e8.fieldTransforms.push(n3);
    }(t3, e7), null;
  if (void 0 === t3 && e7.ignoreUndefinedProperties)
    return null;
  if (e7.path && e7.fieldMask.push(e7.path), t3 instanceof Array) {
    if (e7.settings.it && 4 !== e7.nt)
      throw e7.at("Nested arrays are not supported");
    return function(t4, e8) {
      const n3 = [];
      let r6 = 0;
      for (const s6 of t4) {
        let t5 = rr(s6, e8.ct(r6));
        null == t5 && (t5 = {
          nullValue: "NULL_VALUE"
        }), n3.push(t5), r6++;
      }
      return {
        arrayValue: {
          values: n3
        }
      };
    }(t3, e7);
  }
  return function(t4, e8) {
    if (null === (t4 = getModularInstance(t4)))
      return {
        nullValue: "NULL_VALUE"
      };
    if ("number" == typeof t4)
      return Ae2(e8.C, t4);
    if ("boolean" == typeof t4)
      return {
        booleanValue: t4
      };
    if ("string" == typeof t4)
      return {
        stringValue: t4
      };
    if (t4 instanceof Date) {
      const n3 = Vt2.fromDate(t4);
      return {
        timestampValue: je2(e8.C, n3)
      };
    }
    if (t4 instanceof Vt2) {
      const n3 = new Vt2(t4.seconds, 1e3 * Math.floor(t4.nanoseconds / 1e3));
      return {
        timestampValue: je2(e8.C, n3)
      };
    }
    if (t4 instanceof Ln)
      return {
        geoPointValue: {
          latitude: t4.latitude,
          longitude: t4.longitude
        }
      };
    if (t4 instanceof qn)
      return {
        bytesValue: Be2(e8.C, t4._byteString)
      };
    if (t4 instanceof Pn) {
      const n3 = e8.databaseId, r6 = t4.firestore._databaseId;
      if (!r6.isEqual(n3))
        throw e8.at(`Document reference is for database ${r6.projectId}/${r6.database} but should be for database ${n3.projectId}/${n3.database}`);
      return {
        referenceValue: We2(t4.firestore._databaseId || e8.databaseId, t4._key.path)
      };
    }
    throw e8.at(`Unsupported field value: ${ut2(t4)}`);
  }(t3, e7);
}
function sr(t3, e7) {
  const n3 = {};
  return !function(t4) {
    for (const e8 in t4)
      if (Object.prototype.hasOwnProperty.call(t4, e8))
        return false;
    return true;
  }(t3) ? Et2(t3, (t4, r6) => {
    const s6 = rr(r6, e7.st(t4));
    null != s6 && (n3[t4] = s6);
  }) : e7.path && e7.path.length > 0 && e7.fieldMask.push(e7.path), {
    mapValue: {
      fields: n3
    }
  };
}
function ir(t3) {
  return !("object" != typeof t3 || null === t3 || t3 instanceof Array || t3 instanceof Date || t3 instanceof Vt2 || t3 instanceof Ln || t3 instanceof qn || t3 instanceof Pn || t3 instanceof Cn);
}
function or(t3, e7, n3) {
  if (!ir(n3) || !function(t4) {
    return "object" == typeof t4 && null !== t4 && (Object.getPrototypeOf(t4) === Object.prototype || null === Object.getPrototypeOf(t4));
  }(n3)) {
    const r6 = ut2(n3);
    throw "an object" === r6 ? e7.at(t3 + " a custom object") : e7.at(t3 + " " + r6);
  }
}
function ur(t3, e7, n3) {
  if ((e7 = getModularInstance(e7)) instanceof On)
    return e7._internalPath;
  if ("string" == typeof e7)
    return ar(t3, e7);
  throw hr(
    "Field path arguments must be of type string or ",
    t3,
    false,
    void 0,
    n3
  );
}
function ar(t3, e7, n3) {
  if (e7.search(cr) >= 0)
    throw hr(
      `Invalid field path (${e7}). Paths must not contain '~', '*', '/', '[', or ']'`,
      t3,
      false,
      void 0,
      n3
    );
  try {
    return new On(...e7.split("."))._internalPath;
  } catch (r6) {
    throw hr(
      `Invalid field path (${e7}). Paths must not be empty, begin with '.', end with '.', or contain '..'`,
      t3,
      false,
      void 0,
      n3
    );
  }
}
function hr(t3, e7, n3, r6, s6) {
  const i4 = r6 && !r6.isEmpty(), o4 = void 0 !== s6;
  let u = `Function ${e7}() called with invalid data`;
  n3 && (u += " (via `toFirestore()`)"), u += ". ";
  let c4 = "";
  return (i4 || o4) && (c4 += " (found", i4 && (c4 += ` in field ${r6}`), o4 && (c4 += ` in document ${s6}`), c4 += ")"), new U2(P4, u + t3 + c4);
}
function lr(t3, e7) {
  return t3.some((t4) => t4.isEqual(e7));
}
function mr(t3, e7) {
  return t3 = getModularInstance(t3), e7 = getModularInstance(e7), t3 instanceof fr && e7 instanceof fr ? t3._firestore === e7._firestore && t3._key.isEqual(e7._key) && (null === t3._document ? null === e7._document : t3._document.isEqual(e7._document)) && t3._converter === e7._converter : t3 instanceof wr && e7 instanceof wr && (Sn(t3.query, e7.query) && vt2(t3.docs, e7.docs, mr));
}
function pr(t3, e7) {
  return "string" == typeof e7 ? ar(t3, e7) : e7 instanceof On ? e7._internalPath : e7._delegate._internalPath;
}
function _r2(t3, e7, ...n3) {
  let r6 = [];
  e7 instanceof yr && r6.push(e7), r6 = r6.concat(n3), function(t4) {
    const e8 = t4.filter((t5) => t5 instanceof Er).length, n4 = t4.filter((t5) => t5 instanceof vr).length;
    if (e8 > 1 || e8 > 0 && n4 > 0)
      throw new U2(P4, "InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.");
  }(r6);
  for (const e8 of r6)
    t3 = e8._apply(t3);
  return t3;
}
function br(t3, e7, n3) {
  const r6 = e7, s6 = pr("where", t3);
  return vr._create(s6, r6, n3);
}
function Ir(...t3) {
  return t3.forEach((t4) => Ur("or", t4)), Er._create("or", t3);
}
function Tr(...t3) {
  return t3.forEach((t4) => Ur("and", t4)), Er._create("and", t3);
}
function Rr(t3, e7 = "asc") {
  const n3 = e7, r6 = pr("orderBy", t3);
  return Ar._create(r6, n3);
}
function Vr(t3) {
  return at2("limit", t3), Pr._create("limit", t3, "F");
}
function $r(t3) {
  return at2("limitToLast", t3), Pr._create("limitToLast", t3, "L");
}
function Dr(...t3) {
  return Nr._create(
    "startAt",
    t3,
    true
  );
}
function Fr(...t3) {
  return Nr._create(
    "startAfter",
    t3,
    false
  );
}
function Sr(...t3) {
  return xr._create(
    "endBefore",
    t3,
    false
  );
}
function qr(...t3) {
  return xr._create(
    "endAt",
    t3,
    true
  );
}
function Or(t3, e7, n3, r6) {
  if (n3[0] = getModularInstance(n3[0]), n3[0] instanceof fr)
    return function(t4, e8, n4, r7, s6) {
      if (!r7)
        throw new U2($3, `Can't use a DocumentSnapshot that doesn't exist for ${n4}().`);
      const i4 = [];
      for (const n5 of be2(t4))
        if (n5.field.isKeyField())
          i4.push(Ct2(e8, r7.key));
        else {
          const t5 = r7.data.field(n5.field);
          if ($t2(t5))
            throw new U2(P4, 'Invalid query. You are trying to start or end a query using a document for which the field "' + n5.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');
          if (null === t5) {
            const t6 = n5.field.canonicalString();
            throw new U2(P4, `Invalid query. You are trying to start or end a query using a document for which the field '${t6}' (used as the orderBy) does not exist.`);
          }
          i4.push(t5);
        }
      return new Qt(i4, s6);
    }(t3._query, t3.firestore._databaseId, e7, n3[0]._document, r6);
  {
    const s6 = Wn(t3.firestore);
    return function(t4, e8, n4, r7, s7, i4) {
      const o4 = t4.explicitOrderBy;
      if (s7.length > o4.length)
        throw new U2(P4, `Too many arguments provided to ${r7}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);
      const u = [];
      for (let i5 = 0; i5 < s7.length; i5++) {
        const c4 = s7[i5];
        if (o4[i5].field.isKeyField()) {
          if ("string" != typeof c4)
            throw new U2(P4, `Invalid query. Expected a string for document ID in ${r7}(), but got a ${typeof c4}`);
          if (!ve2(t4) && -1 !== c4.indexOf("/"))
            throw new U2(P4, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r7}() must be a plain document ID, but '${c4}' contains a slash.`);
          const n5 = t4.path.child(tt2.fromString(c4));
          if (!rt2.isDocumentKey(n5))
            throw new U2(P4, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r7}() must result in a valid document path, but '${n5}' is not because it contains an odd number of segments.`);
          const s8 = new rt2(n5);
          u.push(Ct2(e8, s8));
        } else {
          const t5 = nr(n4, r7, c4);
          u.push(t5);
        }
      }
      return new Qt(u, i4);
    }(t3._query, t3.firestore._databaseId, s6, e7, n3, r6);
  }
}
function kr(t3, e7, n3) {
  if ("string" == typeof (n3 = getModularInstance(n3))) {
    if ("" === n3)
      throw new U2(P4, "Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.");
    if (!ve2(e7) && -1 !== n3.indexOf("/"))
      throw new U2(P4, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n3}' contains a '/' character.`);
    const r6 = e7.path.child(tt2.fromString(n3));
    if (!rt2.isDocumentKey(r6))
      throw new U2(P4, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r6}' is not because it has an odd number of segments (${r6.length}).`);
    return Ct2(t3, new rt2(r6));
  }
  if (n3 instanceof Pn)
    return Ct2(t3, n3._key);
  throw new U2(P4, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut2(n3)}.`);
}
function Cr(t3, e7) {
  if (!Array.isArray(t3) || 0 === t3.length)
    throw new U2(P4, `Invalid Query. A non-empty array is required for '${e7.toString()}' filters.`);
  if (t3.length > 10)
    throw new U2(P4, `Invalid Query. '${e7.toString()}' filters support a maximum of 10 elements in the value array.`);
}
function Lr(t3, e7) {
  if (e7.isInequality()) {
    const n4 = _e3(t3), r6 = e7.field;
    if (null !== n4 && !n4.isEqual(r6))
      throw new U2(P4, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n4.toString()}' and '${r6.toString()}'`);
    const s6 = ge2(t3);
    null !== s6 && Mr(t3, r6, s6);
  }
  const n3 = function(t4, e8) {
    for (const n4 of t4)
      for (const t5 of n4.getFlattenedFilters())
        if (e8.indexOf(t5.op) >= 0)
          return t5.op;
    return null;
  }(t3.filters, function(t4) {
    switch (t4) {
      case "!=":
        return ["!=", "not-in"];
      case "array-contains":
        return ["array-contains", "array-contains-any", "not-in"];
      case "in":
        return ["array-contains-any", "in", "not-in"];
      case "array-contains-any":
        return ["array-contains", "array-contains-any", "in", "not-in"];
      case "not-in":
        return ["array-contains", "array-contains-any", "in", "not-in", "!="];
      default:
        return [];
    }
  }(e7.op));
  if (null !== n3)
    throw n3 === e7.op ? new U2(P4, `Invalid query. You cannot use more than one '${e7.op.toString()}' filter.`) : new U2(P4, `Invalid query. You cannot use '${e7.op.toString()}' filters with '${n3.toString()}' filters.`);
}
function Mr(t3, e7, n3) {
  if (!n3.isEqual(e7))
    throw new U2(P4, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e7.toString()}' and so you must also use '${e7.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n3.toString()}' instead.`);
}
function Ur(t3, e7) {
  if (!(e7 instanceof vr || e7 instanceof Er))
    throw new U2(P4, `Function ${t3}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);
}
function jr(t3, e7, n3) {
  let r6;
  return r6 = t3 ? n3 && (n3.merge || n3.mergeFields) ? t3.toFirestore(e7, n3) : t3.toFirestore(e7) : e7, r6;
}
function Qr(t3) {
  const e7 = yn((t3 = ct2(t3, Pn)).firestore), n3 = new Br(t3.firestore);
  return dn(e7, [t3._key]).then((e8) => {
    E3(1 === e8.length);
    const r6 = e8[0];
    return new fr(t3.firestore, n3, t3._key, r6.isFoundDocument() ? r6 : null, t3.converter);
  });
}
function zr(t3) {
  !function(t4) {
    if ("L" === t4.limitType && 0 === t4.explicitOrderBy.length)
      throw new U2(k4, "limitToLast() queries require specifying at least one orderBy() clause");
  }((t3 = ct2(t3, Vn))._query);
  const e7 = yn(t3.firestore), n3 = new Br(t3.firestore);
  return wn(e7, t3._query).then((e8) => {
    const r6 = e8.map((e9) => new dr(t3.firestore, n3, e9.key, e9, t3.converter));
    return "L" === t3._query.limitType && r6.reverse(), new wr(t3, r6);
  });
}
function Wr(t3, e7, n3) {
  const r6 = jr((t3 = ct2(t3, Pn)).converter, e7, n3), s6 = Gn(Wn(t3.firestore), "setDoc", t3._key, r6, null !== t3.converter, n3);
  return fn(yn(t3.firestore), [s6.toMutation(t3._key, Fe2.none())]);
}
function Gr(t3, e7, n3, ...r6) {
  const s6 = Wn((t3 = ct2(t3, Pn)).firestore);
  let i4;
  i4 = "string" == typeof (e7 = getModularInstance(e7)) || e7 instanceof On ? er(s6, "updateDoc", t3._key, e7, n3, r6) : tr(s6, "updateDoc", t3._key, e7);
  return fn(yn(t3.firestore), [i4.toMutation(t3._key, Fe2.exists(true))]);
}
function Kr(t3) {
  return fn(yn((t3 = ct2(t3, Pn)).firestore), [new Oe2(t3._key, Fe2.none())]);
}
function Yr(t3, e7) {
  const n3 = Fn(t3 = ct2(t3, $n)), r6 = jr(t3.converter, e7), s6 = Gn(Wn(t3.firestore), "addDoc", n3._key, r6, null !== n3.converter, {});
  return fn(yn(t3.firestore), [s6.toMutation(n3._key, Fe2.exists(false))]).then(() => n3);
}
function Hr(t3) {
  const e7 = ct2(t3.firestore, _n2), n3 = yn(e7), r6 = new Br(e7);
  return new Rn(t3, n3, r6).run();
}
function Jr(t3, e7) {
  return Sn(t3.query, e7.query) && deepEqual(t3.data(), e7.data());
}
function Xr() {
  return new Kn("deleteField");
}
function Zr() {
  return new Hn("serverTimestamp");
}
function ts(...t3) {
  return new Jn("arrayUnion", t3);
}
function es(...t3) {
  return new Xn("arrayRemove", t3);
}
function ns(t3) {
  return new Zn("increment", t3);
}
function ss(t3, e7) {
  if ((t3 = getModularInstance(t3)).firestore !== e7)
    throw new U2(P4, "Provided document reference is from a different Firestore instance.");
  return t3;
}
function is(t3) {
  const e7 = yn(t3 = ct2(t3, _n2));
  return new rs(t3, (t4) => fn(e7, t4));
}
function as() {
  return "undefined" != typeof document ? document : null;
}
function ds(t3, e7, n3) {
  const r6 = yn(t3 = ct2(t3, _n2)), s6 = Object.assign(Object.assign({}, us), n3);
  !function(t4) {
    if (t4.maxAttempts < 1)
      throw new U2(P4, "Max attempts must be at least 1");
  }(s6);
  const i4 = new j2();
  return new cs(new ls(), r6, s6, (n4) => e7(new fs(t3, n4)), i4).run(), i4.promise;
}
var d4, w2, m3, T3, A5, R2, P4, V3, $3, N, D2, F3, x3, S4, q4, O2, k4, C4, L3, M2, U2, j2, B3, Q2, z4, W2, G3, K2, Y3, H2, J2, X2, Z2, tt2, et2, nt2, rt2, ft2, dt2, wt2, pt2, gt2, It2, Tt2, Vt2, Ft2, Qt, Wt, Gt2, Kt, Ht2, Jt, Xt, te2, ee2, ne2, re2, se2, oe2, ue2, ce, ae2, he2, le2, fe2, de2, we2, me2, ye2, Re2, Pe2, Ve2, $e2, Ne2, De2, Fe2, xe2, Se2, qe2, Oe2, ke2, Ce2, Le2, Me2, Ue2, hn, ln, pn, gn, _n2, Tn, An, Rn, Pn, Vn, $n, qn, On, Cn, Ln, Mn, Un, jn, Qn, zn, Kn, Hn, Jn, Xn, Zn, cr, fr, dr, wr, yr, gr, vr, Er, Ar, Pr, Nr, xr, Br, rs, os, us, cs, hs, ls, fs;
var init_index_browser_esm2017 = __esm({
  "node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"() {
    init_index_esm20174();
    init_index_esm20172();
    init_index_esm20173();
    init_index_esm2017();
    d4 = class {
      constructor(t3) {
        this.uid = t3;
      }
      isAuthenticated() {
        return null != this.uid;
      }
      toKey() {
        return this.isAuthenticated() ? "uid:" + this.uid : "anonymous-user";
      }
      isEqual(t3) {
        return t3.uid === this.uid;
      }
    };
    d4.UNAUTHENTICATED = new d4(null), d4.GOOGLE_CREDENTIALS = new d4("google-credentials-uid"), d4.FIRST_PARTY = new d4("first-party-uid"), d4.MOCK_USER = new d4("mock-user");
    w2 = "9.15.0";
    m3 = new Logger("@firebase/firestore");
    T3 = "ok";
    A5 = "cancelled";
    R2 = "unknown";
    P4 = "invalid-argument";
    V3 = "deadline-exceeded";
    $3 = "not-found";
    N = "already-exists";
    D2 = "permission-denied";
    F3 = "unauthenticated";
    x3 = "resource-exhausted";
    S4 = "failed-precondition";
    q4 = "aborted";
    O2 = "out-of-range";
    k4 = "unimplemented";
    C4 = "internal";
    L3 = "unavailable";
    M2 = "data-loss";
    U2 = class extends FirebaseError {
      constructor(t3, e7) {
        super(t3, e7), this.code = t3, this.message = e7, this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;
      }
    };
    j2 = class {
      constructor() {
        this.promise = new Promise((t3, e7) => {
          this.resolve = t3, this.reject = e7;
        });
      }
    };
    B3 = class {
      constructor(t3, e7) {
        this.user = e7, this.type = "OAuth", this.headers = /* @__PURE__ */ new Map(), this.headers.set("Authorization", `Bearer ${t3}`);
      }
    };
    Q2 = class {
      getToken() {
        return Promise.resolve(null);
      }
      invalidateToken() {
      }
      start(t3, e7) {
        t3.enqueueRetryable(() => e7(d4.UNAUTHENTICATED));
      }
      shutdown() {
      }
    };
    z4 = class {
      constructor(t3) {
        this.token = t3, this.changeListener = null;
      }
      getToken() {
        return Promise.resolve(this.token);
      }
      invalidateToken() {
      }
      start(t3, e7) {
        this.changeListener = e7, t3.enqueueRetryable(() => e7(this.token.user));
      }
      shutdown() {
        this.changeListener = null;
      }
    };
    W2 = class {
      constructor(t3) {
        this.auth = null, t3.onInit((t4) => {
          this.auth = t4;
        });
      }
      getToken() {
        return this.auth ? this.auth.getToken().then((t3) => t3 ? (E3("string" == typeof t3.accessToken), new B3(t3.accessToken, new d4(this.auth.getUid()))) : null) : Promise.resolve(null);
      }
      invalidateToken() {
      }
      start(t3, e7) {
      }
      shutdown() {
      }
    };
    G3 = class {
      constructor(t3, e7, n3, r6) {
        this.t = t3, this.i = e7, this.o = n3, this.u = r6, this.type = "FirstParty", this.user = d4.FIRST_PARTY, this.h = /* @__PURE__ */ new Map();
      }
      l() {
        return this.u ? this.u() : (E3(!("object" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), this.t.auth.getAuthHeaderValueForFirstParty([]));
      }
      get headers() {
        this.h.set("X-Goog-AuthUser", this.i);
        const t3 = this.l();
        return t3 && this.h.set("Authorization", t3), this.o && this.h.set("X-Goog-Iam-Authorization-Token", this.o), this.h;
      }
    };
    K2 = class {
      constructor(t3, e7, n3, r6) {
        this.t = t3, this.i = e7, this.o = n3, this.u = r6;
      }
      getToken() {
        return Promise.resolve(new G3(this.t, this.i, this.o, this.u));
      }
      start(t3, e7) {
        t3.enqueueRetryable(() => e7(d4.FIRST_PARTY));
      }
      shutdown() {
      }
      invalidateToken() {
      }
    };
    Y3 = class {
      constructor(t3) {
        this.value = t3, this.type = "AppCheck", this.headers = /* @__PURE__ */ new Map(), t3 && t3.length > 0 && this.headers.set("x-firebase-appcheck", this.value);
      }
    };
    H2 = class {
      constructor(t3) {
        this.m = t3, this.appCheck = null, t3.onInit((t4) => {
          this.appCheck = t4;
        });
      }
      getToken() {
        return this.appCheck ? this.appCheck.getToken().then((t3) => t3 ? (E3("string" == typeof t3.token), new Y3(t3.token)) : null) : Promise.resolve(null);
      }
      invalidateToken() {
      }
      start(t3, e7) {
      }
      shutdown() {
      }
    };
    J2 = class {
      constructor(t3, e7, n3, r6, s6, i4, o4, u) {
        this.databaseId = t3, this.appId = e7, this.persistenceKey = n3, this.host = r6, this.ssl = s6, this.forceLongPolling = i4, this.autoDetectLongPolling = o4, this.useFetchStreams = u;
      }
    };
    X2 = class {
      constructor(t3, e7) {
        this.projectId = t3, this.database = e7 || "(default)";
      }
      static empty() {
        return new X2("", "");
      }
      get isDefaultDatabase() {
        return "(default)" === this.database;
      }
      isEqual(t3) {
        return t3 instanceof X2 && t3.projectId === this.projectId && t3.database === this.database;
      }
    };
    Z2 = class {
      constructor(t3, e7, n3) {
        void 0 === e7 ? e7 = 0 : e7 > t3.length && b3(), void 0 === n3 ? n3 = t3.length - e7 : n3 > t3.length - e7 && b3(), this.segments = t3, this.offset = e7, this.len = n3;
      }
      get length() {
        return this.len;
      }
      isEqual(t3) {
        return 0 === Z2.comparator(this, t3);
      }
      child(t3) {
        const e7 = this.segments.slice(this.offset, this.limit());
        return t3 instanceof Z2 ? t3.forEach((t4) => {
          e7.push(t4);
        }) : e7.push(t3), this.construct(e7);
      }
      limit() {
        return this.offset + this.length;
      }
      popFirst(t3) {
        return t3 = void 0 === t3 ? 1 : t3, this.construct(this.segments, this.offset + t3, this.length - t3);
      }
      popLast() {
        return this.construct(this.segments, this.offset, this.length - 1);
      }
      firstSegment() {
        return this.segments[this.offset];
      }
      lastSegment() {
        return this.get(this.length - 1);
      }
      get(t3) {
        return this.segments[this.offset + t3];
      }
      isEmpty() {
        return 0 === this.length;
      }
      isPrefixOf(t3) {
        if (t3.length < this.length)
          return false;
        for (let e7 = 0; e7 < this.length; e7++)
          if (this.get(e7) !== t3.get(e7))
            return false;
        return true;
      }
      isImmediateParentOf(t3) {
        if (this.length + 1 !== t3.length)
          return false;
        for (let e7 = 0; e7 < this.length; e7++)
          if (this.get(e7) !== t3.get(e7))
            return false;
        return true;
      }
      forEach(t3) {
        for (let e7 = this.offset, n3 = this.limit(); e7 < n3; e7++)
          t3(this.segments[e7]);
      }
      toArray() {
        return this.segments.slice(this.offset, this.limit());
      }
      static comparator(t3, e7) {
        const n3 = Math.min(t3.length, e7.length);
        for (let r6 = 0; r6 < n3; r6++) {
          const n4 = t3.get(r6), s6 = e7.get(r6);
          if (n4 < s6)
            return -1;
          if (n4 > s6)
            return 1;
        }
        return t3.length < e7.length ? -1 : t3.length > e7.length ? 1 : 0;
      }
    };
    tt2 = class extends Z2 {
      construct(t3, e7, n3) {
        return new tt2(t3, e7, n3);
      }
      canonicalString() {
        return this.toArray().join("/");
      }
      toString() {
        return this.canonicalString();
      }
      static fromString(...t3) {
        const e7 = [];
        for (const n3 of t3) {
          if (n3.indexOf("//") >= 0)
            throw new U2(P4, `Invalid segment (${n3}). Paths must not contain // in them.`);
          e7.push(...n3.split("/").filter((t4) => t4.length > 0));
        }
        return new tt2(e7);
      }
      static emptyPath() {
        return new tt2([]);
      }
    };
    et2 = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
    nt2 = class extends Z2 {
      construct(t3, e7, n3) {
        return new nt2(t3, e7, n3);
      }
      static isValidIdentifier(t3) {
        return et2.test(t3);
      }
      canonicalString() {
        return this.toArray().map((t3) => (t3 = t3.replace(/\\/g, "\\\\").replace(/`/g, "\\`"), nt2.isValidIdentifier(t3) || (t3 = "`" + t3 + "`"), t3)).join(".");
      }
      toString() {
        return this.canonicalString();
      }
      isKeyField() {
        return 1 === this.length && "__name__" === this.get(0);
      }
      static keyField() {
        return new nt2(["__name__"]);
      }
      static fromServerFormat(t3) {
        const e7 = [];
        let n3 = "", r6 = 0;
        const s6 = () => {
          if (0 === n3.length)
            throw new U2(P4, `Invalid field path (${t3}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);
          e7.push(n3), n3 = "";
        };
        let i4 = false;
        for (; r6 < t3.length; ) {
          const e8 = t3[r6];
          if ("\\" === e8) {
            if (r6 + 1 === t3.length)
              throw new U2(P4, "Path has trailing escape character: " + t3);
            const e9 = t3[r6 + 1];
            if ("\\" !== e9 && "." !== e9 && "`" !== e9)
              throw new U2(P4, "Path has invalid escape sequence: " + t3);
            n3 += e9, r6 += 2;
          } else
            "`" === e8 ? (i4 = !i4, r6++) : "." !== e8 || i4 ? (n3 += e8, r6++) : (s6(), r6++);
        }
        if (s6(), i4)
          throw new U2(P4, "Unterminated ` in path: " + t3);
        return new nt2(e7);
      }
      static emptyPath() {
        return new nt2([]);
      }
    };
    rt2 = class {
      constructor(t3) {
        this.path = t3;
      }
      static fromPath(t3) {
        return new rt2(tt2.fromString(t3));
      }
      static fromName(t3) {
        return new rt2(tt2.fromString(t3).popFirst(5));
      }
      static empty() {
        return new rt2(tt2.emptyPath());
      }
      get collectionGroup() {
        return this.path.popLast().lastSegment();
      }
      hasCollectionId(t3) {
        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t3;
      }
      getCollectionGroup() {
        return this.path.get(this.path.length - 2);
      }
      getCollectionPath() {
        return this.path.popLast();
      }
      isEqual(t3) {
        return null !== t3 && 0 === tt2.comparator(this.path, t3.path);
      }
      toString() {
        return this.path.toString();
      }
      static comparator(t3, e7) {
        return tt2.comparator(t3.path, e7.path);
      }
      static isDocumentKey(t3) {
        return t3.length % 2 == 0;
      }
      static fromSegments(t3) {
        return new rt2(new tt2(t3.slice()));
      }
    };
    ft2 = {
      BatchGetDocuments: "batchGet",
      Commit: "commit",
      RunQuery: "runQuery",
      RunAggregationQuery: "runAggregationQuery"
    };
    (wt2 = dt2 || (dt2 = {}))[wt2.OK = 0] = "OK", wt2[wt2.CANCELLED = 1] = "CANCELLED", wt2[wt2.UNKNOWN = 2] = "UNKNOWN", wt2[wt2.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", wt2[wt2.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", wt2[wt2.NOT_FOUND = 5] = "NOT_FOUND", wt2[wt2.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", wt2[wt2.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", wt2[wt2.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", wt2[wt2.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", wt2[wt2.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", wt2[wt2.ABORTED = 10] = "ABORTED", wt2[wt2.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", wt2[wt2.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", wt2[wt2.INTERNAL = 13] = "INTERNAL", wt2[wt2.UNAVAILABLE = 14] = "UNAVAILABLE", wt2[wt2.DATA_LOSS = 15] = "DATA_LOSS";
    pt2 = class extends class {
      constructor(t3) {
        this.databaseInfo = t3, this.databaseId = t3.databaseId;
        const e7 = t3.ssl ? "https" : "http";
        this.p = e7 + "://" + t3.host, this.g = "projects/" + this.databaseId.projectId + "/databases/" + this.databaseId.database + "/documents";
      }
      get v() {
        return false;
      }
      I(t3, e7, n3, r6, s6) {
        const i4 = this.T(t3, e7);
        y4("RestConnection", "Sending: ", i4, n3);
        const o4 = {};
        return this.A(o4, r6, s6), this.R(t3, i4, o4, n3).then((t4) => (y4("RestConnection", "Received: ", t4), t4), (e8) => {
          throw _5("RestConnection", `${t3} failed with error: `, e8, "url: ", i4, "request:", n3), e8;
        });
      }
      P(t3, e7, n3, r6, s6, i4) {
        return this.I(t3, e7, n3, r6, s6);
      }
      A(t3, e7, n3) {
        t3["X-Goog-Api-Client"] = "gl-js/ fire/" + w2, t3["Content-Type"] = "text/plain", this.databaseInfo.appId && (t3["X-Firebase-GMPID"] = this.databaseInfo.appId), e7 && e7.headers.forEach((e8, n4) => t3[n4] = e8), n3 && n3.headers.forEach((e8, n4) => t3[n4] = e8);
      }
      T(t3, e7) {
        const n3 = ft2[t3];
        return `${this.p}/v1/${e7}:${n3}`;
      }
    } {
      constructor(t3, e7) {
        super(t3), this.V = e7;
      }
      $(t3, e7) {
        throw new Error("Not supported by FetchConnection");
      }
      async R(t3, e7, n3, r6) {
        var s6;
        const i4 = JSON.stringify(r6);
        let o4;
        try {
          o4 = await this.V(e7, {
            method: "POST",
            headers: n3,
            body: i4
          });
        } catch (t4) {
          const e8 = t4;
          throw new U2(mt2(e8.status), "Request failed with error: " + e8.statusText);
        }
        if (!o4.ok) {
          let t4 = await o4.json();
          Array.isArray(t4) && (t4 = t4[0]);
          const e8 = null === (s6 = null == t4 ? void 0 : t4.error) || void 0 === s6 ? void 0 : s6.message;
          throw new U2(mt2(o4.status), `Request failed with error: ${null != e8 ? e8 : o4.statusText}`);
        }
        return o4.json();
      }
    };
    gt2 = class {
      static N() {
        const t3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", e7 = Math.floor(256 / t3.length) * t3.length;
        let n3 = "";
        for (; n3.length < 20; ) {
          const r6 = yt2(40);
          for (let s6 = 0; s6 < r6.length; ++s6)
            n3.length < 20 && r6[s6] < e7 && (n3 += t3.charAt(r6[s6] % t3.length));
        }
        return n3;
      }
    };
    It2 = class {
      constructor(t3) {
        this.binaryString = t3;
      }
      static fromBase64String(t3) {
        const e7 = atob(t3);
        return new It2(e7);
      }
      static fromUint8Array(t3) {
        const e7 = function(t4) {
          let e8 = "";
          for (let n3 = 0; n3 < t4.length; ++n3)
            e8 += String.fromCharCode(t4[n3]);
          return e8;
        }(t3);
        return new It2(e7);
      }
      [Symbol.iterator]() {
        let t3 = 0;
        return {
          next: () => t3 < this.binaryString.length ? {
            value: this.binaryString.charCodeAt(t3++),
            done: false
          } : {
            value: void 0,
            done: true
          }
        };
      }
      toBase64() {
        return t3 = this.binaryString, btoa(t3);
        var t3;
      }
      toUint8Array() {
        return function(t3) {
          const e7 = new Uint8Array(t3.length);
          for (let n3 = 0; n3 < t3.length; n3++)
            e7[n3] = t3.charCodeAt(n3);
          return e7;
        }(this.binaryString);
      }
      approximateByteSize() {
        return 2 * this.binaryString.length;
      }
      compareTo(t3) {
        return _t3(this.binaryString, t3.binaryString);
      }
      isEqual(t3) {
        return this.binaryString === t3.binaryString;
      }
    };
    It2.EMPTY_BYTE_STRING = new It2("");
    Tt2 = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
    Vt2 = class {
      constructor(t3, e7) {
        if (this.seconds = t3, this.nanoseconds = e7, e7 < 0)
          throw new U2(P4, "Timestamp nanoseconds out of range: " + e7);
        if (e7 >= 1e9)
          throw new U2(P4, "Timestamp nanoseconds out of range: " + e7);
        if (t3 < -62135596800)
          throw new U2(P4, "Timestamp seconds out of range: " + t3);
        if (t3 >= 253402300800)
          throw new U2(P4, "Timestamp seconds out of range: " + t3);
      }
      static now() {
        return Vt2.fromMillis(Date.now());
      }
      static fromDate(t3) {
        return Vt2.fromMillis(t3.getTime());
      }
      static fromMillis(t3) {
        const e7 = Math.floor(t3 / 1e3), n3 = Math.floor(1e6 * (t3 - 1e3 * e7));
        return new Vt2(e7, n3);
      }
      toDate() {
        return new Date(this.toMillis());
      }
      toMillis() {
        return 1e3 * this.seconds + this.nanoseconds / 1e6;
      }
      _compareTo(t3) {
        return this.seconds === t3.seconds ? _t3(this.nanoseconds, t3.nanoseconds) : _t3(this.seconds, t3.seconds);
      }
      isEqual(t3) {
        return t3.seconds === this.seconds && t3.nanoseconds === this.nanoseconds;
      }
      toString() {
        return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
      }
      toJSON() {
        return {
          seconds: this.seconds,
          nanoseconds: this.nanoseconds
        };
      }
      valueOf() {
        const t3 = this.seconds - -62135596800;
        return String(t3).padStart(12, "0") + "." + String(this.nanoseconds).padStart(9, "0");
      }
    };
    Ft2 = {
      fields: {
        __type__: {
          stringValue: "__max__"
        }
      }
    };
    Qt = class {
      constructor(t3, e7) {
        this.position = t3, this.inclusive = e7;
      }
    };
    Wt = class {
    };
    Gt2 = class extends Wt {
      constructor(t3, e7, n3) {
        super(), this.field = t3, this.op = e7, this.value = n3;
      }
      static create(t3, e7, n3) {
        return t3.isKeyField() ? "in" === e7 || "not-in" === e7 ? this.createKeyFieldInFilter(t3, e7, n3) : new Ht2(t3, e7, n3) : "array-contains" === e7 ? new te2(t3, n3) : "in" === e7 ? new ee2(t3, n3) : "not-in" === e7 ? new ne2(t3, n3) : "array-contains-any" === e7 ? new re2(t3, n3) : new Gt2(t3, e7, n3);
      }
      static createKeyFieldInFilter(t3, e7, n3) {
        return "in" === e7 ? new Jt(t3, n3) : new Xt(t3, n3);
      }
      matches(t3) {
        const e7 = t3.data.field(this.field);
        return "!=" === this.op ? null !== e7 && this.matchesComparison(Ot2(e7, this.value)) : null !== e7 && xt2(this.value) === xt2(e7) && this.matchesComparison(Ot2(e7, this.value));
      }
      matchesComparison(t3) {
        switch (this.op) {
          case "<":
            return t3 < 0;
          case "<=":
            return t3 <= 0;
          case "==":
            return 0 === t3;
          case "!=":
            return 0 !== t3;
          case ">":
            return t3 > 0;
          case ">=":
            return t3 >= 0;
          default:
            return b3();
        }
      }
      isInequality() {
        return ["<", "<=", ">", ">=", "!=", "not-in"].indexOf(this.op) >= 0;
      }
      getFlattenedFilters() {
        return [this];
      }
      getFilters() {
        return [this];
      }
      getFirstInequalityField() {
        return this.isInequality() ? this.field : null;
      }
    };
    Kt = class extends Wt {
      constructor(t3, e7) {
        super(), this.filters = t3, this.op = e7, this.D = null;
      }
      static create(t3, e7) {
        return new Kt(t3, e7);
      }
      matches(t3) {
        return "and" === this.op ? void 0 === this.filters.find((e7) => !e7.matches(t3)) : void 0 !== this.filters.find((e7) => e7.matches(t3));
      }
      getFlattenedFilters() {
        return null !== this.D || (this.D = this.filters.reduce((t3, e7) => t3.concat(e7.getFlattenedFilters()), [])), this.D;
      }
      getFilters() {
        return Object.assign([], this.filters);
      }
      getFirstInequalityField() {
        const t3 = this.F((t4) => t4.isInequality());
        return null !== t3 ? t3.field : null;
      }
      F(t3) {
        for (const e7 of this.getFlattenedFilters())
          if (t3(e7))
            return e7;
        return null;
      }
    };
    Ht2 = class extends Gt2 {
      constructor(t3, e7, n3) {
        super(t3, e7, n3), this.key = rt2.fromName(n3.referenceValue);
      }
      matches(t3) {
        const e7 = rt2.comparator(t3.key, this.key);
        return this.matchesComparison(e7);
      }
    };
    Jt = class extends Gt2 {
      constructor(t3, e7) {
        super(t3, "in", e7), this.keys = Zt("in", e7);
      }
      matches(t3) {
        return this.keys.some((e7) => e7.isEqual(t3.key));
      }
    };
    Xt = class extends Gt2 {
      constructor(t3, e7) {
        super(t3, "not-in", e7), this.keys = Zt("not-in", e7);
      }
      matches(t3) {
        return !this.keys.some((e7) => e7.isEqual(t3.key));
      }
    };
    te2 = class extends Gt2 {
      constructor(t3, e7) {
        super(t3, "array-contains", e7);
      }
      matches(t3) {
        const e7 = t3.data.field(this.field);
        return Lt(e7) && qt2(e7.arrayValue, this.value);
      }
    };
    ee2 = class extends Gt2 {
      constructor(t3, e7) {
        super(t3, "in", e7);
      }
      matches(t3) {
        const e7 = t3.data.field(this.field);
        return null !== e7 && qt2(this.value.arrayValue, e7);
      }
    };
    ne2 = class extends Gt2 {
      constructor(t3, e7) {
        super(t3, "not-in", e7);
      }
      matches(t3) {
        if (qt2(this.value.arrayValue, {
          nullValue: "NULL_VALUE"
        }))
          return false;
        const e7 = t3.data.field(this.field);
        return null !== e7 && !qt2(this.value.arrayValue, e7);
      }
    };
    re2 = class extends Gt2 {
      constructor(t3, e7) {
        super(t3, "array-contains-any", e7);
      }
      matches(t3) {
        const e7 = t3.data.field(this.field);
        return !(!Lt(e7) || !e7.arrayValue.values) && e7.arrayValue.values.some((t4) => qt2(this.value.arrayValue, t4));
      }
    };
    se2 = class {
      constructor(t3, e7 = "asc") {
        this.field = t3, this.dir = e7;
      }
    };
    oe2 = class {
      constructor(t3) {
        this.timestamp = t3;
      }
      static fromTimestamp(t3) {
        return new oe2(t3);
      }
      static min() {
        return new oe2(new Vt2(0, 0));
      }
      static max() {
        return new oe2(new Vt2(253402300799, 999999999));
      }
      compareTo(t3) {
        return this.timestamp._compareTo(t3.timestamp);
      }
      isEqual(t3) {
        return this.timestamp.isEqual(t3.timestamp);
      }
      toMicroseconds() {
        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
      }
      toString() {
        return "SnapshotVersion(" + this.timestamp.toString() + ")";
      }
      toTimestamp() {
        return this.timestamp;
      }
    };
    ue2 = class {
      constructor(t3, e7) {
        this.comparator = t3, this.root = e7 || ae2.EMPTY;
      }
      insert(t3, e7) {
        return new ue2(this.comparator, this.root.insert(t3, e7, this.comparator).copy(null, null, ae2.BLACK, null, null));
      }
      remove(t3) {
        return new ue2(this.comparator, this.root.remove(t3, this.comparator).copy(null, null, ae2.BLACK, null, null));
      }
      get(t3) {
        let e7 = this.root;
        for (; !e7.isEmpty(); ) {
          const n3 = this.comparator(t3, e7.key);
          if (0 === n3)
            return e7.value;
          n3 < 0 ? e7 = e7.left : n3 > 0 && (e7 = e7.right);
        }
        return null;
      }
      indexOf(t3) {
        let e7 = 0, n3 = this.root;
        for (; !n3.isEmpty(); ) {
          const r6 = this.comparator(t3, n3.key);
          if (0 === r6)
            return e7 + n3.left.size;
          r6 < 0 ? n3 = n3.left : (e7 += n3.left.size + 1, n3 = n3.right);
        }
        return -1;
      }
      isEmpty() {
        return this.root.isEmpty();
      }
      get size() {
        return this.root.size;
      }
      minKey() {
        return this.root.minKey();
      }
      maxKey() {
        return this.root.maxKey();
      }
      inorderTraversal(t3) {
        return this.root.inorderTraversal(t3);
      }
      forEach(t3) {
        this.inorderTraversal((e7, n3) => (t3(e7, n3), false));
      }
      toString() {
        const t3 = [];
        return this.inorderTraversal((e7, n3) => (t3.push(`${e7}:${n3}`), false)), `{${t3.join(", ")}}`;
      }
      reverseTraversal(t3) {
        return this.root.reverseTraversal(t3);
      }
      getIterator() {
        return new ce(this.root, null, this.comparator, false);
      }
      getIteratorFrom(t3) {
        return new ce(this.root, t3, this.comparator, false);
      }
      getReverseIterator() {
        return new ce(this.root, null, this.comparator, true);
      }
      getReverseIteratorFrom(t3) {
        return new ce(this.root, t3, this.comparator, true);
      }
    };
    ce = class {
      constructor(t3, e7, n3, r6) {
        this.isReverse = r6, this.nodeStack = [];
        let s6 = 1;
        for (; !t3.isEmpty(); )
          if (s6 = e7 ? n3(t3.key, e7) : 1, e7 && r6 && (s6 *= -1), s6 < 0)
            t3 = this.isReverse ? t3.left : t3.right;
          else {
            if (0 === s6) {
              this.nodeStack.push(t3);
              break;
            }
            this.nodeStack.push(t3), t3 = this.isReverse ? t3.right : t3.left;
          }
      }
      getNext() {
        let t3 = this.nodeStack.pop();
        const e7 = {
          key: t3.key,
          value: t3.value
        };
        if (this.isReverse)
          for (t3 = t3.left; !t3.isEmpty(); )
            this.nodeStack.push(t3), t3 = t3.right;
        else
          for (t3 = t3.right; !t3.isEmpty(); )
            this.nodeStack.push(t3), t3 = t3.left;
        return e7;
      }
      hasNext() {
        return this.nodeStack.length > 0;
      }
      peek() {
        if (0 === this.nodeStack.length)
          return null;
        const t3 = this.nodeStack[this.nodeStack.length - 1];
        return {
          key: t3.key,
          value: t3.value
        };
      }
    };
    ae2 = class {
      constructor(t3, e7, n3, r6, s6) {
        this.key = t3, this.value = e7, this.color = null != n3 ? n3 : ae2.RED, this.left = null != r6 ? r6 : ae2.EMPTY, this.right = null != s6 ? s6 : ae2.EMPTY, this.size = this.left.size + 1 + this.right.size;
      }
      copy(t3, e7, n3, r6, s6) {
        return new ae2(null != t3 ? t3 : this.key, null != e7 ? e7 : this.value, null != n3 ? n3 : this.color, null != r6 ? r6 : this.left, null != s6 ? s6 : this.right);
      }
      isEmpty() {
        return false;
      }
      inorderTraversal(t3) {
        return this.left.inorderTraversal(t3) || t3(this.key, this.value) || this.right.inorderTraversal(t3);
      }
      reverseTraversal(t3) {
        return this.right.reverseTraversal(t3) || t3(this.key, this.value) || this.left.reverseTraversal(t3);
      }
      min() {
        return this.left.isEmpty() ? this : this.left.min();
      }
      minKey() {
        return this.min().key;
      }
      maxKey() {
        return this.right.isEmpty() ? this.key : this.right.maxKey();
      }
      insert(t3, e7, n3) {
        let r6 = this;
        const s6 = n3(t3, r6.key);
        return r6 = s6 < 0 ? r6.copy(null, null, null, r6.left.insert(t3, e7, n3), null) : 0 === s6 ? r6.copy(null, e7, null, null, null) : r6.copy(null, null, null, null, r6.right.insert(t3, e7, n3)), r6.fixUp();
      }
      removeMin() {
        if (this.left.isEmpty())
          return ae2.EMPTY;
        let t3 = this;
        return t3.left.isRed() || t3.left.left.isRed() || (t3 = t3.moveRedLeft()), t3 = t3.copy(null, null, null, t3.left.removeMin(), null), t3.fixUp();
      }
      remove(t3, e7) {
        let n3, r6 = this;
        if (e7(t3, r6.key) < 0)
          r6.left.isEmpty() || r6.left.isRed() || r6.left.left.isRed() || (r6 = r6.moveRedLeft()), r6 = r6.copy(null, null, null, r6.left.remove(t3, e7), null);
        else {
          if (r6.left.isRed() && (r6 = r6.rotateRight()), r6.right.isEmpty() || r6.right.isRed() || r6.right.left.isRed() || (r6 = r6.moveRedRight()), 0 === e7(t3, r6.key)) {
            if (r6.right.isEmpty())
              return ae2.EMPTY;
            n3 = r6.right.min(), r6 = r6.copy(n3.key, n3.value, null, null, r6.right.removeMin());
          }
          r6 = r6.copy(null, null, null, null, r6.right.remove(t3, e7));
        }
        return r6.fixUp();
      }
      isRed() {
        return this.color;
      }
      fixUp() {
        let t3 = this;
        return t3.right.isRed() && !t3.left.isRed() && (t3 = t3.rotateLeft()), t3.left.isRed() && t3.left.left.isRed() && (t3 = t3.rotateRight()), t3.left.isRed() && t3.right.isRed() && (t3 = t3.colorFlip()), t3;
      }
      moveRedLeft() {
        let t3 = this.colorFlip();
        return t3.right.left.isRed() && (t3 = t3.copy(null, null, null, null, t3.right.rotateRight()), t3 = t3.rotateLeft(), t3 = t3.colorFlip()), t3;
      }
      moveRedRight() {
        let t3 = this.colorFlip();
        return t3.left.left.isRed() && (t3 = t3.rotateRight(), t3 = t3.colorFlip()), t3;
      }
      rotateLeft() {
        const t3 = this.copy(null, null, ae2.RED, null, this.right.left);
        return this.right.copy(null, null, this.color, t3, null);
      }
      rotateRight() {
        const t3 = this.copy(null, null, ae2.RED, this.left.right, null);
        return this.left.copy(null, null, this.color, null, t3);
      }
      colorFlip() {
        const t3 = this.left.copy(null, null, !this.left.color, null, null), e7 = this.right.copy(null, null, !this.right.color, null, null);
        return this.copy(null, null, !this.color, t3, e7);
      }
      checkMaxDepth() {
        const t3 = this.check();
        return Math.pow(2, t3) <= this.size + 1;
      }
      check() {
        if (this.isRed() && this.left.isRed())
          throw b3();
        if (this.right.isRed())
          throw b3();
        const t3 = this.left.check();
        if (t3 !== this.right.check())
          throw b3();
        return t3 + (this.isRed() ? 0 : 1);
      }
    };
    ae2.EMPTY = null, ae2.RED = true, ae2.BLACK = false;
    ae2.EMPTY = new class {
      constructor() {
        this.size = 0;
      }
      get key() {
        throw b3();
      }
      get value() {
        throw b3();
      }
      get color() {
        throw b3();
      }
      get left() {
        throw b3();
      }
      get right() {
        throw b3();
      }
      copy(t3, e7, n3, r6, s6) {
        return this;
      }
      insert(t3, e7, n3) {
        return new ae2(t3, e7);
      }
      remove(t3, e7) {
        return this;
      }
      isEmpty() {
        return true;
      }
      inorderTraversal(t3) {
        return false;
      }
      reverseTraversal(t3) {
        return false;
      }
      minKey() {
        return null;
      }
      maxKey() {
        return null;
      }
      isRed() {
        return false;
      }
      checkMaxDepth() {
        return true;
      }
      check() {
        return 0;
      }
    }();
    he2 = class {
      constructor(t3) {
        this.comparator = t3, this.data = new ue2(this.comparator);
      }
      has(t3) {
        return null !== this.data.get(t3);
      }
      first() {
        return this.data.minKey();
      }
      last() {
        return this.data.maxKey();
      }
      get size() {
        return this.data.size;
      }
      indexOf(t3) {
        return this.data.indexOf(t3);
      }
      forEach(t3) {
        this.data.inorderTraversal((e7, n3) => (t3(e7), false));
      }
      forEachInRange(t3, e7) {
        const n3 = this.data.getIteratorFrom(t3[0]);
        for (; n3.hasNext(); ) {
          const r6 = n3.getNext();
          if (this.comparator(r6.key, t3[1]) >= 0)
            return;
          e7(r6.key);
        }
      }
      forEachWhile(t3, e7) {
        let n3;
        for (n3 = void 0 !== e7 ? this.data.getIteratorFrom(e7) : this.data.getIterator(); n3.hasNext(); ) {
          if (!t3(n3.getNext().key))
            return;
        }
      }
      firstAfterOrEqual(t3) {
        const e7 = this.data.getIteratorFrom(t3);
        return e7.hasNext() ? e7.getNext().key : null;
      }
      getIterator() {
        return new le2(this.data.getIterator());
      }
      getIteratorFrom(t3) {
        return new le2(this.data.getIteratorFrom(t3));
      }
      add(t3) {
        return this.copy(this.data.remove(t3).insert(t3, true));
      }
      delete(t3) {
        return this.has(t3) ? this.copy(this.data.remove(t3)) : this;
      }
      isEmpty() {
        return this.data.isEmpty();
      }
      unionWith(t3) {
        let e7 = this;
        return e7.size < t3.size && (e7 = t3, t3 = this), t3.forEach((t4) => {
          e7 = e7.add(t4);
        }), e7;
      }
      isEqual(t3) {
        if (!(t3 instanceof he2))
          return false;
        if (this.size !== t3.size)
          return false;
        const e7 = this.data.getIterator(), n3 = t3.data.getIterator();
        for (; e7.hasNext(); ) {
          const t4 = e7.getNext().key, r6 = n3.getNext().key;
          if (0 !== this.comparator(t4, r6))
            return false;
        }
        return true;
      }
      toArray() {
        const t3 = [];
        return this.forEach((e7) => {
          t3.push(e7);
        }), t3;
      }
      toString() {
        const t3 = [];
        return this.forEach((e7) => t3.push(e7)), "SortedSet(" + t3.toString() + ")";
      }
      copy(t3) {
        const e7 = new he2(this.comparator);
        return e7.data = t3, e7;
      }
    };
    le2 = class {
      constructor(t3) {
        this.iter = t3;
      }
      getNext() {
        return this.iter.getNext().key;
      }
      hasNext() {
        return this.iter.hasNext();
      }
    };
    fe2 = class {
      constructor(t3) {
        this.fields = t3, t3.sort(nt2.comparator);
      }
      static empty() {
        return new fe2([]);
      }
      unionWith(t3) {
        let e7 = new he2(nt2.comparator);
        for (const t4 of this.fields)
          e7 = e7.add(t4);
        for (const n3 of t3)
          e7 = e7.add(n3);
        return new fe2(e7.toArray());
      }
      covers(t3) {
        for (const e7 of this.fields)
          if (e7.isPrefixOf(t3))
            return true;
        return false;
      }
      isEqual(t3) {
        return vt2(this.fields, t3.fields, (t4, e7) => t4.isEqual(e7));
      }
    };
    de2 = class {
      constructor(t3) {
        this.value = t3;
      }
      static empty() {
        return new de2({
          mapValue: {}
        });
      }
      field(t3) {
        if (t3.isEmpty())
          return this.value;
        {
          let e7 = this.value;
          for (let n3 = 0; n3 < t3.length - 1; ++n3)
            if (e7 = (e7.mapValue.fields || {})[t3.get(n3)], !jt2(e7))
              return null;
          return e7 = (e7.mapValue.fields || {})[t3.lastSegment()], e7 || null;
        }
      }
      set(t3, e7) {
        this.getFieldsMap(t3.popLast())[t3.lastSegment()] = Bt2(e7);
      }
      setAll(t3) {
        let e7 = nt2.emptyPath(), n3 = {}, r6 = [];
        t3.forEach((t4, s7) => {
          if (!e7.isImmediateParentOf(s7)) {
            const t5 = this.getFieldsMap(e7);
            this.applyChanges(t5, n3, r6), n3 = {}, r6 = [], e7 = s7.popLast();
          }
          t4 ? n3[s7.lastSegment()] = Bt2(t4) : r6.push(s7.lastSegment());
        });
        const s6 = this.getFieldsMap(e7);
        this.applyChanges(s6, n3, r6);
      }
      delete(t3) {
        const e7 = this.field(t3.popLast());
        jt2(e7) && e7.mapValue.fields && delete e7.mapValue.fields[t3.lastSegment()];
      }
      isEqual(t3) {
        return St2(this.value, t3.value);
      }
      getFieldsMap(t3) {
        let e7 = this.value;
        e7.mapValue.fields || (e7.mapValue = {
          fields: {}
        });
        for (let n3 = 0; n3 < t3.length; ++n3) {
          let r6 = e7.mapValue.fields[t3.get(n3)];
          jt2(r6) && r6.mapValue.fields || (r6 = {
            mapValue: {
              fields: {}
            }
          }, e7.mapValue.fields[t3.get(n3)] = r6), e7 = r6;
        }
        return e7.mapValue.fields;
      }
      applyChanges(t3, e7, n3) {
        Et2(e7, (e8, n4) => t3[e8] = n4);
        for (const e8 of n3)
          delete t3[e8];
      }
      clone() {
        return new de2(Bt2(this.value));
      }
    };
    we2 = class {
      constructor(t3, e7, n3, r6, s6, i4, o4) {
        this.key = t3, this.documentType = e7, this.version = n3, this.readTime = r6, this.createTime = s6, this.data = i4, this.documentState = o4;
      }
      static newInvalidDocument(t3) {
        return new we2(
          t3,
          0,
          oe2.min(),
          oe2.min(),
          oe2.min(),
          de2.empty(),
          0
        );
      }
      static newFoundDocument(t3, e7, n3, r6) {
        return new we2(
          t3,
          1,
          e7,
          oe2.min(),
          n3,
          r6,
          0
        );
      }
      static newNoDocument(t3, e7) {
        return new we2(
          t3,
          2,
          e7,
          oe2.min(),
          oe2.min(),
          de2.empty(),
          0
        );
      }
      static newUnknownDocument(t3, e7) {
        return new we2(
          t3,
          3,
          e7,
          oe2.min(),
          oe2.min(),
          de2.empty(),
          2
        );
      }
      convertToFoundDocument(t3, e7) {
        return !this.createTime.isEqual(oe2.min()) || 2 !== this.documentType && 0 !== this.documentType || (this.createTime = t3), this.version = t3, this.documentType = 1, this.data = e7, this.documentState = 0, this;
      }
      convertToNoDocument(t3) {
        return this.version = t3, this.documentType = 2, this.data = de2.empty(), this.documentState = 0, this;
      }
      convertToUnknownDocument(t3) {
        return this.version = t3, this.documentType = 3, this.data = de2.empty(), this.documentState = 2, this;
      }
      setHasCommittedMutations() {
        return this.documentState = 2, this;
      }
      setHasLocalMutations() {
        return this.documentState = 1, this.version = oe2.min(), this;
      }
      setReadTime(t3) {
        return this.readTime = t3, this;
      }
      get hasLocalMutations() {
        return 1 === this.documentState;
      }
      get hasCommittedMutations() {
        return 2 === this.documentState;
      }
      get hasPendingWrites() {
        return this.hasLocalMutations || this.hasCommittedMutations;
      }
      isValidDocument() {
        return 0 !== this.documentType;
      }
      isFoundDocument() {
        return 1 === this.documentType;
      }
      isNoDocument() {
        return 2 === this.documentType;
      }
      isUnknownDocument() {
        return 3 === this.documentType;
      }
      isEqual(t3) {
        return t3 instanceof we2 && this.key.isEqual(t3.key) && this.version.isEqual(t3.version) && this.documentType === t3.documentType && this.documentState === t3.documentState && this.data.isEqual(t3.data);
      }
      mutableCopy() {
        return new we2(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);
      }
      toString() {
        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;
      }
    };
    me2 = class {
      constructor(t3, e7 = null, n3 = [], r6 = [], s6 = null, i4 = null, o4 = null) {
        this.path = t3, this.collectionGroup = e7, this.orderBy = n3, this.filters = r6, this.limit = s6, this.startAt = i4, this.endAt = o4, this.S = null;
      }
    };
    ye2 = class {
      constructor(t3, e7 = null, n3 = [], r6 = [], s6 = null, i4 = "F", o4 = null, u = null) {
        this.path = t3, this.collectionGroup = e7, this.explicitOrderBy = n3, this.filters = r6, this.limit = s6, this.limitType = i4, this.startAt = o4, this.endAt = u, this.q = null, this.O = null, this.startAt, this.endAt;
      }
    };
    Re2 = class {
      constructor() {
        this._ = void 0;
      }
    };
    Pe2 = class extends Re2 {
    };
    Ve2 = class extends Re2 {
      constructor(t3) {
        super(), this.elements = t3;
      }
    };
    $e2 = class extends Re2 {
      constructor(t3) {
        super(), this.elements = t3;
      }
    };
    Ne2 = class extends Re2 {
      constructor(t3, e7) {
        super(), this.C = t3, this.L = e7;
      }
    };
    De2 = class {
      constructor(t3, e7) {
        this.field = t3, this.transform = e7;
      }
    };
    Fe2 = class {
      constructor(t3, e7) {
        this.updateTime = t3, this.exists = e7;
      }
      static none() {
        return new Fe2();
      }
      static exists(t3) {
        return new Fe2(void 0, t3);
      }
      static updateTime(t3) {
        return new Fe2(t3);
      }
      get isNone() {
        return void 0 === this.updateTime && void 0 === this.exists;
      }
      isEqual(t3) {
        return this.exists === t3.exists && (this.updateTime ? !!t3.updateTime && this.updateTime.isEqual(t3.updateTime) : !t3.updateTime);
      }
    };
    xe2 = class {
    };
    Se2 = class extends xe2 {
      constructor(t3, e7, n3, r6 = []) {
        super(), this.key = t3, this.value = e7, this.precondition = n3, this.fieldTransforms = r6, this.type = 0;
      }
      getFieldMask() {
        return null;
      }
    };
    qe2 = class extends xe2 {
      constructor(t3, e7, n3, r6, s6 = []) {
        super(), this.key = t3, this.data = e7, this.fieldMask = n3, this.precondition = r6, this.fieldTransforms = s6, this.type = 1;
      }
      getFieldMask() {
        return this.fieldMask;
      }
    };
    Oe2 = class extends xe2 {
      constructor(t3, e7) {
        super(), this.key = t3, this.precondition = e7, this.type = 2, this.fieldTransforms = [];
      }
      getFieldMask() {
        return null;
      }
    };
    ke2 = class extends xe2 {
      constructor(t3, e7) {
        super(), this.key = t3, this.precondition = e7, this.type = 3, this.fieldTransforms = [];
      }
      getFieldMask() {
        return null;
      }
    };
    Ce2 = (() => {
      const t3 = {
        asc: "ASCENDING",
        desc: "DESCENDING"
      };
      return t3;
    })();
    Le2 = (() => {
      const t3 = {
        "<": "LESS_THAN",
        "<=": "LESS_THAN_OR_EQUAL",
        ">": "GREATER_THAN",
        ">=": "GREATER_THAN_OR_EQUAL",
        "==": "EQUAL",
        "!=": "NOT_EQUAL",
        "array-contains": "ARRAY_CONTAINS",
        in: "IN",
        "not-in": "NOT_IN",
        "array-contains-any": "ARRAY_CONTAINS_ANY"
      };
      return t3;
    })();
    Me2 = (() => {
      const t3 = {
        and: "AND",
        or: "OR"
      };
      return t3;
    })();
    Ue2 = class {
      constructor(t3, e7) {
        this.databaseId = t3, this.k = e7;
      }
    };
    hn = class {
      constructor(t3, e7, n3 = 1e3, r6 = 1.5, s6 = 6e4) {
        this.M = t3, this.timerId = e7, this.U = n3, this.j = r6, this.B = s6, this.W = 0, this.G = null, this.K = Date.now(), this.reset();
      }
      reset() {
        this.W = 0;
      }
      Y() {
        this.W = this.B;
      }
      H(t3) {
        this.cancel();
        const e7 = Math.floor(this.W + this.J()), n3 = Math.max(0, Date.now() - this.K), r6 = Math.max(0, e7 - n3);
        r6 > 0 && y4("ExponentialBackoff", `Backing off for ${r6} ms (base delay: ${this.W} ms, delay with jitter: ${e7} ms, last attempt: ${n3} ms ago)`), this.G = this.M.enqueueAfterDelay(this.timerId, r6, () => (this.K = Date.now(), t3())), this.W *= this.j, this.W < this.U && (this.W = this.U), this.W > this.B && (this.W = this.B);
      }
      X() {
        null !== this.G && (this.G.skipDelay(), this.G = null);
      }
      cancel() {
        null !== this.G && (this.G.cancel(), this.G = null);
      }
      J() {
        return (Math.random() - 0.5) * this.W;
      }
    };
    ln = class extends class {
    } {
      constructor(t3, e7, n3, r6) {
        super(), this.authCredentials = t3, this.appCheckCredentials = e7, this.connection = n3, this.C = r6, this.Z = false;
      }
      tt() {
        if (this.Z)
          throw new U2(S4, "The client has already been terminated.");
      }
      I(t3, e7, n3) {
        return this.tt(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(([r6, s6]) => this.connection.I(t3, e7, n3, r6, s6)).catch((t4) => {
          throw "FirebaseError" === t4.name ? (t4.code === F3 && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t4) : new U2(R2, t4.toString());
        });
      }
      P(t3, e7, n3, r6) {
        return this.tt(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(([s6, i4]) => this.connection.P(t3, e7, n3, s6, i4, r6)).catch((t4) => {
          throw "FirebaseError" === t4.name ? (t4.code === F3 && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), t4) : new U2(R2, t4.toString());
        });
      }
      terminate() {
        this.Z = true;
      }
    };
    pn = /* @__PURE__ */ new Map();
    gn = class {
      constructor(t3) {
        var e7;
        if (void 0 === t3.host) {
          if (void 0 !== t3.ssl)
            throw new U2(P4, "Can't provide ssl option if host option is not set");
          this.host = "firestore.googleapis.com", this.ssl = true;
        } else
          this.host = t3.host, this.ssl = null === (e7 = t3.ssl) || void 0 === e7 || e7;
        if (this.credentials = t3.credentials, this.ignoreUndefinedProperties = !!t3.ignoreUndefinedProperties, void 0 === t3.cacheSizeBytes)
          this.cacheSizeBytes = 41943040;
        else {
          if (-1 !== t3.cacheSizeBytes && t3.cacheSizeBytes < 1048576)
            throw new U2(P4, "cacheSizeBytes must be at least 1048576");
          this.cacheSizeBytes = t3.cacheSizeBytes;
        }
        this.experimentalForceLongPolling = !!t3.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t3.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t3.useFetchStreams, function(t4, e8, n3, r6) {
          if (true === e8 && true === r6)
            throw new U2(P4, `${t4} and ${n3} cannot be used together.`);
        }("experimentalForceLongPolling", t3.experimentalForceLongPolling, "experimentalAutoDetectLongPolling", t3.experimentalAutoDetectLongPolling);
      }
      isEqual(t3) {
        return this.host === t3.host && this.ssl === t3.ssl && this.credentials === t3.credentials && this.cacheSizeBytes === t3.cacheSizeBytes && this.experimentalForceLongPolling === t3.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t3.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t3.ignoreUndefinedProperties && this.useFetchStreams === t3.useFetchStreams;
      }
    };
    _n2 = class {
      constructor(t3, e7, n3, r6) {
        this._authCredentials = t3, this._appCheckCredentials = e7, this._databaseId = n3, this._app = r6, this.type = "firestore-lite", this._persistenceKey = "(lite)", this._settings = new gn({}), this._settingsFrozen = false;
      }
      get app() {
        if (!this._app)
          throw new U2(S4, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
        return this._app;
      }
      get _initialized() {
        return this._settingsFrozen;
      }
      get _terminated() {
        return void 0 !== this._terminateTask;
      }
      _setSettings(t3) {
        if (this._settingsFrozen)
          throw new U2(S4, "Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.");
        this._settings = new gn(t3), void 0 !== t3.credentials && (this._authCredentials = function(t4) {
          if (!t4)
            return new Q2();
          switch (t4.type) {
            case "gapi":
              const e7 = t4.client;
              return new K2(e7, t4.sessionIndex || "0", t4.iamToken || null, t4.authTokenFactory || null);
            case "provider":
              return t4.client;
            default:
              throw new U2(P4, "makeAuthCredentialsProvider failed due to invalid credential type");
          }
        }(t3.credentials));
      }
      _getSettings() {
        return this._settings;
      }
      _freezeSettings() {
        return this._settingsFrozen = true, this._settings;
      }
      _delete() {
        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;
      }
      toJSON() {
        return {
          app: this._app,
          databaseId: this._databaseId,
          settings: this._settings
        };
      }
      _terminate() {
        return function(t3) {
          const e7 = pn.get(t3);
          e7 && (y4("ComponentProvider", "Removing Datastore"), pn.delete(t3), e7.terminate());
        }(this), Promise.resolve();
      }
    };
    Tn = class {
      constructor() {
        this.type = "AggregateField";
      }
    };
    An = class {
      constructor(t3, e7) {
        this._data = e7, this.type = "AggregateQuerySnapshot", this.query = t3;
      }
      data() {
        return this._data;
      }
    };
    Rn = class {
      constructor(t3, e7, n3) {
        this.query = t3, this.datastore = e7, this.userDataWriter = n3;
      }
      run() {
        return mn(this.datastore, this.query._query).then((t3) => {
          E3(void 0 !== t3[0]);
          const e7 = Object.entries(t3[0]).filter(([t4, e8]) => "count_alias" === t4).map(([t4, e8]) => this.userDataWriter.convertValue(e8))[0];
          return E3("number" == typeof e7), Promise.resolve(new An(this.query, {
            count: e7
          }));
        });
      }
    };
    Pn = class {
      constructor(t3, e7, n3) {
        this.converter = e7, this._key = n3, this.type = "document", this.firestore = t3;
      }
      get _path() {
        return this._key.path;
      }
      get id() {
        return this._key.path.lastSegment();
      }
      get path() {
        return this._key.path.canonicalString();
      }
      get parent() {
        return new $n(this.firestore, this.converter, this._key.path.popLast());
      }
      withConverter(t3) {
        return new Pn(this.firestore, t3, this._key);
      }
    };
    Vn = class {
      constructor(t3, e7, n3) {
        this.converter = e7, this._query = n3, this.type = "query", this.firestore = t3;
      }
      withConverter(t3) {
        return new Vn(this.firestore, t3, this._query);
      }
    };
    $n = class extends Vn {
      constructor(t3, e7, n3) {
        super(t3, e7, new ye2(n3)), this._path = n3, this.type = "collection";
      }
      get id() {
        return this._query.path.lastSegment();
      }
      get path() {
        return this._query.path.canonicalString();
      }
      get parent() {
        const t3 = this._path.popLast();
        return t3.isEmpty() ? null : new Pn(
          this.firestore,
          null,
          new rt2(t3)
        );
      }
      withConverter(t3) {
        return new $n(this.firestore, t3, this._path);
      }
    };
    qn = class {
      constructor(t3) {
        this._byteString = t3;
      }
      static fromBase64String(t3) {
        try {
          return new qn(It2.fromBase64String(t3));
        } catch (t4) {
          throw new U2(P4, "Failed to construct data from Base64 string: " + t4);
        }
      }
      static fromUint8Array(t3) {
        return new qn(It2.fromUint8Array(t3));
      }
      toBase64() {
        return this._byteString.toBase64();
      }
      toUint8Array() {
        return this._byteString.toUint8Array();
      }
      toString() {
        return "Bytes(base64: " + this.toBase64() + ")";
      }
      isEqual(t3) {
        return this._byteString.isEqual(t3._byteString);
      }
    };
    On = class {
      constructor(...t3) {
        for (let e7 = 0; e7 < t3.length; ++e7)
          if (0 === t3[e7].length)
            throw new U2(P4, "Invalid field name at argument $(i + 1). Field names must not be empty.");
        this._internalPath = new nt2(t3);
      }
      isEqual(t3) {
        return this._internalPath.isEqual(t3._internalPath);
      }
    };
    Cn = class {
      constructor(t3) {
        this._methodName = t3;
      }
    };
    Ln = class {
      constructor(t3, e7) {
        if (!isFinite(t3) || t3 < -90 || t3 > 90)
          throw new U2(P4, "Latitude must be a number between -90 and 90, but was: " + t3);
        if (!isFinite(e7) || e7 < -180 || e7 > 180)
          throw new U2(P4, "Longitude must be a number between -180 and 180, but was: " + e7);
        this._lat = t3, this._long = e7;
      }
      get latitude() {
        return this._lat;
      }
      get longitude() {
        return this._long;
      }
      isEqual(t3) {
        return this._lat === t3._lat && this._long === t3._long;
      }
      toJSON() {
        return {
          latitude: this._lat,
          longitude: this._long
        };
      }
      _compareTo(t3) {
        return _t3(this._lat, t3._lat) || _t3(this._long, t3._long);
      }
    };
    Mn = /^__.*__$/;
    Un = class {
      constructor(t3, e7, n3) {
        this.data = t3, this.fieldMask = e7, this.fieldTransforms = n3;
      }
      toMutation(t3, e7) {
        return null !== this.fieldMask ? new qe2(t3, this.data, this.fieldMask, e7, this.fieldTransforms) : new Se2(t3, this.data, e7, this.fieldTransforms);
      }
    };
    jn = class {
      constructor(t3, e7, n3) {
        this.data = t3, this.fieldMask = e7, this.fieldTransforms = n3;
      }
      toMutation(t3, e7) {
        return new qe2(t3, this.data, this.fieldMask, e7, this.fieldTransforms);
      }
    };
    Qn = class {
      constructor(t3, e7, n3, r6, s6, i4) {
        this.settings = t3, this.databaseId = e7, this.C = n3, this.ignoreUndefinedProperties = r6, void 0 === s6 && this.et(), this.fieldTransforms = s6 || [], this.fieldMask = i4 || [];
      }
      get path() {
        return this.settings.path;
      }
      get nt() {
        return this.settings.nt;
      }
      rt(t3) {
        return new Qn(Object.assign(Object.assign({}, this.settings), t3), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);
      }
      st(t3) {
        var e7;
        const n3 = null === (e7 = this.path) || void 0 === e7 ? void 0 : e7.child(t3), r6 = this.rt({
          path: n3,
          it: false
        });
        return r6.ot(t3), r6;
      }
      ut(t3) {
        var e7;
        const n3 = null === (e7 = this.path) || void 0 === e7 ? void 0 : e7.child(t3), r6 = this.rt({
          path: n3,
          it: false
        });
        return r6.et(), r6;
      }
      ct(t3) {
        return this.rt({
          path: void 0,
          it: true
        });
      }
      at(t3) {
        return hr(t3, this.settings.methodName, this.settings.ht || false, this.path, this.settings.lt);
      }
      contains(t3) {
        return void 0 !== this.fieldMask.find((e7) => t3.isPrefixOf(e7)) || void 0 !== this.fieldTransforms.find((e7) => t3.isPrefixOf(e7.field));
      }
      et() {
        if (this.path)
          for (let t3 = 0; t3 < this.path.length; t3++)
            this.ot(this.path.get(t3));
      }
      ot(t3) {
        if (0 === t3.length)
          throw this.at("Document fields must not be empty");
        if (Bn(this.nt) && Mn.test(t3))
          throw this.at('Document fields cannot begin and end with "__"');
      }
    };
    zn = class {
      constructor(t3, e7, n3) {
        this.databaseId = t3, this.ignoreUndefinedProperties = e7, this.C = n3 || an(t3);
      }
      ft(t3, e7, n3, r6 = false) {
        return new Qn({
          nt: t3,
          methodName: e7,
          lt: n3,
          path: nt2.emptyPath(),
          it: false,
          ht: r6
        }, this.databaseId, this.C, this.ignoreUndefinedProperties);
      }
    };
    Kn = class extends Cn {
      _toFieldTransform(t3) {
        if (2 !== t3.nt)
          throw 1 === t3.nt ? t3.at(`${this._methodName}() can only appear at the top level of your update data`) : t3.at(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);
        return t3.fieldMask.push(t3.path), null;
      }
      isEqual(t3) {
        return t3 instanceof Kn;
      }
    };
    Hn = class extends Cn {
      _toFieldTransform(t3) {
        return new De2(t3.path, new Pe2());
      }
      isEqual(t3) {
        return t3 instanceof Hn;
      }
    };
    Jn = class extends Cn {
      constructor(t3, e7) {
        super(t3), this.dt = e7;
      }
      _toFieldTransform(t3) {
        const e7 = Yn(
          this,
          t3,
          true
        ), n3 = this.dt.map((t4) => rr(t4, e7)), r6 = new Ve2(n3);
        return new De2(t3.path, r6);
      }
      isEqual(t3) {
        return this === t3;
      }
    };
    Xn = class extends Cn {
      constructor(t3, e7) {
        super(t3), this.dt = e7;
      }
      _toFieldTransform(t3) {
        const e7 = Yn(
          this,
          t3,
          true
        ), n3 = this.dt.map((t4) => rr(t4, e7)), r6 = new $e2(n3);
        return new De2(t3.path, r6);
      }
      isEqual(t3) {
        return this === t3;
      }
    };
    Zn = class extends Cn {
      constructor(t3, e7) {
        super(t3), this.wt = e7;
      }
      _toFieldTransform(t3) {
        const e7 = new Ne2(t3.C, Ae2(t3.C, this.wt));
        return new De2(t3.path, e7);
      }
      isEqual(t3) {
        return this === t3;
      }
    };
    cr = new RegExp("[~\\*/\\[\\]]");
    fr = class {
      constructor(t3, e7, n3, r6, s6) {
        this._firestore = t3, this._userDataWriter = e7, this._key = n3, this._document = r6, this._converter = s6;
      }
      get id() {
        return this._key.path.lastSegment();
      }
      get ref() {
        return new Pn(this._firestore, this._converter, this._key);
      }
      exists() {
        return null !== this._document;
      }
      data() {
        if (this._document) {
          if (this._converter) {
            const t3 = new dr(
              this._firestore,
              this._userDataWriter,
              this._key,
              this._document,
              null
            );
            return this._converter.fromFirestore(t3);
          }
          return this._userDataWriter.convertValue(this._document.data.value);
        }
      }
      get(t3) {
        if (this._document) {
          const e7 = this._document.data.field(pr("DocumentSnapshot.get", t3));
          if (null !== e7)
            return this._userDataWriter.convertValue(e7);
        }
      }
    };
    dr = class extends fr {
      data() {
        return super.data();
      }
    };
    wr = class {
      constructor(t3, e7) {
        this._docs = e7, this.query = t3;
      }
      get docs() {
        return [...this._docs];
      }
      get size() {
        return this.docs.length;
      }
      get empty() {
        return 0 === this.docs.length;
      }
      forEach(t3, e7) {
        this._docs.forEach(t3, e7);
      }
    };
    yr = class {
    };
    gr = class extends yr {
    };
    vr = class extends gr {
      constructor(t3, e7, n3) {
        super(), this._field = t3, this._op = e7, this._value = n3, this.type = "where";
      }
      static _create(t3, e7, n3) {
        return new vr(t3, e7, n3);
      }
      _apply(t3) {
        const e7 = this._parse(t3);
        return Lr(t3._query, e7), new Vn(t3.firestore, t3.converter, Ie2(t3._query, e7));
      }
      _parse(t3) {
        const e7 = Wn(t3.firestore), n3 = function(t4, e8, n4, r6, s6, i4, o4) {
          let u;
          if (s6.isKeyField()) {
            if ("array-contains" === i4 || "array-contains-any" === i4)
              throw new U2(P4, `Invalid Query. You can't perform '${i4}' queries on documentId().`);
            if ("in" === i4 || "not-in" === i4) {
              Cr(o4, i4);
              const e9 = [];
              for (const n5 of o4)
                e9.push(kr(r6, t4, n5));
              u = {
                arrayValue: {
                  values: e9
                }
              };
            } else
              u = kr(r6, t4, o4);
          } else
            "in" !== i4 && "not-in" !== i4 && "array-contains-any" !== i4 || Cr(o4, i4), u = nr(
              n4,
              e8,
              o4,
              "in" === i4 || "not-in" === i4
            );
          return Gt2.create(s6, i4, u);
        }(t3._query, "where", e7, t3.firestore._databaseId, this._field, this._op, this._value);
        return n3;
      }
    };
    Er = class extends yr {
      constructor(t3, e7) {
        super(), this.type = t3, this._queryConstraints = e7;
      }
      static _create(t3, e7) {
        return new Er(t3, e7);
      }
      _parse(t3) {
        const e7 = this._queryConstraints.map((e8) => e8._parse(t3)).filter((t4) => t4.getFilters().length > 0);
        return 1 === e7.length ? e7[0] : Kt.create(e7, this._getOperator());
      }
      _apply(t3) {
        const e7 = this._parse(t3);
        return 0 === e7.getFilters().length ? t3 : (function(t4, e8) {
          let n3 = t4;
          const r6 = e8.getFlattenedFilters();
          for (const t5 of r6)
            Lr(n3, t5), n3 = Ie2(n3, t5);
        }(t3._query, e7), new Vn(t3.firestore, t3.converter, Ie2(t3._query, e7)));
      }
      _getQueryConstraints() {
        return this._queryConstraints;
      }
      _getOperator() {
        return "and" === this.type ? "and" : "or";
      }
    };
    Ar = class extends gr {
      constructor(t3, e7) {
        super(), this._field = t3, this._direction = e7, this.type = "orderBy";
      }
      static _create(t3, e7) {
        return new Ar(t3, e7);
      }
      _apply(t3) {
        const e7 = function(t4, e8, n3) {
          if (null !== t4.startAt)
            throw new U2(P4, "Invalid query. You must not call startAt() or startAfter() before calling orderBy().");
          if (null !== t4.endAt)
            throw new U2(P4, "Invalid query. You must not call endAt() or endBefore() before calling orderBy().");
          const r6 = new se2(e8, n3);
          return function(t5, e9) {
            if (null === ge2(t5)) {
              const n4 = _e3(t5);
              null !== n4 && Mr(t5, n4, e9.field);
            }
          }(t4, r6), r6;
        }(t3._query, this._field, this._direction);
        return new Vn(t3.firestore, t3.converter, function(t4, e8) {
          const n3 = t4.explicitOrderBy.concat([e8]);
          return new ye2(t4.path, t4.collectionGroup, n3, t4.filters.slice(), t4.limit, t4.limitType, t4.startAt, t4.endAt);
        }(t3._query, e7));
      }
    };
    Pr = class extends gr {
      constructor(t3, e7, n3) {
        super(), this.type = t3, this._limit = e7, this._limitType = n3;
      }
      static _create(t3, e7, n3) {
        return new Pr(t3, e7, n3);
      }
      _apply(t3) {
        return new Vn(t3.firestore, t3.converter, function(t4, e7, n3) {
          return new ye2(t4.path, t4.collectionGroup, t4.explicitOrderBy.slice(), t4.filters.slice(), e7, n3, t4.startAt, t4.endAt);
        }(t3._query, this._limit, this._limitType));
      }
    };
    Nr = class extends gr {
      constructor(t3, e7, n3) {
        super(), this.type = t3, this._docOrFields = e7, this._inclusive = n3;
      }
      static _create(t3, e7, n3) {
        return new Nr(t3, e7, n3);
      }
      _apply(t3) {
        const e7 = Or(t3, this.type, this._docOrFields, this._inclusive);
        return new Vn(t3.firestore, t3.converter, function(t4, e8) {
          return new ye2(t4.path, t4.collectionGroup, t4.explicitOrderBy.slice(), t4.filters.slice(), t4.limit, t4.limitType, e8, t4.endAt);
        }(t3._query, e7));
      }
    };
    xr = class extends gr {
      constructor(t3, e7, n3) {
        super(), this.type = t3, this._docOrFields = e7, this._inclusive = n3;
      }
      static _create(t3, e7, n3) {
        return new xr(t3, e7, n3);
      }
      _apply(t3) {
        const e7 = Or(t3, this.type, this._docOrFields, this._inclusive);
        return new Vn(t3.firestore, t3.converter, function(t4, e8) {
          return new ye2(t4.path, t4.collectionGroup, t4.explicitOrderBy.slice(), t4.filters.slice(), t4.limit, t4.limitType, t4.startAt, e8);
        }(t3._query, e7));
      }
    };
    Br = class extends class {
      convertValue(t3, e7 = "none") {
        switch (xt2(t3)) {
          case 0:
            return null;
          case 1:
            return t3.booleanValue;
          case 2:
            return Rt2(t3.integerValue || t3.doubleValue);
          case 3:
            return this.convertTimestamp(t3.timestampValue);
          case 4:
            return this.convertServerTimestamp(t3, e7);
          case 5:
            return t3.stringValue;
          case 6:
            return this.convertBytes(Pt2(t3.bytesValue));
          case 7:
            return this.convertReference(t3.referenceValue);
          case 8:
            return this.convertGeoPoint(t3.geoPointValue);
          case 9:
            return this.convertArray(t3.arrayValue, e7);
          case 10:
            return this.convertObject(t3.mapValue, e7);
          default:
            throw b3();
        }
      }
      convertObject(t3, e7) {
        const n3 = {};
        return Et2(t3.fields, (t4, r6) => {
          n3[t4] = this.convertValue(r6, e7);
        }), n3;
      }
      convertGeoPoint(t3) {
        return new Ln(Rt2(t3.latitude), Rt2(t3.longitude));
      }
      convertArray(t3, e7) {
        return (t3.values || []).map((t4) => this.convertValue(t4, e7));
      }
      convertServerTimestamp(t3, e7) {
        switch (e7) {
          case "previous":
            const n3 = Nt2(t3);
            return null == n3 ? null : this.convertValue(n3, e7);
          case "estimate":
            return this.convertTimestamp(Dt(t3));
          default:
            return null;
        }
      }
      convertTimestamp(t3) {
        const e7 = At2(t3);
        return new Vt2(e7.seconds, e7.nanos);
      }
      convertDocumentKey(t3, e7) {
        const n3 = tt2.fromString(t3);
        E3(cn(n3));
        const r6 = new X2(n3.get(1), n3.get(3)), s6 = new rt2(n3.popFirst(5));
        return r6.isEqual(e7) || g4(`Document ${s6} contains a document reference within a different database (${r6.projectId}/${r6.database}) which is not supported. It will be treated as a reference in the current database (${e7.projectId}/${e7.database}) instead.`), s6;
      }
    } {
      constructor(t3) {
        super(), this.firestore = t3;
      }
      convertBytes(t3) {
        return new qn(t3);
      }
      convertReference(t3) {
        const e7 = this.convertDocumentKey(t3, this.firestore._databaseId);
        return new Pn(this.firestore, null, e7);
      }
    };
    rs = class {
      constructor(t3, e7) {
        this._firestore = t3, this._commitHandler = e7, this._mutations = [], this._committed = false, this._dataReader = Wn(t3);
      }
      set(t3, e7, n3) {
        this._verifyNotCommitted();
        const r6 = ss(t3, this._firestore), s6 = jr(r6.converter, e7, n3), i4 = Gn(this._dataReader, "WriteBatch.set", r6._key, s6, null !== r6.converter, n3);
        return this._mutations.push(i4.toMutation(r6._key, Fe2.none())), this;
      }
      update(t3, e7, n3, ...r6) {
        this._verifyNotCommitted();
        const s6 = ss(t3, this._firestore);
        let i4;
        return i4 = "string" == typeof (e7 = getModularInstance(e7)) || e7 instanceof On ? er(this._dataReader, "WriteBatch.update", s6._key, e7, n3, r6) : tr(this._dataReader, "WriteBatch.update", s6._key, e7), this._mutations.push(i4.toMutation(s6._key, Fe2.exists(true))), this;
      }
      delete(t3) {
        this._verifyNotCommitted();
        const e7 = ss(t3, this._firestore);
        return this._mutations = this._mutations.concat(new Oe2(e7._key, Fe2.none())), this;
      }
      commit() {
        return this._verifyNotCommitted(), this._committed = true, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();
      }
      _verifyNotCommitted() {
        if (this._committed)
          throw new U2(S4, "A write batch can no longer be used after commit() has been called.");
      }
    };
    os = class {
      constructor(t3) {
        this.datastore = t3, this.readVersions = /* @__PURE__ */ new Map(), this.mutations = [], this.committed = false, this.lastWriteError = null, this.writtenDocs = /* @__PURE__ */ new Set();
      }
      async lookup(t3) {
        if (this.ensureCommitNotCalled(), this.mutations.length > 0)
          throw new U2(P4, "Firestore transactions require all reads to be executed before all writes.");
        const e7 = await dn(this.datastore, t3);
        return e7.forEach((t4) => this.recordVersion(t4)), e7;
      }
      set(t3, e7) {
        this.write(e7.toMutation(t3, this.precondition(t3))), this.writtenDocs.add(t3.toString());
      }
      update(t3, e7) {
        try {
          this.write(e7.toMutation(t3, this.preconditionForUpdate(t3)));
        } catch (t4) {
          this.lastWriteError = t4;
        }
        this.writtenDocs.add(t3.toString());
      }
      delete(t3) {
        this.write(new Oe2(t3, this.precondition(t3))), this.writtenDocs.add(t3.toString());
      }
      async commit() {
        if (this.ensureCommitNotCalled(), this.lastWriteError)
          throw this.lastWriteError;
        const t3 = this.readVersions;
        this.mutations.forEach((e7) => {
          t3.delete(e7.key.toString());
        }), t3.forEach((t4, e7) => {
          const n3 = rt2.fromPath(e7);
          this.mutations.push(new ke2(n3, this.precondition(n3)));
        }), await fn(this.datastore, this.mutations), this.committed = true;
      }
      recordVersion(t3) {
        let e7;
        if (t3.isFoundDocument())
          e7 = t3.version;
        else {
          if (!t3.isNoDocument())
            throw b3();
          e7 = oe2.min();
        }
        const n3 = this.readVersions.get(t3.key.toString());
        if (n3) {
          if (!e7.isEqual(n3))
            throw new U2(q4, "Document version changed between two reads.");
        } else
          this.readVersions.set(t3.key.toString(), e7);
      }
      precondition(t3) {
        const e7 = this.readVersions.get(t3.toString());
        return !this.writtenDocs.has(t3.toString()) && e7 ? e7.isEqual(oe2.min()) ? Fe2.exists(false) : Fe2.updateTime(e7) : Fe2.none();
      }
      preconditionForUpdate(t3) {
        const e7 = this.readVersions.get(t3.toString());
        if (!this.writtenDocs.has(t3.toString()) && e7) {
          if (e7.isEqual(oe2.min()))
            throw new U2(P4, "Can't update a document that doesn't exist.");
          return Fe2.updateTime(e7);
        }
        return Fe2.exists(true);
      }
      write(t3) {
        this.ensureCommitNotCalled(), this.mutations.push(t3);
      }
      ensureCommitNotCalled() {
      }
    };
    us = {
      maxAttempts: 5
    };
    cs = class {
      constructor(t3, e7, n3, r6, s6) {
        this.asyncQueue = t3, this.datastore = e7, this.options = n3, this.updateFunction = r6, this.deferred = s6, this.yt = n3.maxAttempts, this.gt = new hn(this.asyncQueue, "transaction_retry");
      }
      run() {
        this.yt -= 1, this._t();
      }
      _t() {
        this.gt.H(async () => {
          const t3 = new os(this.datastore), e7 = this.vt(t3);
          e7 && e7.then((e8) => {
            this.asyncQueue.enqueueAndForget(() => t3.commit().then(() => {
              this.deferred.resolve(e8);
            }).catch((t4) => {
              this.bt(t4);
            }));
          }).catch((t4) => {
            this.bt(t4);
          });
        });
      }
      vt(t3) {
        try {
          const e7 = this.updateFunction(t3);
          return !ht2(e7) && e7.catch && e7.then ? e7 : (this.deferred.reject(Error("Transaction callback must return a Promise")), null);
        } catch (t4) {
          return this.deferred.reject(t4), null;
        }
      }
      bt(t3) {
        this.yt > 0 && this.Et(t3) ? (this.yt -= 1, this.asyncQueue.enqueueAndForget(() => (this._t(), Promise.resolve()))) : this.deferred.reject(t3);
      }
      Et(t3) {
        if ("FirebaseError" === t3.name) {
          const e7 = t3.code;
          return "aborted" === e7 || "failed-precondition" === e7 || "already-exists" === e7 || !function(t4) {
            switch (t4) {
              default:
                return b3();
              case A5:
              case R2:
              case V3:
              case x3:
              case C4:
              case L3:
              case F3:
                return false;
              case P4:
              case $3:
              case N:
              case D2:
              case S4:
              case q4:
              case O2:
              case k4:
              case M2:
                return true;
            }
          }(e7);
        }
        return false;
      }
    };
    hs = class {
      constructor(t3, e7, n3, r6, s6) {
        this.asyncQueue = t3, this.timerId = e7, this.targetTimeMs = n3, this.op = r6, this.removalCallback = s6, this.deferred = new j2(), this.then = this.deferred.promise.then.bind(this.deferred.promise), this.deferred.promise.catch((t4) => {
        });
      }
      static createAndSchedule(t3, e7, n3, r6, s6) {
        const i4 = Date.now() + n3, o4 = new hs(t3, e7, i4, r6, s6);
        return o4.start(n3), o4;
      }
      start(t3) {
        this.timerHandle = setTimeout(() => this.handleDelayElapsed(), t3);
      }
      skipDelay() {
        return this.handleDelayElapsed();
      }
      cancel(t3) {
        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U2(A5, "Operation cancelled" + (t3 ? ": " + t3 : ""))));
      }
      handleDelayElapsed() {
        this.asyncQueue.enqueueAndForget(() => null !== this.timerHandle ? (this.clearTimeout(), this.op().then((t3) => this.deferred.resolve(t3))) : Promise.resolve());
      }
      clearTimeout() {
        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);
      }
    };
    ls = class {
      constructor() {
        this.It = Promise.resolve(), this.Tt = [], this.At = false, this.Rt = [], this.Pt = null, this.Vt = false, this.$t = false, this.Nt = [], this.gt = new hn(this, "async_queue_retry"), this.Dt = () => {
          const t4 = as();
          t4 && y4("AsyncQueue", "Visibility state changed to " + t4.visibilityState), this.gt.X();
        };
        const t3 = as();
        t3 && "function" == typeof t3.addEventListener && t3.addEventListener("visibilitychange", this.Dt);
      }
      get isShuttingDown() {
        return this.At;
      }
      enqueueAndForget(t3) {
        this.enqueue(t3);
      }
      enqueueAndForgetEvenWhileRestricted(t3) {
        this.Ft(), this.xt(t3);
      }
      enterRestrictedMode(t3) {
        if (!this.At) {
          this.At = true, this.$t = t3 || false;
          const e7 = as();
          e7 && "function" == typeof e7.removeEventListener && e7.removeEventListener("visibilitychange", this.Dt);
        }
      }
      enqueue(t3) {
        if (this.Ft(), this.At)
          return new Promise(() => {
          });
        const e7 = new j2();
        return this.xt(() => this.At && this.$t ? Promise.resolve() : (t3().then(e7.resolve, e7.reject), e7.promise)).then(() => e7.promise);
      }
      enqueueRetryable(t3) {
        this.enqueueAndForget(() => (this.Tt.push(t3), this.St()));
      }
      async St() {
        if (0 !== this.Tt.length) {
          try {
            await this.Tt[0](), this.Tt.shift(), this.gt.reset();
          } catch (t3) {
            if (!function(t4) {
              return "IndexedDbTransactionError" === t4.name;
            }(t3))
              throw t3;
            y4("AsyncQueue", "Operation failed with retryable error: " + t3);
          }
          this.Tt.length > 0 && this.gt.H(() => this.St());
        }
      }
      xt(t3) {
        const e7 = this.It.then(() => (this.Vt = true, t3().catch((t4) => {
          this.Pt = t4, this.Vt = false;
          const e8 = function(t5) {
            let e9 = t5.message || "";
            t5.stack && (e9 = t5.stack.includes(t5.message) ? t5.stack : t5.message + "\n" + t5.stack);
            return e9;
          }(t4);
          throw g4("INTERNAL UNHANDLED ERROR: ", e8), t4;
        }).then((t4) => (this.Vt = false, t4))));
        return this.It = e7, e7;
      }
      enqueueAfterDelay(t3, e7, n3) {
        this.Ft(), this.Nt.indexOf(t3) > -1 && (e7 = 0);
        const r6 = hs.createAndSchedule(this, t3, e7, n3, (t4) => this.qt(t4));
        return this.Rt.push(r6), r6;
      }
      Ft() {
        this.Pt && b3();
      }
      verifyOperationInProgress() {
      }
      async Ot() {
        let t3;
        do {
          t3 = this.It, await t3;
        } while (t3 !== this.It);
      }
      kt(t3) {
        for (const e7 of this.Rt)
          if (e7.timerId === t3)
            return true;
        return false;
      }
      Ct(t3) {
        return this.Ot().then(() => {
          this.Rt.sort((t4, e7) => t4.targetTimeMs - e7.targetTimeMs);
          for (const e7 of this.Rt)
            if (e7.skipDelay(), "all" !== t3 && e7.timerId === t3)
              break;
          return this.Ot();
        });
      }
      Lt(t3) {
        this.Nt.push(t3);
      }
      qt(t3) {
        const e7 = this.Rt.indexOf(t3);
        this.Rt.splice(e7, 1);
      }
    };
    fs = class {
      constructor(t3, e7) {
        this._firestore = t3, this._transaction = e7, this._dataReader = Wn(t3);
      }
      get(t3) {
        const e7 = ss(t3, this._firestore), n3 = new Br(this._firestore);
        return this._transaction.lookup([e7._key]).then((t4) => {
          if (!t4 || 1 !== t4.length)
            return b3();
          const r6 = t4[0];
          if (r6.isFoundDocument())
            return new fr(this._firestore, n3, r6.key, r6, e7.converter);
          if (r6.isNoDocument())
            return new fr(this._firestore, n3, e7._key, null, e7.converter);
          throw b3();
        });
      }
      set(t3, e7, n3) {
        const r6 = ss(t3, this._firestore), s6 = jr(r6.converter, e7, n3), i4 = Gn(this._dataReader, "Transaction.set", r6._key, s6, null !== r6.converter, n3);
        return this._transaction.set(r6._key, i4), this;
      }
      update(t3, e7, n3, ...r6) {
        const s6 = ss(t3, this._firestore);
        let i4;
        return i4 = "string" == typeof (e7 = getModularInstance(e7)) || e7 instanceof On ? er(this._dataReader, "Transaction.update", s6._key, e7, n3, r6) : tr(this._dataReader, "Transaction.update", s6._key, e7), this._transaction.update(s6._key, i4), this;
      }
      delete(t3) {
        const e7 = ss(t3, this._firestore);
        return this._transaction.delete(e7._key), this;
      }
    };
    !function(t3) {
      w2 = t3;
    }(`${SDK_VERSION}_lite`), _registerComponent(new Component("firestore/lite", (t3, { instanceIdentifier: e7, options: n3 }) => {
      const r6 = t3.getProvider("app").getImmediate(), s6 = new _n2(new W2(t3.getProvider("auth-internal")), new H2(t3.getProvider("app-check-internal")), function(t4, e8) {
        if (!Object.prototype.hasOwnProperty.apply(t4.options, ["projectId"]))
          throw new U2(P4, '"projectId" not provided in firebase.initializeApp.');
        return new X2(t4.options.projectId, e8);
      }(r6, e7), r6);
      return n3 && s6._setSettings(n3), s6;
    }, "PUBLIC").setMultipleInstances(true)), registerVersion("firestore-lite", "3.8.0", ""), registerVersion("firestore-lite", "3.8.0", "esm2017");
  }
});

// node_modules/firebase/firestore/lite/dist/esm/index.esm.js
var index_esm_exports = {};
__export(index_esm_exports, {
  AggregateField: () => Tn,
  AggregateQuerySnapshot: () => An,
  Bytes: () => qn,
  CollectionReference: () => $n,
  DocumentReference: () => Pn,
  DocumentSnapshot: () => fr,
  FieldPath: () => On,
  FieldValue: () => Cn,
  Firestore: () => _n2,
  FirestoreError: () => U2,
  GeoPoint: () => Ln,
  Query: () => Vn,
  QueryCompositeFilterConstraint: () => Er,
  QueryConstraint: () => gr,
  QueryDocumentSnapshot: () => dr,
  QueryEndAtConstraint: () => xr,
  QueryFieldFilterConstraint: () => vr,
  QueryLimitConstraint: () => Pr,
  QueryOrderByConstraint: () => Ar,
  QuerySnapshot: () => wr,
  QueryStartAtConstraint: () => Nr,
  Timestamp: () => Vt2,
  Transaction: () => fs,
  WriteBatch: () => rs,
  addDoc: () => Yr,
  aggregateQuerySnapshotEqual: () => Jr,
  and: () => Tr,
  arrayRemove: () => es,
  arrayUnion: () => ts,
  collection: () => Nn,
  collectionGroup: () => Dn,
  connectFirestoreEmulator: () => En,
  deleteDoc: () => Kr,
  deleteField: () => Xr,
  doc: () => Fn,
  documentId: () => kn,
  endAt: () => qr,
  endBefore: () => Sr,
  getCount: () => Hr,
  getDoc: () => Qr,
  getDocs: () => zr,
  getFirestore: () => bn,
  increment: () => ns,
  initializeFirestore: () => vn,
  limit: () => Vr,
  limitToLast: () => $r,
  or: () => Ir,
  orderBy: () => Rr,
  query: () => _r2,
  queryEqual: () => Sn,
  refEqual: () => xn,
  runTransaction: () => ds,
  serverTimestamp: () => Zr,
  setDoc: () => Wr,
  setLogLevel: () => p4,
  snapshotEqual: () => mr,
  startAfter: () => Fr,
  startAt: () => Dr,
  terminate: () => In,
  updateDoc: () => Gr,
  where: () => br,
  writeBatch: () => is
});
var init_index_esm4 = __esm({
  "node_modules/firebase/firestore/lite/dist/esm/index.esm.js"() {
    init_index_browser_esm2017();
  }
});

// .svelte-kit/output/server/chunks/LoginCard.js
var LoginCard_exports = {};
__export(LoginCard_exports, {
  default: () => te3
});
function A6(e7) {
  return () => {
    throw new Error(`Cannot call ${e7}(...) on the server`);
  };
}
var H3, q5, R3, X3, Y4, O3, W3, J3, K3, N2, te3;
var init_LoginCard = __esm({
  ".svelte-kit/output/server/chunks/LoginCard.js"() {
    init_chunks();
    init_firebase();
    init_store();
    H3 = A6("goto");
    q5 = I((e7, n3, i4, p6) => `

<svg width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path fill="white" d="M16 7.151l3.302-4.036c0 0 5.656 0.12 11.292 2.74-1.443 2.182-4.307 3.25-4.307 3.25-0.193-1.917-1.536-2.385-5.807-2.385l-4.479 25.281-4.51-25.286c-4.24 0-5.583 0.469-5.776 2.385 0 0-2.865-1.057-4.307-3.24 5.635-2.62 11.292-2.74 11.292-2.74l3.302 4.031h-0.005zM16 1.953c4.552-0.042 9.766 0.703 15.104 3.036 0.714-1.292 0.896-1.859 0.896-1.859-5.833-2.313-11.297-3.109-16-3.13-4.703 0.021-10.167 0.813-16 3.13 0 0 0.26 0.703 0.896 1.865 5.339-2.344 10.552-3.083 15.104-3.047z"></path></svg>`);
    R3 = I((e7, n3, i4, p6) => {
      let t3, o4;
      return o4 = x(d3, (s6) => t3 = s6), o4(), `<signin-button class="${"group bg-[#1d9bf0] hover:shadow-md hover:scale-[1.01] duration-200 rounded-md p-4 " + j("group-hover:bg-opacity-90", true) + " text-white flex justify-center items-center gap-5"}"><span class="group-hover:scale-[1.15] duration-500">${G(q5, "IconTwitter").$$render(e7, {}, {}, {})}</span>
  
  <span>Sign-in with Twitter</span></signin-button>`;
    });
    X3 = I((e7, n3, i4, p6) => `<svg height="24" width="24" viewBox="0 0 210 210"><path fill="white" d="M0,105C0,47.103,47.103,0,105,0c23.383,0,45.515,7.523,64.004,21.756l-24.4,31.696C133.172,44.652,119.477,40,105,40
c-35.841,0-65,29.159-65,65s29.159,65,65,65c28.867,0,53.398-18.913,61.852-45H105V85h105v20c0,57.897-47.103,105-105,105
S0,162.897,0,105z"></path></svg>`);
    Y4 = I((e7, n3, i4, p6) => {
      let t3, o4;
      return o4 = x(d3, (s6) => t3 = s6), o4(), `<signin-button class="${"group mb-6 bg-[#4285f4] hover:shadow-md hover:scale-[1.01] duration-200 rounded-md p-4 " + j("group-hover:bg-opacity-90", true) + " text-white flex justify-center items-center gap-5"}"><span class="group-hover:scale-[1.15] duration-500">${G(X3, "IconGoogle").$$render(e7, {}, {}, {})}
    </span>
  
  <span>Sign-in with Google</span></signin-button>`;
    });
    O3 = I((e7, n3, i4, p6) => `<svg height="24" width="24" viewBox="0 0 485 485"><path fill="white" d="M413.974,71.026C368.171,25.225,307.274,0,242.5,0S116.829,25.225,71.026,71.026C25.225,116.829,0,177.726,0,242.5
s25.225,125.671,71.026,171.474C116.829,459.775,177.726,485,242.5,485c32.731,0,64.491-6.414,94.397-19.063l-11.688-27.63
C299.022,449.384,271.194,455,242.5,455C125.327,455,30,359.673,30,242.5S125.327,30,242.5,30S455,125.327,455,242.5
c0,51.323-31.534,74.699-60.834,74.699c-29.299,0-60.833-23.375-60.833-74.699c0-50.086-40.747-90.833-90.833-90.833
s-90.833,40.748-90.833,90.833s40.747,90.833,90.833,90.833c29.655,0,56.034-14.286,72.622-36.335
c4.248,8.577,9.594,16.336,16.04,23.113c16.613,17.468,38.988,27.087,63.004,27.087c24.017,0,46.392-9.62,63.005-27.087
C475.377,300.97,485,274.132,485,242.5C485,177.726,459.775,116.829,413.974,71.026z M242.5,303.333
c-33.543,0-60.833-27.29-60.833-60.833s27.29-60.833,60.833-60.833s60.833,27.29,60.833,60.833S276.043,303.333,242.5,303.333z"></path></svg>`);
    W3 = I((e7, n3, i4, p6) => {
      let t3, o4, s6;
      s6 = x(d3, (b6) => o4 = b6);
      let m8, u, w4, h3 = "", v6 = globalThis.magicLinkInputVisible;
      return t3 = m8, s6(), `<signin-button class="${"group bg-emerald-500 hover:scale-[1.01] hover:shadow-md duration-200 rounded-md p-4 " + j("group-hover:bg-opacity-80", true) + " text-white flex justify-center items-center gap-5"}"${M("this", u, 0)}><span class="group-hover:scale-[1.15] duration-500">${G(O3, "IconEmail").$$render(e7, {}, {}, {})}</span>
  
  <span>Get Magic Link</span></signin-button>

${v6 ? `<input class="${"text-center p-3 mt-3 w-full " + j(t3, true) + " focus:outline-none"}" type="email" placeholder="email"${M("this", w4, 0)}${M("value", h3, 0)}>` : ""}

<span id="emailStatusMessage"></span>`;
    });
    J3 = I((e7, n3, i4, p6) => `
<svg class="-rotate-90" width="24px" height="24px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="white"><path fill="white" d="M23 12.5 20.5 15l-3-2V8.842C15.976 8.337 14.146 8 12 8c-2.145 0-3.976.337-5.5.842V13l-3 2L1 12.5c.665-.997 2.479-2.657 5.5-3.658C8.024 8.337 9.855 8 12 8c2.146 0 3.976.337 5.5.842 3.021 1 4.835 2.66 5.5 3.658z"></path><path stroke="white" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.5 8.842C15.976 8.337 14.146 8 12 8c-2.145 0-3.976.337-5.5.842m11 0c3.021 1 4.835 2.66 5.5 3.658L20.5 15l-3-2V8.842zm-11 0c-3.021 1-4.835 2.66-5.5 3.658L3.5 15l3-2V8.842z"></path></svg>`);
    K3 = I((e7, n3, i4, p6) => {
      let t3, o4, s6;
      s6 = x(d3, (y7) => o4 = y7);
      let m8 = "+1", u, w4, h3, v6 = "", b6 = globalThis.phoneInputVisible;
      return t3 = u, s6(), `
${`<div class="${"w-full group bg-rose-400 hover:scale-[1.01] hover:shadow-md duration-200 rounded-md p-4 " + j("group-hover:bg-opacity-80", true) + " text-white flex justify-center items-center gap-5"}"${M("this", w4, 0)}><span class="group-hover:scale-[1.15] duration-500">${G(J3, "IconPhone").$$render(e7, {}, {}, {})}</span>
    
    <span>Get SMS Code</span></div>

  <div class="grid grid-cols-6 w-full text-black">${b6 ? `<input class="col-span-1 text-center p-3 mt-3 focus:outline-none border-r-2"${M("value", m8, 0)}>
      <input class="${"col-span-5 text-center p-3 mt-3 focus:outline-none " + j(t3, true)}" type="phone" placeholder="phone"${M("this", h3, 0)}${M("value", v6, 0)}>` : ""}</div>`}

<div id="recaptcha-container"></div>
<div id="phoneStatusMessage" class="${"p-3 font-Poppins " + j(o4 ? "text-lime-100" : "text-rose-600", true)}"></div>

`;
    });
    N2 = { code: `.card-styles.svelte-kjxzgo{position:relative;margin-left:auto;margin-right:auto;display:block;width:90vw;border-radius:1rem;padding-top:2.5rem;padding-bottom:2.5rem;padding-left:1.25rem;padding-right:1.25rem;font-family:Poppins, sans-serif;--tw-shadow:0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);transition-duration:300ms
}.card-styles.svelte-kjxzgo:hover{--tw-scale-x:1.01;--tw-scale-y:1.01;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:1.5rem
}@media(min-width: 640px){.card-styles.svelte-kjxzgo{width:500px;padding:2.5rem
    }}`, map: null };
    te3 = I((e7, n3, i4, p6) => {
      let t3, o4, s6, m8, u, w4, h3, v6;
      o4 = x(B2, (r6) => t3 = r6), m8 = x(F2, (r6) => s6 = r6), w4 = x(d3, (r6) => u = r6), v6 = x(q3, (r6) => h3 = r6);
      let { noTransition: b6 = false } = n3, y7, z6, k6, S6;
      function L5(r6 = "/login") {
        let a4 = 3e3, x5 = parseInt(a4 / 1e3);
        S6 = setInterval(() => {
          x5 > 0 && (x5 += -1, document.getElementById("timeLeft").innerHTML = ` ${x5}`);
        }, 1e3), k6 = setTimeout(() => {
          T(B2, t3 = false, t3), document.getElementById("timeLeft").innerHTML = 3, H3(r6);
        }, a4);
      }
      async function B5(r6) {
        let a4 = localStorage.getItem("redirectUrlFromLS");
        if (console.log("redirectUrlFromLS", a4), a4)
          L5(a4);
        else {
          const { getFirestore: x5, collection: D5, getDocs: F5 } = await Promise.resolve().then(() => (init_index_esm4(), index_esm_exports)), { app: j3 } = await Promise.resolve().then(() => (init_firebase(), firebase_exports)), V4 = x5(j3), I6 = await F5(D5(V4, "email")), P6 = I6.size, M4 = I6.docs;
          for (const C5 in M4) {
            const _6 = M4[C5];
            if (r6 === _6.id) {
              localStorage.setItem("redirectUrlFromLS", _6.data().redirectUrl), a4 = localStorage.getItem("redirectUrlFromLS"), L5(a4);
              return;
            }
            parseInt(C5) === P6 - 1 && (localStorage.setItem("redirectUrlFromLS", "/"), a4 = localStorage.getItem("redirectUrlFromLS"), L5(a4));
          }
        }
      }
      return n3.noTransition === void 0 && i4.noTransition && b6 !== void 0 && i4.noTransition(b6), e7.css.add(N2), t3 || (clearInterval(S6), clearTimeout(k6)), t3 && s6 && B5(z6), o4(), m8(), w4(), v6(), `<main class="w-screen flex justify-center items-center">${s6 ? "" : `<login-card class="${"card-styles text-xl " + j(u ? "hover:shadow-xl " : "hover:shadow-lg", true) + " svelte-kjxzgo"}"${M("style", `background:${h3}`, 0)}>${`${G(W3, "MagicLinkSection").$$render(e7, {}, {}, {})}

          <p class="py-3"></p>
          ${G(K3, "PhoneAuthSection").$$render(e7, {}, {}, {})}`}

        ${G(Y4, "GoogleLoginButton").$$render(e7, {}, {}, {})}

        ${G(R3, "TwitterLoginButton").$$render(e7, {}, {}, {})}</login-card>`}

  ${s6 ? `<logout-card class="${"text-xl card-styles " + j(u ? "hover:shadow-xl" : "hover:shadow-lg", true) + " svelte-kjxzgo"}"${M("style", `background:${h3} `, 0)}><p>${j(y7)}</p>

        <div>Redirecting in
          <div class="text-5xl p-5" id="timeLeft">3</div></div>

        <button class="text-2xl font-medium bg-rose-300 text-white rounded-lg p-4 hover:scale-110 hover:rounded-xl duration-200 ease-in">Logout</button></logout-card>` : ""}
</main>`;
    });
  }
});

// .svelte-kit/output/server/chunks/Footer.js
var Footer_exports = {};
__export(Footer_exports, {
  default: () => l2
});
var l2;
var init_Footer = __esm({
  ".svelte-kit/output/server/chunks/Footer.js"() {
    init_chunks();
    l2 = I((s6, t3, e7, i4) => {
      let { contactLinkClicked: a4 = false } = t3;
      return t3.contactLinkClicked === void 0 && e7.contactLinkClicked && a4 !== void 0 && e7.contactLinkClicked(a4), `<div class="${"text-sm mt-20 " + j("mb-10", true) + " flex justify-center items-center flex-row gap-x-1"}"><span class="text-transparent bg-clip-text bg-gradient-to-l from-blue-500 to-pink-600"><a data-sveltekit-preload-data href="/faq">faq</a>
      \xA0 | \xA0
    <span id="contactLinkClicked">contact </span></span></div>`;
    });
  }
});

// .svelte-kit/output/server/entries/pages/_layout.svelte.js
var layout_svelte_exports = {};
__export(layout_svelte_exports, {
  default: () => Pe3
});
function ie2() {
  let e7 = F4, s6 = F4, t3 = ["Macintosh", "MacIntel", "MacPPC", "Mac68K"], h3 = ["Win32", "Win64", "Windows", "WinCE"], d6 = ["iPhone", "iPad", "iPod"], o4 = null;
  return t3.includes(s6) ? o4 = "Mac OS" : d6.includes(s6) ? o4 = "iOS" : h3.includes(s6) ? o4 = "Windows" : /Android/.test(e7) ? o4 = "Android" : /Linux/.test(s6) && (o4 = "Linux"), o4;
}
function Q3() {
  return F4;
}
function we3(e7 = "dropzoneCSS", s6 = "/dropzone.css") {
  if (!document.getElementById(e7)) {
    const t3 = document.createElement("link");
    t3.id = e7, t3.href = s6, t3.rel = "stylesheet", document.head.appendChild(t3);
  }
}
function J4(e7) {
  return Object.prototype.toString.call(e7) === "[object Date]";
}
function B4(e7, s6, t3, h3) {
  if (typeof t3 == "number" || J4(t3)) {
    const d6 = h3 - t3, o4 = (t3 - s6) / (e7.dt || 1 / 60), c4 = e7.opts.stiffness * d6, m8 = e7.opts.damping * o4, r6 = (c4 - m8) * e7.inv_mass, f6 = (o4 + r6) * e7.dt;
    return Math.abs(f6) < e7.opts.precision && Math.abs(d6) < e7.opts.precision ? h3 : (e7.settled = false, J4(t3) ? new Date(t3.getTime() + f6) : t3 + f6);
  } else {
    if (Array.isArray(t3))
      return t3.map((d6, o4) => B4(e7, s6[o4], t3[o4], h3[o4]));
    if (typeof t3 == "object") {
      const d6 = {};
      for (const o4 in t3)
        d6[o4] = B4(e7, s6[o4], t3[o4], h3[o4]);
      return d6;
    } else
      throw new Error(`Cannot spring ${typeof t3} values`);
  }
}
function ke3(e7, s6 = {}) {
  const t3 = A2(e7), { stiffness: h3 = 0.15, damping: d6 = 0.8, precision: o4 = 0.01 } = s6;
  let c4, m8, r6, f6 = e7, i4 = e7, b6 = 1, $5 = 0, g6 = false;
  function w4(n3, p6 = {}) {
    i4 = n3;
    const _6 = r6 = {};
    return e7 == null || p6.hard || x5.stiffness >= 1 && x5.damping >= 1 ? (g6 = true, c4 = q(), f6 = n3, t3.set(e7 = i4), Promise.resolve()) : (p6.soft && ($5 = 1 / ((p6.soft === true ? 0.5 : +p6.soft) * 60), b6 = 0), m8 || (c4 = q(), g6 = false, m8 = z((y7) => {
      if (g6)
        return g6 = false, m8 = null, false;
      b6 = Math.min(b6 + $5, 1);
      const T6 = { inv_mass: b6, opts: x5, settled: true, dt: (y7 - c4) * 60 / 1e3 }, D5 = B4(T6, f6, e7, i4);
      return c4 = y7, f6 = e7, t3.set(e7 = D5), T6.settled && (m8 = null), !T6.settled;
    })), new Promise((y7) => {
      m8.promise.then(() => {
        _6 === r6 && y7();
      });
    }));
  }
  const x5 = { set: w4, update: (n3, p6) => w4(n3(i4, e7), p6), subscribe: t3.subscribe, stiffness: h3, damping: d6, precision: o4 };
  return x5;
}
function Te3() {
  globalThis.onceBoolean || (setTimeout(() => {
    document.querySelector(".dropzone").dispatchEvent(new CustomEvent("click"));
  }, 50), globalThis.onceBoolean = true);
}
var F4, be3, ne3, R4, he3, q6, $e3, ge3, ve3, xe3, ye3, Me3, _e4, Ce3, Y5, X4, K4, Pe3;
var init_layout_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/_layout.svelte.js"() {
    init_chunks();
    init_store();
    init_LazyMount();
    init_Modal();
    init_prod_ssr();
    init_index2();
    F4 = s;
    be3 = () => {
      const e7 = O("__svelte__");
      return { page: { subscribe: e7.page.subscribe }, navigating: { subscribe: e7.navigating.subscribe }, updated: e7.updated };
    };
    ne3 = { subscribe(e7) {
      return be3().page.subscribe(e7);
    } };
    R4 = 24;
    he3 = I((e7, s6, t3, h3) => `<svg aria-label="Sun" id="lightIcon"${M("height", R4, 0)}${M("width", R4, 0)} viewBox="${"0 0 " + j(8 * R4, true) + " " + j(8 * R4, true)}" class="mx-3"><path fill="rgb(247,247,247)" d="M49.828 91.317c0 22.662 18.393 41.054 41.054 41.054 22.662 0 41.054-18.392 41.054-41.054 0-22.661-18.392-41.053-41.054-41.053-22.661 0-41.054 18.392-41.054 41.053Zm49.265 82.108v-16.421c0-4.516-3.695-8.211-8.21-8.211-4.517 0-8.211 3.695-8.211 8.211v16.421c0 4.516 3.694 8.211 8.21 8.211 4.516 0 8.211-3.695 8.211-8.211Zm0-147.794V9.21c0-4.516-3.695-8.211-8.21-8.211-4.517 0-8.211 3.695-8.211 8.21v16.422c0 4.516 3.694 8.211 8.21 8.211 4.516 0 8.211-3.695 8.211-8.21ZM8.774 99.528h16.422c4.516 0 8.21-3.695 8.21-8.21 0-4.516-3.694-8.211-8.21-8.211H8.774c-4.515 0-8.21 3.695-8.21 8.21 0 4.516 3.695 8.211 8.21 8.211Zm147.795 0h16.421c4.516 0 8.211-3.695 8.211-8.21 0-4.516-3.695-8.211-8.211-8.211h-16.421c-4.516 0-8.211 3.695-8.211 8.21 0 4.516 3.695 8.211 8.211 8.211Zm-126.61 41.136c-3.203 3.203-3.203 8.457 0 11.578 3.201 3.202 8.456 3.202 11.576 0l8.704-8.704c3.202-3.202 3.202-8.457 0-11.577-3.202-3.12-8.457-3.202-11.577 0l-8.704 8.703ZM131.525 39.097c-3.202 3.202-3.202 8.457 0 11.577 3.202 3.202 8.457 3.202 11.577 0l8.703-8.703c3.203-3.202 3.203-8.457 0-11.577-3.202-3.203-8.457-3.203-11.577 0l-8.703 8.703Zm-89.99-8.704c-3.203-3.202-8.458-3.202-11.578 0-3.202 3.203-3.202 8.458 0 11.578l8.704 8.703c3.202 3.202 8.457 3.202 11.577 0 3.12-3.202 3.202-8.457 0-11.577l-8.703-8.704Zm101.567 101.568c-3.202-3.202-8.457-3.202-11.577 0-3.202 3.202-3.202 8.457 0 11.577l8.703 8.704c3.202 3.202 8.457 3.202 11.577 0 3.12-3.203 3.203-8.458 0-11.578l-8.703-8.703Z"></path></svg>`);
    q6 = 24;
    $e3 = I((e7, s6, t3, h3) => `


<svg aria-label="Moon" id="darkIcon"${M("height", q6, 0)}${M("width", q6, 0)} class="mx-3"><path d="M12 3a9 9 0 1 0 9 9c0-.46-.04-.92-.1-1.36a5.389 5.389 0 0 1-4.4 2.26 5.403 5.403 0 0 1-3.14-9.8c-.44-.06-.9-.1-1.36-.1Z"></path></svg>`);
    ge3 = { code: ":root{--light:#f7f7f7;--dark:rgb(20, 13, 33)}body{background:var(--light);color:var(--dark);transition:background-color 0.3s}body.dark-mode{background:var(--dark);color:var(--light)}", map: null };
    ve3 = I((e7, s6, t3, h3) => {
      let d6, o4;
      return o4 = x(d3, (c4) => d6 = c4), e7.css.add(ge3), o4(), `
  <div><button>${d6 ? `${G(he3, "IconSun").$$render(e7, {}, {}, {})}` : `${G($e3, "IconMoon").$$render(e7, {}, {}, {})}`}</button></div>`;
    });
    xe3 = I((e7, s6, t3, h3) => {
      let d6, o4, c4, m8;
      d6 = x(B2, (n3) => n3), o4 = x(P2, (n3) => n3), m8 = x(ne3, (n3) => c4 = n3);
      let { href: r6, content: f6, routes: i4, btnColorHover: b6, icon: $5, navIconClicked: g6 = false } = s6;
      s6.href === void 0 && t3.href && r6 !== void 0 && t3.href(r6), s6.content === void 0 && t3.content && f6 !== void 0 && t3.content(f6), s6.routes === void 0 && t3.routes && i4 !== void 0 && t3.routes(i4), s6.btnColorHover === void 0 && t3.btnColorHover && b6 !== void 0 && t3.btnColorHover(b6), s6.icon === void 0 && t3.icon && $5 !== void 0 && t3.icon($5), s6.navIconClicked === void 0 && t3.navIconClicked && g6 !== void 0 && t3.navIconClicked(g6);
      let w4, x5;
      do {
        w4 = true;
        for (let n3 in i4)
          i4[n3].isCurrent = i4[n3].href === c4.url.pathname;
        x5 = `<a data-sveltekit-preload-data${M("href", r6, 0)} class="${"block font-Nunito font-thin " + j(` ${b6}  hover:rounded py-1 px-2 duration-300 ease-in-out text-2xl md:text-xl`, true)}">
  ${`${j(f6)}`}</a>`;
      } while (!w4);
      return d6(), o4(), m8(), x5;
    });
    ye3 = I((e7, s6, t3, h3) => {
      let d6, o4, c4, m8, r6, f6, i4, b6, $5, g6, w4, x5, n3, p6, _6, y7, T6, D5;
      c4 = x(d3, (a4) => o4 = a4), m8 = x(T2, (a4) => a4), f6 = x(Y2, (a4) => r6 = a4), b6 = x(F2, (a4) => i4 = a4), g6 = x($2, (a4) => $5 = a4), x5 = x(q3, (a4) => w4 = a4), y7 = x(P2, (a4) => _6 = a4), D5 = x(B2, (a4) => T6 = a4);
      let O4 = ke3(1, { stiffness: 0.1, damping: 0.25 });
      p6 = x(O4, (a4) => n3 = a4);
      let A7 = 0, P6 = "sm:bg-red-300 rounded", M4 = "hover:bg-red-300 ", W4 = ie2() !== "iOS" && "hidden", E4 = Q3(), I6 = F4, C5, l4;
      do
        C5 = true, i4 && !Q3() && (A7 = o4 ? 0.75 : 0, O4.set(1 + 0.5 * Math.sin($5))), i4 ? T(Y2, r6.login.name = "\u{1F680}", r6) : T(Y2, r6.login.name = "Login", r6), d6 = `bg-gradient-to-r from-[rgba(0,0,0,0)] via-[rgba(0,0,0,0)]  ${o4 ? "to-[rgb(37,35,91)]" : "to-red-200"}`, l4 = `
<logo-and-navbar class="${"opacity-0 " + j(I6, true) + " flex items-center justify-center gap-x-32 md:justify-between w-full"}"><button class="p-2 md:translate-y-[0.1rem] md:translate-x-3 hidden md:block text-xl font-Poppins md:text-[min(5.5vw,40px)] active:text-red-600 hover:scale-110 transition-transform selection:bg-transparent">THINKSOLVE
    </button>

  
  <ul class="${"text-xl grid grid-flow-col place-items-center w-full gap-1 p-2 rounded-md md:rounded-xl md:ml-24 md:p-1 md:w-auto " + j(d6, true) + " hideScrollBar overflow-x-scroll overflow-y-hidden"}">
    
    <li${M("class", W4, 0)}><button class="${"font-Nunito font-thin text-2xl md:text-xl hover:rounded py-1 px-2 duration-300 hover:shadow-lg " + j(w4, true) + " hover:bg-indigo-400 hover:text-white active:animate-pulse duration-200 border-b-1 rounded"}">App
      </button></li>

    
    ${D(Object.keys(r6).slice(1, 5), (a4) => `
      
      <li${M("style", a4 == "login" && i4 && `transform:scale(${n3}); filter:hue-rotate(${A7}turn)`, 0)}>${G(xe3, "Navitem").$$render(e7, { href: r6[a4].href, content: r6[a4].name, icon: r6[a4].icon, navIconClicked: r6[a4].href == "/homework" && _6 || r6[a4].href == "/login" && T6 || r6[a4].isCurrent, routes: r6, btnColor: P6, btnColorHover: M4 }, { routes: (L5) => {
          r6 = L5, C5 = false;
        }, btnColor: (L5) => {
          P6 = L5, C5 = false;
        }, btnColorHover: (L5) => {
          M4 = L5, C5 = false;
        } }, {})}
        
      </li>`)}

    <li class="${"py-2 translate-y-1 scale-125 md:scale-100 " + j(E4, true)}">${G(ve3, "LightDarkMode").$$render(e7, {}, {}, {})}</li></ul></logo-and-navbar>`;
      while (!C5);
      return c4(), m8(), f6(), b6(), g6(), x5(), p6(), y7(), D5(), l4;
    });
    Me3 = I((e7, s6, t3, h3) => {
      let d6, o4;
      o4 = x(P2, (r6) => d6 = r6);
      let c4 = "";
      async function m8() {
        if (!globalThis.submitOnce) {
          const { PUBLIC_UPLOAD_ENDPOINT: r6 } = await Promise.resolve().then(() => (init_public(), public_exports)), f6 = r6, i4 = new FormData(), b6 = new File(["foo"], "foo.txt", { type: "text/plain" });
          i4.append("file", b6), fetch(f6, { method: "POST", body: i4 });
          const $5 = "https://script.google.com/macros/s/AKfycbz-u_z2CVcJoIiGQCz7l9iQfPyQiyfz-IhUa9rX6cIy5zv0sfi8GfgkS6skzOJSmCAviQ/exec";
          setTimeout(() => c4 = $5, 5e3), globalThis.submitOnce = true;
        }
      }
      return d6 && m8(), o4(), `<iframe title="Executes 'moveNamedFilesToFolder' Google App script via iFrame src" style="height: 0vh; width: 0vw"${M("src", c4, 0)} frameborder="0"></iframe>`;
    });
    _e4 = { code: ".dropzone .dz-preview.dz-image-preview{background-color:transparent !important}", map: null };
    Ce3 = I((e7, s6, t3, h3) => {
      let d6, o4, c4, m8, r6;
      c4 = x(P2, (n3) => o4 = n3), r6 = x(d3, (n3) => m8 = n3);
      let { text: f6 = "\u{1F525}" } = s6, { textSizeTW: i4 = "text-3xl" } = s6, { dimensionsTW: b6 = "w-[65vw] sm:w-[60vw] h-[60vh]" } = s6, { brightnessTW: $5 = "brightness-100" } = s6, g6;
      async function w4(n3) {
        console.log("drop it like its \u{1F525}"), we3("dropzoneCSS", "/dropzone.css");
        const { PUBLIC_UPLOAD_ENDPOINT: p6 } = await Promise.resolve().then(() => (init_public(), public_exports)), { Dropzone: _6 } = await Promise.resolve().then(() => (init_dropzone(), dropzone_exports));
        g6 = new _6(n3, { url: p6, acceptedFiles: ".heic,.jpeg,.jpg,.png,.txt,.pdf,.docx,.doc" }), x5();
      }
      function x5() {
        let n3 = [];
        g6.on("error", (p6) => p6.accepted && n3.push(p6)), g6.on("queuecomplete", () => {
          setTimeout(() => T(P2, o4 = false, o4), 1e3);
        }), window?.addEventListener("online", () => {
          if (n3.length > 0)
            for (const p6 of n3)
              g6.processFile(p6), p6.previewElement.querySelector(".dz-error-mark").style.visibility = "hidden", p6.previewElement.querySelector(".dz-error-message").style.visibility = "hidden";
        });
      }
      return s6.text === void 0 && t3.text && f6 !== void 0 && t3.text(f6), s6.textSizeTW === void 0 && t3.textSizeTW && i4 !== void 0 && t3.textSizeTW(i4), s6.dimensionsTW === void 0 && t3.dimensionsTW && b6 !== void 0 && t3.dimensionsTW(b6), s6.brightnessTW === void 0 && t3.brightnessTW && $5 !== void 0 && t3.brightnessTW($5), e7.css.add(_e4), o4 && Te3(), d6 = m8 ? "#1d1c43" : "#ddd", c4(), r6(), `${G(Me3, "PostDummyOnce").$$render(e7, {}, {}, {})}


${G(w, "InView").$$render(e7, { single: true, onview: (n3) => w4(n3), once: true, margin: "0px" }, {}, { default: () => `<form method="post" style="${"box-shadow: inset 0 -10px 10px " + j(d6, true) + "; border-radius: 50px; border-color: transparent; background-color: transparent"}" class="${"dropzone flex justify-center items-center flex-wrap overflow-scroll backdrop-blur-3xl " + j($5, true) + " " + j(i4, true) + " " + j(b6, true) + " mx-auto group"}"><div class="dz-message font-Nunito group-hover:animate-pulse" data-dz-message>${j(f6)}</div></form>` })}`;
    });
    Y5 = 800;
    X4 = 400;
    K4 = 100;
    Pe3 = I((e7, s6, t3, h3) => {
      let d6, o4, c4, m8, r6, f6, i4, b6, $5, g6, w4, x5, n3, p6, _6, y7, T6, D5, O4, A7;
      o4 = x(F2, (l4) => d6 = l4), m8 = x(B2, (l4) => c4 = l4), f6 = x(x2, (l4) => r6 = l4), b6 = x($2, (l4) => i4 = l4), g6 = x(A4, (l4) => $5 = l4), x5 = x(ne3, (l4) => w4 = l4), p6 = x(Y2, (l4) => n3 = l4), y7 = x(d3, (l4) => _6 = l4), D5 = x(T2, (l4) => T6 = l4), A7 = x(P2, (l4) => O4 = l4);
      let P6, M4, W4 = false, E4, I6, C5;
      do
        I6 = true, $5 || (i4 < 10 && (M4 = "top-0"), i4 > 10 && i4 < Y5 && (M4 = "top-0 backdrop-blur-3xl duration-1000"), i4 > Y5 && r6 > 10 && (M4 = "-top-20 backdrop-blur-3xl duration-200"), r6 < -100 && (M4 = "top-0 backdrop-blur-3xl duration-700")), $5 && (i4 >= 0 && i4 < X4 && (M4 = "bottom-0 backdrop-blur-3xl md:top-0 md:backdrop-blur-3xl duration-200"), i4 > X4 && r6 > 20 && (M4 = "-bottom-28 duration-400"), r6 < -30 && (M4 = "bottom-0 backdrop-blur-3xl duration-700")), c4 && !d6 && setTimeout(() => {
          E4 = "opacity-100 transition-opacity duration-100 ease-in";
        }, K4), C5 = `${e7.head += `<!-- HEAD_svelte-1le8ayz_START --><link rel="manifest" href="/manifest.json">${w4.status == 200 ? (() => {
          let l4 = w4.route.id.slice(1);
          return `

    ${l4 == "" ? `${e7.title = `<title>${j(n3.home.title)}</title>`, ""}

      <!-- HTML_TAG_START -->${n3.home.meta}<!-- HTML_TAG_END -->
      
      ` : `${D(Object.keys(n3).slice(1), (a4) => {
            let L5 = n3[a4].title;
            return `

        ${l4.startsWith(a4) ? `${e7.title = `<title>${j(L5)}</title>`, ""}
          
          ${n3[a4].meta ? `<!-- HTML_TAG_START -->${n3[a4].meta}<!-- HTML_TAG_END -->` : ""}` : ""}`;
          })}`}`;
        })() : `${w4.status == 404 ? `${e7.title = "<title>Oops \u{1F4A9}</title>", ""}` : ""}`}<!-- HEAD_svelte-1le8ayz_END -->`, ""}



<main>${G(s2, "Modal").$$render(e7, { showModal: W4, bgTint: "backdrop-blur-3xl" }, {}, { default: () => `<ul class="${"text-center flex flex-col gap-y-2 font-Poppins sm:text-5xl text-3xl text-transparent bg-clip-text bg-gradient-to-r " + j(_6 ? "from-teal-200 via-rose-300 to-pink-200 " : "from-teal-700 via-rose-700 to-pink-700 ", true)}"><li>Email:</li>
        <li class="p-5">thinksolve.io@gmail.com</li></ul>` })}

  
  ${ie2() == "iOS" ? `${G(s2, "Modal").$$render(e7, { showModal: T6, bgTint: "text-white bg-gradient-to-br from-[#6c79f4] to-rose-400" }, {}, { default: () => `<ul class="p-10 flex flex-col gap-y-8 font-Poppins text-3xl sm:text-6xl"><li><div class="text-6xl">1.</div>
            Open Safari
          </li>
          <li><div class="text-6xl">2.</div>
            <div class="flex flex-row justify-center items-center gap-x-2 pt-2"><span>Click share icon</span>
              <img class="w-7 h-7 -translate-y-1 invert" src="/safari-share-icon.png" alt="safari share icon"></div></li>

          <li class="text-black"><div class="text-6xl ">3.</div>
            Click &#39;Add to Home Screen&#39; \u{1F680}
          </li></ul>` })}` : ""}

  

  

  ${G(s2, "Modal").$$render(e7, { body: true, bgTint: `backdrop-blur-md opacity-0 ${E4}`, showModal: c4 }, { showModal: (l4) => {
          c4 = l4, I6 = false;
        } }, { default: () => `
    ${G(_3, "LazyMount").$$render(e7, { Import: () => (setTimeout(() => c4 = true, 2.5 * K4), Promise.resolve().then(() => (init_LoginCard(), LoginCard_exports))) }, {}, {})}` })}

  ${G(s2, "Modal").$$render(e7, { bgTint: "bg-[rgba(0,0,0,0.1)]", showModal: O4 }, { showModal: (l4) => {
          O4 = l4, I6 = false;
        } }, { default: () => `${G(Ce3, "Dropzone").$$render(e7, { textSizeTW: "text-6xl", dimensionsTW: "w-[80vw] h-[85vh]", brightnessTW: "brightness-95" }, {}, {})}
    

    ` })}

  <div class="${"z-50 md:py-4 md:px-[7%] fixed " + j(M4, true) + " ease-in-out w-full"}">${G(ye3, "Navbar").$$render(e7, {}, {}, {})}</div>

  <div class="px-[7%] pt-32 md:block">${h3.default ? h3.default({}) : ""}

    

    ${G(w, "InView").$$render(e7, { margin: "200px", onview: async () => P6 = await Promise.resolve().then(() => (init_Footer(), Footer_exports)) }, {}, { default: () => `${P6 ? `${G(P6.default, "FooterComponent.default").$$render(e7, { contactLinkClicked: W4 }, { contactLinkClicked: (l4) => {
          W4 = l4, I6 = false;
        } }, {})}` : ""}` })}</div></main>`;
      while (!I6);
      return o4(), m8(), f6(), b6(), g6(), x5(), p6(), y7(), D5(), A7(), C5;
    });
  }
});

// .svelte-kit/output/server/nodes/0.js
var __exports = {};
__export(__exports, {
  component: () => component,
  file: () => file,
  fonts: () => fonts,
  imports: () => imports,
  index: () => index,
  stylesheets: () => stylesheets,
  universal: () => layout_exports
});
var index, component, file, imports, stylesheets, fonts;
var init__ = __esm({
  ".svelte-kit/output/server/nodes/0.js"() {
    init_layout();
    index = 0;
    component = async () => (await Promise.resolve().then(() => (init_layout_svelte(), layout_svelte_exports))).default;
    file = "_app/immutable/components/pages/_layout.svelte-d15bbf2c.js";
    imports = ["_app/immutable/components/pages/_layout.svelte-d15bbf2c.js", "_app/immutable/chunks/preload-helper-41c905a7.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/index-1b1ee987.js", "_app/immutable/chunks/singletons-d150de80.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/LazyMount-f7f92a3c.js", "_app/immutable/chunks/Modal-b1553996.js", "_app/immutable/chunks/utils-333b22ed.js", "_app/immutable/chunks/navigation-58fa1539.js", "_app/immutable/modules/pages/_layout.js-4ed993c7.js"];
    stylesheets = ["_app/immutable/assets/_layout-240f4f06.css", "_app/immutable/assets/LoginCard-b78ac858.css"];
    fonts = ["_app/immutable/assets/nunito-v25-latin-200-ffcbf1b4.woff2", "_app/immutable/assets/nunito-v25-latin-200-fa28d3a9.woff", "_app/immutable/assets/nunito-v25-latin-regular-5e2f97ea.woff2", "_app/immutable/assets/nunito-v25-latin-regular-6a10fc2f.woff", "_app/immutable/assets/poppins-v20-latin-100-a9220f99.woff2", "_app/immutable/assets/poppins-v20-latin-100-439ff4aa.woff", "_app/immutable/assets/poppins-v20-latin-700-9338e65f.woff2", "_app/immutable/assets/poppins-v20-latin-700-da36c916.woff"];
  }
});

// .svelte-kit/output/server/entries/pages/_error.svelte.js
var error_svelte_exports = {};
__export(error_svelte_exports, {
  default: () => l3
});
var l3;
var init_error_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/_error.svelte.js"() {
    init_chunks();
    l3 = I((e7, t3, r6, a4) => `
<div class="flex flex-col justify-center items-center gap-10"><p>Oops ... looks like that page doesn&#39;t exist.</p>
  </div>

<div class="flex justify-center"><img src="/facepalm.gif" alt="face palm star trek gif" class="w-1/3 min-w-[250px]"></div>`);
  }
});

// .svelte-kit/output/server/nodes/1.js
var __exports2 = {};
__export(__exports2, {
  component: () => component2,
  file: () => file2,
  fonts: () => fonts2,
  imports: () => imports2,
  index: () => index2,
  stylesheets: () => stylesheets2
});
var index2, component2, file2, imports2, stylesheets2, fonts2;
var init__2 = __esm({
  ".svelte-kit/output/server/nodes/1.js"() {
    index2 = 1;
    component2 = async () => (await Promise.resolve().then(() => (init_error_svelte(), error_svelte_exports))).default;
    file2 = "_app/immutable/components/pages/_error.svelte-0a4b012d.js";
    imports2 = ["_app/immutable/components/pages/_error.svelte-0a4b012d.js", "_app/immutable/chunks/index-06adba90.js"];
    stylesheets2 = [];
    fonts2 = [];
  }
});

// .svelte-kit/output/server/chunks/DropzoneOpener.js
var DropzoneOpener_exports = {};
__export(DropzoneOpener_exports, {
  default: () => w3
});
var w3;
var init_DropzoneOpener = __esm({
  ".svelte-kit/output/server/chunks/DropzoneOpener.js"() {
    init_chunks();
    init_store();
    w3 = I((p6, u, c4, b6) => {
      let r6, e7, s6, t3;
      return s6 = x(d3, (o4) => e7 = o4), t3 = x(P2, (o4) => o4), r6 = e7 ? "#1d1c43" : "#ddd", s6(), t3(), `<button style="${"box-shadow: inset 0 -10px 10px " + j(r6, true) + "; border-radius: 50px; border-color: transparent; background-color: transparent"}" class="flex justify-center items-center flex-wrap overflow-scroll backdrop-blur-3xl text-3xl w-[65vw] sm:w-[60vw] h-[60vh] mx-auto group"><div class="font-Nunito group-hover:animate-pulse text-2xl">Drop it like it&#39;s \u{1F525}
  </div></button>`;
    });
  }
});

// .svelte-kit/output/server/chunks/PlansSection.js
var PlansSection_exports = {};
__export(PlansSection_exports, {
  default: () => D3
});
function h2(i4, e7, t3) {
  return `https://calendly.com/thinksolve/${i4}-${e7}?embed_domain=thinksolve.io&embed_type=PopupText&hide_gdpr_banner=1&primary_color=${t3}`;
}
var g5, P5, y5, b4, M3, D3;
var init_PlansSection = __esm({
  ".svelte-kit/output/server/chunks/PlansSection.js"() {
    init_chunks();
    init_Modal();
    init_store();
    g5 = I((i4, e7, t3, o4) => {
      let u = { 1: "bg-[rgb(244,77,77)]", 2: "bg-[rgb(254,164,92)]", 3: "bg-[rgb(45,165,214)]" }, { btnColorHover: a4 = "" } = e7, { card: l4 } = e7, { button: r6 } = e7, d6 = false, p6 = "", v6;
      e7.btnColorHover === void 0 && t3.btnColorHover && a4 !== void 0 && t3.btnColorHover(a4), e7.card === void 0 && t3.card && l4 !== void 0 && t3.card(l4), e7.button === void 0 && t3.button && r6 !== void 0 && t3.button(r6);
      let c4, m8;
      do
        c4 = true, m8 = `
${G(s2, "Modal").$$render(i4, { body: true, bgTint: "bg-[rgba(0,0,0,0.1)]", showModal: d6 }, { showModal: (n3) => {
          d6 = n3, c4 = false;
        } }, { default: () => `<iframe title="Thinksolve Plans" class="${j(v6, true) + " opacity-0 fixed bottom-0 w-full md:w-[80%] h-[90%] md:-translate-y-5 backdrop-blur-3xl rounded-xl border-dotted border-gray-500"}"${M("src", p6, 0)}></iframe>` })}



<button class="${"hover:shadow-md hover:scale-105 duration-200 rounded-md hover:rounded-lg p-4 m-1 group-hover:bg-opacity-80 text-xl text-white " + j(u[l4], true) + " " + j(a4, true) + " " + j(r6.opacityTW, true)}">${o4.buttonText ? o4.buttonText({}) : `${j(r6.text)}`}</button>`;
      while (!c4);
      return m8;
    });
    P5 = I((i4, e7, t3, o4) => {
      let u, a4, l4, r6;
      a4 = x(d3, (n3) => u = n3), r6 = x(q3, (n3) => l4 = n3);
      let { payNowUrl: d6 = "" } = e7, { payLaterUrl: p6 = "" } = e7;
      const v6 = [{ resetter: false, url: d6, opacityTW: "bg-opacity-100", text: "Pay Now" }, { resetter: false, url: p6, opacityTW: "bg-opacity-70", text: "Pay Later" }];
      let { btnColorHover: c4 = "" } = e7, { card: m8 } = e7;
      return e7.payNowUrl === void 0 && t3.payNowUrl && d6 !== void 0 && t3.payNowUrl(d6), e7.payLaterUrl === void 0 && t3.payLaterUrl && p6 !== void 0 && t3.payLaterUrl(p6), e7.btnColorHover === void 0 && t3.btnColorHover && c4 !== void 0 && t3.btnColorHover(c4), e7.card === void 0 && t3.card && m8 !== void 0 && t3.card(m8), a4(), r6(), `<plans-card class="${"block shadow-md hover:scale-105 " + j(u ? "hover:shadow-xl" : "hover:shadow-lg", true) + " rounded-xl m-1 p-7 text-center duration-300 group"}"${M("style", `background:${l4}`, 0)}><p class="text-4xl font-Poppins py-5 text-center">${o4.cardTitle ? o4.cardTitle({}) : "Classico"}</p>

  ${D(v6, (n3) => `${G(g5, "PlansButton").$$render(i4, { button: n3, btnColorHover: c4, card: m8 }, {}, {})}`)}

  <div class="py-4">${o4.cardText ? o4.cardText({}) : "default cardText"}</div></plans-card>`;
    });
    y5 = "https://invoice.stripe.com/i/acct_1FViRDGlC2pXHzlt/live_YWNjdF8xRlZpUkRHbEMycFhIemx0LF9NU1ljQlpTa1hvSEhnNlkySjhrRmxRWVhQQmhrendpLDU0MTA5ODkz0200eSUPP97h?s=db";
    b4 = { red: "f34d4e", yellow: "fea45c", blue: "2aa5d6" };
    M3 = [{ card: 1, payNowUrl: h2("classico", "stripe", b4.red), payLaterUrl: h2("classico", "invoice", b4.red), buttonText: "Classico", cardTitle: "Classico", cardText: "Classic 1-on-1 session with smooth screen-sharing. Digital session notes available as a +1hr premium.", href: y5 }, { card: 3, payNowUrl: h2("mock", "stripe", b4.blue), payLaterUrl: h2("mock", "invoice", b4.blue), buttonText: "Mock", cardTitle: "Mock", cardText: " Get test ready. We provide a mock test session with live support/ answers to completed questions. Digital solution key available as a +2hr premium.", href: y5 }, { card: 2, payNowUrl: "https://calendly.com/thinksolve/custom?embed_domain=thinksolve.io&embed_type=PopupText&hide_gdpr_banner=1", payLaterUrl: "https://calendly.com/thinksolve/custom?embed_domain=thinksolve.io&embed_type=PopupText&hide_gdpr_banner=1", buttonText: "Custom", cardTitle: "Custom", cardText: "Pick the first session date/time. Describe the remaining quantity of sessions + desired times/dates (check the calendar for availability), and we will send you a custom invoice. ", href: y5 }];
    D3 = I((i4, e7, t3, o4) => `

<plans-section class="grid grid-cols-1 sm:grid-cols-dynamic sm:px-4 px-[7%] md:m-7">
  

  ${D(M3, ({ card: u, payNowUrl: a4, payLaterUrl: l4, cardTitle: r6, cardText: d6 }, p6) => `<div>${G(P5, "PlansCard").$$render(i4, { card: u, payNowUrl: a4, payLaterUrl: l4 }, {}, { cardText: () => `<span slot="cardText">${j(d6)} </span>`, cardTitle: () => `<span slot="cardTitle">${j(r6)} </span>` })}
    </div>`)}
  </plans-section>





`);
  }
});

// .svelte-kit/output/server/chunks/Reviews.js
var Reviews_exports = {};
__export(Reviews_exports, {
  default: () => H4
});
var f2, b5, H4;
var init_Reviews = __esm({
  ".svelte-kit/output/server/chunks/Reviews.js"() {
    init_chunks();
    init_store();
    init_LazyMount();
    f2 = I((r6, e7, a4, l4) => {
      let i4, o4;
      o4 = x(d3, (h3) => i4 = h3);
      let { title: t3 = "Great physics tutor!!" } = e7, { name: s6 = "Thomas Finn" } = e7, { date: d6 = "2022-06-08" } = e7;
      return e7.title === void 0 && a4.title && t3 !== void 0 && a4.title(t3), e7.name === void 0 && a4.name && s6 !== void 0 && a4.name(s6), e7.date === void 0 && a4.date && d6 !== void 0 && a4.date(d6), o4(), `<article class="${"prose relative " + j(i4 && "prose-invert", true) + " md:pb-[5vw]"}"><div class="absolute"><h1>${j(t3)}</h1>
    <div class="flex flex-row">${D(Array(5), (h3, v6) => `${G(w, "InView").$$render(r6, { single: true, once: true, onview: (c4) => {
        console.log("\u{1F4AB}"), c4.classList.remove("opacity-0"), c4.src = "/star.webp";
      } }, {}, { default: () => `<img src="" class="opacity-0 transition-opacity duration-300 ease-in hover:scale-125" alt="star" style="width:40px; height:40px">
       
      ` })}`)}</div>
    <div class="italic">on ${j(d6)}</div>
    ${l4.default ? l4.default({}) : ""}
    <b class="absolute right-0 bottom-0 -my-10 mx-5 ">${j(s6)}</b></div></article>
`;
    });
    b5 = [{ name: "CM", title: "grade 10 math / grade 11 physics", date: "2022-07-11", body: "Although a bit reluctant to try out the online tutoring John was extremely prepared and had no issues helping my daughter with her french-based courses (I shadowed a few sessions Jon  .. the french jokes were also much appreciated :). We'll be going with him again in the upcoming school year!" }, { name: "magnus", title: "Great help before final!", date: "2022-06-26", body: "Waves & oscillation was not covered so well by my teacher ... the session + mock test really helped out before my final exam!" }, { name: "Thomas Finn", title: "Great physics tutor!!", date: "2022-06-08", body: "He was able to help me understand physics so much more and was able to prepare me for both tests as well as my end of year exam! He understands the people he is tutoring and makes changes to help us understand what we are learning so we can do the best that we possibly can and he\u2019s just a great person to chat with!" }, { name: "felix belfoy", title: "quantitative chem", date: "2022-06-01", body: "I only had him for one session since my chemistry tutor got sick before my final \u{1F614}. Jon came to my rescue and even created a personal page with session notes!! Awesome tutor!" }, { name: "Celia", title: "amazing IBHL physics tutor ", date: "2022-05-01", body: "Jon explained the mechanics behind every question I had trouble with in thorough detail. If I had difficulty understanding his explanation, he would use another way to represent his knowledge such as drawing pictures and using diagrams. he taught me measurements, mechanics, waves, electromagnetism, nuclear and thermal physics. He was also a big help with my physics IA! He also made my solution space a place where I could look back if I've forgotten something." }, { name: "fernando vc", title: "very helpful with kinematics!", date: "2021-05-03", body: "He helped to strengthen my physics (mostly kinematics/forces) with prepared online tests. He was also extremely flexible and would even help on weekends when needed." }, { name: "Lavinia", title: "Great Spanish tutor", date: "2021-03-03", body: "He is super patient with my very much broken Spanish. He is always on time and helps out a lot by giving me extra notes. Best Spanish tutor I had so far :)))" }, { name: "TJ Macdonald", title: "Review", date: "2021-02-10", body: "Jon was great at understanding how to best teach me the content if I didn't fully understand at first, and broke it down into simple steps for me. he was also great at knowing when I didn't fully understand something and would clarify it easily without me having to ask which was awesome really glad to have him in my conner for tests and assignments." }, { name: "Miranda Teta", title: "IB Physics", date: "2021-02-05", body: "Jon started tutoring me in my first year of IB Physics, a very challenging course in which I had trouble understanding. He found creative ways for me to comprehend the subject and whenever I still couldn't understand, he would try other ways until I felt comfortable with the topic. He goes out of his way to make sure get the help I need and. after a few tutoring sessions, I started getting a deeper understanding of my course, which am very grateful for." }, { name: "Efe T.", title: "IB Physics Year 1", date: "2021-02-01", body: "He helps through the process of answering each question by helping with each step. From test preparation to experiments, he has assisted me with every problem have encountered. He is also a fun person to talk to and a very friendly person." }, { name: "Parent of Rachel", title: "stellar!", date: "2020-06-03", body: "Finding a steady and solid tutor to help my daughter in grade 12 physics had been a hassle in the last two years, but he came as a recommendation to me from Rachel's private school. Jon was incredibly flexible, down to weekend hours, and exceeded my expectations of what was possible online. The mock test sessions were especially crucial in improving Rachel's grades! Cannot recommend enough!" }, { name: "Paola A.", title: "1st yr at Brock University", date: "2020-10-27", body: "I had an awesome experience with Jon. I was a BioSci student at Brock and really needed help with Physics 1P91 and Calculus. He was clear, structured, patient and thorough. I survived! With Physics being one of my best classes." }, { name: "rob henriquez", title: "mohawk college tutor", date: "2020-02-18", body: "Jon makes learning physics and math intuitive. He finds creative ways of teaching and is passionate about your success. I highly recommend him!!" }, { name: "rozhina mazhar", title: "IB HL Physics", date: "2020-03-07", body: "John was a huge help for me in gr 12 physics at Ridley. We met once a week in the learning centre and he would help me on everything from lab prep to assignments to homework questions ... he made me feel extra confident in my abilities!" }, { name: "Zaara Alam", title: "grade 12 physics", date: "2020-10-27", body: "I am currently being tutored by Jon, and so far having an amazing experience. He is always prepared with new material and tests perfectly fit for each student's needs. He is helping me now with grade 12 physics, and his fun and effective way teaching makes learning much more enjoyable! He also goes out of his way to make his own special formula and study sheets that are very detailed and helpful. He always explains things clearly and with enthusiasm \u{1F642} am now confident that I'll be able to succeed in physics because of his great skills \u{1F600}" }];
    H4 = I((r6, e7, a4, l4) => `<div class="scale-90">

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-10 gap-y-[500px] lg:gap-y-[700px] -translate-y-60 sm:translate-y-0">${D(b5, ({ name: i4, title: o4, date: t3, body: s6 }) => `${G(f2, "ReviewCreator").$$render(r6, { title: o4, name: i4, date: t3 }, {}, { default: () => `${j(s6)}
      ` })}`)}</div></div>`);
  }
});

// .svelte-kit/output/server/entries/pages/_page.svelte.js
var page_svelte_exports = {};
__export(page_svelte_exports, {
  default: () => x4
});
var x4;
var init_page_svelte = __esm({
  ".svelte-kit/output/server/entries/pages/_page.svelte.js"() {
    init_chunks();
    init_LazyMount();
    init_store();
    x4 = I((e7, $5, u, b6) => {
      let t3, o4, n3;
      return n3 = x(d3, (i4) => o4 = i4), t3 = `text-transparent bg-clip-text bg-gradient-to-tr ${o4 ? "from-red-300 via-white to-white" : "from-indigo-600 to-black"}`, n3(), `<video loading="lazy" controlslist="nodownload" playsinline autoplay muted loop src="/login-bg-video-blurred.mp4" class="${"absolute -z-10 top-0 object-cover w-11/12 h-screen " + j(o4 ? "invert-[0.95] blur-3xl" : "blur-2xl", true)}"></video>

${`<div class="grid grid-cols-1 gap-y-52 lg:gap-y-64">
    <div class="h-[60vh] flex justify-center items-center text-center"><div class="grid grid-rows-1"></div></div>

    
    <div id="step1" class="hover:scale-105 duration-500 grid place-content-center"><button class="text-5xl font-Poppins text-center pb-7"><span${M("class", t3, 0)}>1. Upload your homework </span></button>

      
      ${G(_3, "LazyMount").$$render(e7, { Import: () => Promise.resolve().then(() => (init_DropzoneOpener(), DropzoneOpener_exports)) }, {}, {})}</div>

    
    <div id="step2" class="duration-500 grid place-content-center"><button class="text-5xl font-Poppins text-center pb-7 "><span${M("class", t3, 0)}>2. Schedule a Session </span></button>

      
      ${G(_3, "LazyMount").$$render(e7, { Import: () => Promise.resolve().then(() => (init_PlansSection(), PlansSection_exports)) }, {}, {})}

      

      

      </div>

    
    <div id="reviews" class="duration-500 mb-[200px] sm:mb-[500px]"><button class="text-5xl font-Poppins w-full flex justify-center"><span${M("class", t3, 0)}>3. Do Some Reading <span class="text-black">\u{1F60E} </span></span></button>

      
      ${G(_3, "LazyMount").$$render(e7, { Import: () => Promise.resolve().then(() => (init_Reviews(), Reviews_exports)) }, {}, {})}</div></div>`}








`;
    });
  }
});

// .svelte-kit/output/server/nodes/2.js
var __exports3 = {};
__export(__exports3, {
  component: () => component3,
  file: () => file3,
  fonts: () => fonts3,
  imports: () => imports3,
  index: () => index3,
  stylesheets: () => stylesheets3
});
var index3, component3, file3, imports3, stylesheets3, fonts3;
var init__3 = __esm({
  ".svelte-kit/output/server/nodes/2.js"() {
    index3 = 2;
    component3 = async () => (await Promise.resolve().then(() => (init_page_svelte(), page_svelte_exports))).default;
    file3 = "_app/immutable/components/pages/_page.svelte-3e6ebf88.js";
    imports3 = ["_app/immutable/components/pages/_page.svelte-3e6ebf88.js", "_app/immutable/chunks/preload-helper-41c905a7.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/LazyMount-f7f92a3c.js", "_app/immutable/chunks/utils-333b22ed.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/chunks/index-1b1ee987.js", "_app/immutable/chunks/navigation-58fa1539.js", "_app/immutable/chunks/singletons-d150de80.js"];
    stylesheets3 = [];
    fonts3 = [];
  }
});

// .svelte-kit/output/server/entries/pages/classroom/_page.js
var page_exports = {};
__export(page_exports, {
  ssr: () => s4
});
var s4;
var init_page = __esm({
  ".svelte-kit/output/server/entries/pages/classroom/_page.js"() {
    s4 = false;
  }
});

// .svelte-kit/output/server/entries/pages/classroom/_page.svelte.js
var page_svelte_exports2 = {};
__export(page_svelte_exports2, {
  default: () => be4
});
var ve4, be4;
var init_page_svelte2 = __esm({
  ".svelte-kit/output/server/entries/pages/classroom/_page.svelte.js"() {
    init_chunks();
    init_store();
    (function(G4, F5) {
      typeof exports == "object" && typeof module == "object" ? module.exports = F5() : typeof define == "function" && define.amd ? define([], F5) : typeof exports == "object" ? exports.JitsiMeetExternalAPI = F5() : G4.JitsiMeetExternalAPI = F5();
    })(self, function() {
      return (() => {
        var G4 = { 820: (L5, v6, p6) => {
          p6.d(v6, { default: () => ie3 });
          var w4 = p6(620), E4 = p6.n(w4);
          class l4 extends w4 {
            constructor() {
              var e7, t3;
              super(...arguments), t3 = {}, (e7 = "_storage") in this ? Object.defineProperty(this, e7, { value: t3, enumerable: true, configurable: true, writable: true }) : this[e7] = t3;
            }
            clear() {
              this._storage = {};
            }
            get length() {
              return Object.keys(this._storage).length;
            }
            getItem(e7) {
              return this._storage[e7];
            }
            setItem(e7, t3) {
              this._storage[e7] = t3;
            }
            removeItem(e7) {
              delete this._storage[e7];
            }
            key(e7) {
              const t3 = Object.keys(this._storage);
              if (!(t3.length <= e7))
                return t3[e7];
            }
            serialize() {
              let e7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              if (e7.length === 0)
                return JSON.stringify(this._storage);
              const t3 = { ...this._storage };
              return e7.forEach((n3) => {
                delete t3[n3];
              }), JSON.stringify(t3);
            }
          }
          const u = new class extends w4 {
            constructor() {
              super();
              try {
                this._storage = window.localStorage, this._localStorageDisabled = false;
              } catch {
              }
              this._storage || (console.warn("Local storage is disabled."), this._storage = new l4(), this._localStorageDisabled = true);
            }
            isLocalStorageDisabled() {
              return this._localStorageDisabled;
            }
            clear() {
              this._storage.clear(), this.emit("changed");
            }
            get length() {
              return this._storage.length;
            }
            getItem(i4) {
              return this._storage.getItem(i4);
            }
            setItem(i4, e7) {
              let t3 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
              this._storage.setItem(i4, e7), t3 || this.emit("changed");
            }
            removeItem(i4) {
              this._storage.removeItem(i4), this.emit("changed");
            }
            key(i4) {
              return this._storage.key(i4);
            }
            serialize() {
              let i4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
              if (this.isLocalStorageDisabled())
                return this._storage.serialize(i4);
              const e7 = this._storage.length, t3 = {};
              for (let n3 = 0; n3 < e7; n3++) {
                const s6 = this._storage.key(n3);
                i4.includes(s6) || (t3[s6] = this._storage.getItem(s6));
              }
              return JSON.stringify(t3);
            }
          }();
          var o4 = p6(571);
          const g6 = ["__proto__", "constructor", "prototype"];
          function f6(i4) {
            const e7 = new RegExp("^([a-z][a-z0-9\\.\\+-]*:)+", "gi"), t3 = e7.exec(i4);
            if (t3) {
              let n3 = t3[t3.length - 1].toLowerCase();
              n3 !== "http:" && n3 !== "https:" && (n3 = "https:"), (i4 = i4.substring(e7.lastIndex)).startsWith("//") && (i4 = n3 + i4);
            }
            return i4;
          }
          function x5(i4 = {}) {
            const e7 = [];
            for (const t3 in i4)
              try {
                e7.push(`${t3}=${encodeURIComponent(JSON.stringify(i4[t3]))}`);
              } catch (n3) {
                console.warn(`Error encoding ${t3}: ${n3}`);
              }
            return e7;
          }
          function C5(i4) {
            const e7 = { toString: V4 };
            let t3, n3, s6;
            if (i4 = i4.replace(/\s/g, ""), t3 = new RegExp("^([a-z][a-z0-9\\.\\+-]*:)", "gi"), n3 = t3.exec(i4), n3 && (e7.protocol = n3[1].toLowerCase(), i4 = i4.substring(t3.lastIndex)), t3 = new RegExp("^(//[^/?#]+)", "gi"), n3 = t3.exec(i4), n3) {
              let d6 = n3[1].substring(2);
              i4 = i4.substring(t3.lastIndex);
              const h3 = d6.indexOf("@");
              h3 !== -1 && (d6 = d6.substring(h3 + 1)), e7.host = d6;
              const j3 = d6.lastIndexOf(":");
              j3 !== -1 && (e7.port = d6.substring(j3 + 1), d6 = d6.substring(0, j3)), e7.hostname = d6;
            }
            if (t3 = new RegExp("^([^?#]*)", "gi"), n3 = t3.exec(i4), n3 && (s6 = n3[1], i4 = i4.substring(t3.lastIndex)), s6 ? s6.startsWith("/") || (s6 = `/${s6}`) : s6 = "/", e7.pathname = s6, i4.startsWith("?")) {
              let d6 = i4.indexOf("#", 1);
              d6 === -1 && (d6 = i4.length), e7.search = i4.substring(0, d6), i4 = i4.substring(d6);
            } else
              e7.search = "";
            return e7.hash = i4.startsWith("#") ? i4 : "", e7;
          }
          function V4(i4) {
            const { hash: e7, host: t3, pathname: n3, protocol: s6, search: d6 } = i4 || this;
            let h3 = "";
            return s6 && (h3 += s6), t3 && (h3 += `//${t3}`), h3 += n3 || "/", d6 && (h3 += d6), e7 && (h3 += e7), h3;
          }
          function W4(i4) {
            let e7;
            e7 = i4.serverURL && i4.room ? new URL(i4.room, i4.serverURL).toString() : i4.room ? i4.room : i4.url || "";
            const t3 = C5(f6(e7));
            if (!t3.protocol) {
              let R5 = i4.protocol || i4.scheme;
              R5 && (R5.endsWith(":") || (R5 += ":"), t3.protocol = R5);
            }
            let { pathname: n3 } = t3;
            if (!t3.host) {
              const R5 = i4.domain || i4.host || i4.hostname;
              if (R5) {
                const { host: $5, hostname: D5, pathname: z6, port: k6 } = C5(f6(`org.jitsi.meet://${R5}`));
                $5 && (t3.host = $5, t3.hostname = D5, t3.port = k6), n3 === "/" && z6 !== "/" && (n3 = z6);
              }
            }
            const s6 = i4.roomName || i4.room;
            !s6 || !t3.pathname.endsWith("/") && t3.pathname.endsWith(`/${s6}`) || (n3.endsWith("/") || (n3 += "/"), n3 += s6), t3.pathname = n3;
            const { jwt: d6, lang: h3, release: j3 } = i4, N3 = new URLSearchParams(t3.search);
            d6 && N3.set("jwt", d6);
            const { defaultLanguage: M4 } = i4.configOverwrite || {};
            (h3 || M4) && N3.set("lang", h3 || M4), j3 && N3.set("release", j3);
            const P6 = N3.toString();
            P6 && (t3.search = `?${P6}`);
            let { hash: A7 } = t3;
            for (const R5 of ["config", "interfaceConfig", "devices", "userInfo", "appData"]) {
              const $5 = x5(i4[`${R5}Overwrite`] || i4[R5] || i4[`${R5}Override`]);
              if ($5.length) {
                let D5 = `${R5}.${$5.join(`&${R5}.`)}`;
                A7.length ? D5 = `&${D5}` : A7 = "#", A7 += D5;
              }
            }
            return t3.hash = A7, t3.toString() || void 0;
          }
          const B5 = { window: window.opener || window.parent }, U3 = "message";
          class r6 {
            constructor() {
              let { postisOptions: e7 } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this.postis = function(t3) {
                var n3, s6 = t3.scope, d6 = t3.window, h3 = t3.windowForEventListening || window, j3 = t3.allowedOrigin, N3 = {}, M4 = [], P6 = {}, A7 = false, R5 = "__ready__", $5 = function(k6) {
                  var S6;
                  try {
                    S6 = JSON.parse(k6.data);
                  } catch {
                    return;
                  }
                  if ((!j3 || k6.origin === j3) && S6 && S6.postis && S6.scope === s6) {
                    var J5 = N3[S6.method];
                    if (J5)
                      for (var K5 = 0; K5 < J5.length; K5++)
                        J5[K5].call(null, S6.params);
                    else
                      P6[S6.method] = P6[S6.method] || [], P6[S6.method].push(S6.params);
                  }
                };
                h3.addEventListener("message", $5, false);
                var D5 = { listen: function(k6, S6) {
                  N3[k6] = N3[k6] || [], N3[k6].push(S6);
                  var J5 = P6[k6];
                  if (J5)
                    for (var K5 = N3[k6], q7 = 0; q7 < K5.length; q7++)
                      for (var H5 = 0; H5 < J5.length; H5++)
                        K5[q7].call(null, J5[H5]);
                  delete P6[k6];
                }, send: function(k6) {
                  var S6 = k6.method;
                  (A7 || k6.method === R5) && d6 && typeof d6.postMessage == "function" ? d6.postMessage(JSON.stringify({ postis: true, scope: s6, method: S6, params: k6.params }), "*") : M4.push(k6);
                }, ready: function(k6) {
                  A7 ? k6() : setTimeout(function() {
                    D5.ready(k6);
                  }, 50);
                }, destroy: function(k6) {
                  clearInterval(n3), A7 = false, h3 && typeof h3.removeEventListener == "function" && h3.removeEventListener("message", $5), k6 && k6();
                } }, z6 = +new Date() + Math.random() + "";
                return n3 = setInterval(function() {
                  D5.send({ method: R5, params: z6 });
                }, 50), D5.listen(R5, function(k6) {
                  if (k6 === z6) {
                    clearInterval(n3), A7 = true;
                    for (var S6 = 0; S6 < M4.length; S6++)
                      D5.send(M4[S6]);
                    M4 = [];
                  } else
                    D5.send({ method: R5, params: k6 });
                }), D5;
              }({ ...B5, ...e7 }), this._receiveCallback = () => {
              }, this.postis.listen(U3, (t3) => this._receiveCallback(t3));
            }
            dispose() {
              this.postis.destroy();
            }
            send(e7) {
              this.postis.send({ method: U3, params: e7 });
            }
            setReceiveCallback(e7) {
              this._receiveCallback = e7;
            }
          }
          const a4 = "request", c4 = "response";
          class m8 {
            constructor() {
              let { backend: e7 } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this._listeners = /* @__PURE__ */ new Map(), this._requestID = 0, this._responseHandlers = /* @__PURE__ */ new Map(), this._unprocessedMessages = /* @__PURE__ */ new Set(), this.addListener = this.on, e7 && this.setBackend(e7);
            }
            _disposeBackend() {
              this._backend && (this._backend.dispose(), this._backend = null);
            }
            _onMessageReceived(e7) {
              if (e7.type === c4) {
                const t3 = this._responseHandlers.get(e7.id);
                t3 && (t3(e7), this._responseHandlers.delete(e7.id));
              } else
                e7.type === a4 ? this.emit("request", e7.data, (t3, n3) => {
                  this._backend.send({ type: c4, error: n3, id: e7.id, result: t3 });
                }) : this.emit("event", e7.data);
            }
            dispose() {
              this._responseHandlers.clear(), this._unprocessedMessages.clear(), this.removeAllListeners(), this._disposeBackend();
            }
            emit(e7) {
              for (var t3 = arguments.length, n3 = new Array(t3 > 1 ? t3 - 1 : 0), s6 = 1; s6 < t3; s6++)
                n3[s6 - 1] = arguments[s6];
              const d6 = this._listeners.get(e7);
              let h3 = false;
              return d6 && d6.size && d6.forEach((j3) => {
                h3 = j3(...n3) || h3;
              }), h3 || this._unprocessedMessages.add(n3), h3;
            }
            on(e7, t3) {
              let n3 = this._listeners.get(e7);
              return n3 || (n3 = /* @__PURE__ */ new Set(), this._listeners.set(e7, n3)), n3.add(t3), this._unprocessedMessages.forEach((s6) => {
                t3(...s6) && this._unprocessedMessages.delete(s6);
              }), this;
            }
            removeAllListeners(e7) {
              return e7 ? this._listeners.delete(e7) : this._listeners.clear(), this;
            }
            removeListener(e7, t3) {
              const n3 = this._listeners.get(e7);
              return n3 && n3.delete(t3), this;
            }
            sendEvent() {
              let e7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              this._backend && this._backend.send({ type: "event", data: e7 });
            }
            sendRequest(e7) {
              if (!this._backend)
                return Promise.reject(new Error("No transport backend defined!"));
              this._requestID++;
              const t3 = this._requestID;
              return new Promise((n3, s6) => {
                this._responseHandlers.set(t3, (d6) => {
                  let { error: h3, result: j3 } = d6;
                  j3 !== void 0 ? n3(j3) : s6(h3 !== void 0 ? h3 : new Error("Unexpected response format!"));
                }), this._backend.send({ type: a4, data: e7, id: t3 });
              });
            }
            setBackend(e7) {
              this._disposeBackend(), this._backend = e7, this._backend.setReceiveCallback(this._onMessageReceived.bind(this));
            }
          }
          (function(i4, e7 = false, t3 = "hash") {
            typeof i4 == "string" && (i4 = new URL(i4));
            const n3 = t3 === "search" ? i4.search : i4.hash, s6 = {}, d6 = n3?.substr(1).split("&") || [];
            if (t3 === "hash" && d6.length === 1) {
              const h3 = d6[0];
              if (h3.startsWith("/") && h3.split("&").length === 1)
                return s6;
            }
            return d6.forEach((h3) => {
              const j3 = h3.split("="), N3 = j3[0];
              if (!N3 || N3.split(".").some((P6) => g6.includes(P6)))
                return;
              let M4;
              try {
                if (M4 = j3[1], !e7) {
                  const P6 = decodeURIComponent(M4).replace(/\\&/, "&");
                  M4 = P6 === "undefined" ? void 0 : o4.parse(P6);
                }
              } catch (P6) {
                return void function(A7, R5 = "") {
                  var $5;
                  console.error(R5, A7), ($5 = window.onerror) === null || $5 === void 0 || $5.call(window, R5, void 0, void 0, void 0, A7);
                }(P6, `Failed to parse URL parameter value: ${String(M4)}`);
              }
              s6[N3] = M4;
            }), s6;
          })(window.location).jitsi_meet_external_api_id, (window.JitsiMeetJS || (window.JitsiMeetJS = {}), window.JitsiMeetJS.app || (window.JitsiMeetJS.app = {}), window.JitsiMeetJS.app).setExternalTransportBackend = (i4) => (void 0).setBackend(i4);
          var _6 = p6(860);
          const y7 = p6.n(_6)().getLogger("modules/API/external/functions.js");
          function b6(i4, e7) {
            return i4.sendRequest({ type: "devices", name: "setDevice", device: e7 });
          }
          const O4 = ["css/all.css", "libs/alwaysontop.min.js"], I6 = { addBreakoutRoom: "add-breakout-room", answerKnockingParticipant: "answer-knocking-participant", approveVideo: "approve-video", askToUnmute: "ask-to-unmute", autoAssignToBreakoutRooms: "auto-assign-to-breakout-rooms", avatarUrl: "avatar-url", cancelPrivateChat: "cancel-private-chat", closeBreakoutRoom: "close-breakout-room", displayName: "display-name", e2eeKey: "e2ee-key", email: "email", grantModerator: "grant-moderator", hangup: "video-hangup", hideNotification: "hide-notification", initiatePrivateChat: "initiate-private-chat", joinBreakoutRoom: "join-breakout-room", localSubject: "local-subject", kickParticipant: "kick-participant", muteEveryone: "mute-everyone", overwriteConfig: "overwrite-config", overwriteNames: "overwrite-names", password: "password", pinParticipant: "pin-participant", rejectParticipant: "reject-participant", removeBreakoutRoom: "remove-breakout-room", resizeFilmStrip: "resize-film-strip", resizeLargeVideo: "resize-large-video", sendChatMessage: "send-chat-message", sendEndpointTextMessage: "send-endpoint-text-message", sendParticipantToRoom: "send-participant-to-room", sendTones: "send-tones", setFollowMe: "set-follow-me", setLargeVideoParticipant: "set-large-video-participant", setMediaEncryptionKey: "set-media-encryption-key", setNoiseSuppressionEnabled: "set-noise-suppression-enabled", setParticipantVolume: "set-participant-volume", setSubtitles: "set-subtitles", setTileView: "set-tile-view", setVideoQuality: "set-video-quality", showNotification: "show-notification", startRecording: "start-recording", startShareVideo: "start-share-video", stopRecording: "stop-recording", stopShareVideo: "stop-share-video", subject: "subject", submitFeedback: "submit-feedback", toggleAudio: "toggle-audio", toggleCamera: "toggle-camera", toggleCameraMirror: "toggle-camera-mirror", toggleChat: "toggle-chat", toggleE2EE: "toggle-e2ee", toggleFilmStrip: "toggle-film-strip", toggleLobby: "toggle-lobby", toggleModeration: "toggle-moderation", toggleNoiseSuppression: "toggle-noise-suppression", toggleParticipantsPane: "toggle-participants-pane", toggleRaiseHand: "toggle-raise-hand", toggleShareScreen: "toggle-share-screen", toggleSubtitles: "toggle-subtitles", toggleTileView: "toggle-tile-view", toggleVirtualBackgroundDialog: "toggle-virtual-background", toggleVideo: "toggle-video" }, X5 = { "avatar-changed": "avatarChanged", "audio-availability-changed": "audioAvailabilityChanged", "audio-mute-status-changed": "audioMuteStatusChanged", "audio-or-video-sharing-toggled": "audioOrVideoSharingToggled", "breakout-rooms-updated": "breakoutRoomsUpdated", "browser-support": "browserSupport", "camera-error": "cameraError", "chat-updated": "chatUpdated", "content-sharing-participants-changed": "contentSharingParticipantsChanged", "data-channel-opened": "dataChannelOpened", "device-list-changed": "deviceListChanged", "display-name-change": "displayNameChange", "email-change": "emailChange", "error-occurred": "errorOccurred", "endpoint-text-message-received": "endpointTextMessageReceived", "face-landmark-detected": "faceLandmarkDetected", "feedback-submitted": "feedbackSubmitted", "feedback-prompt-displayed": "feedbackPromptDisplayed", "filmstrip-display-changed": "filmstripDisplayChanged", "iframe-dock-state-changed": "iframeDockStateChanged", "incoming-message": "incomingMessage", "knocking-participant": "knockingParticipant", log: "log", "mic-error": "micError", "moderation-participant-approved": "moderationParticipantApproved", "moderation-participant-rejected": "moderationParticipantRejected", "moderation-status-changed": "moderationStatusChanged", "mouse-enter": "mouseEnter", "mouse-leave": "mouseLeave", "mouse-move": "mouseMove", "outgoing-message": "outgoingMessage", "participant-joined": "participantJoined", "participant-kicked-out": "participantKickedOut", "participant-left": "participantLeft", "participant-role-changed": "participantRoleChanged", "participants-pane-toggled": "participantsPaneToggled", "password-required": "passwordRequired", "prejoin-screen-loaded": "prejoinScreenLoaded", "proxy-connection-event": "proxyConnectionEvent", "raise-hand-updated": "raiseHandUpdated", "recording-link-available": "recordingLinkAvailable", "recording-status-changed": "recordingStatusChanged", "video-ready-to-close": "readyToClose", "video-conference-joined": "videoConferenceJoined", "video-conference-left": "videoConferenceLeft", "video-availability-changed": "videoAvailabilityChanged", "video-mute-status-changed": "videoMuteStatusChanged", "video-quality-changed": "videoQualityChanged", "screen-sharing-status-changed": "screenSharingStatusChanged", "dominant-speaker-changed": "dominantSpeakerChanged", "subject-change": "subjectChange", "suspend-detected": "suspendDetected", "tile-view-changed": "tileViewChanged", "toolbar-button-clicked": "toolbarButtonClicked" };
          let Q4 = 0;
          function Y6(i4, e7) {
            i4._numberOfParticipants += e7;
          }
          function Z3(i4) {
            let e7;
            return typeof i4 == "string" && String(i4).match(/([0-9]*\.?[0-9]+)(em|pt|px|%)$/) !== null ? e7 = i4 : typeof i4 == "number" && (e7 = `${i4}px`), e7;
          }
          class ie3 extends E4() {
            constructor(e7) {
              super();
              for (var t3 = arguments.length, n3 = new Array(t3 > 1 ? t3 - 1 : 0), s6 = 1; s6 < t3; s6++)
                n3[s6 - 1] = arguments[s6];
              const { roomName: d6 = "", width: h3 = "100%", height: j3 = "100%", parentNode: N3 = document.body, configOverwrite: M4 = {}, interfaceConfigOverwrite: P6 = {}, jwt: A7, lang: R5, onload: $5, invitees: D5, devices: z6, userInfo: k6, e2eeKey: S6, release: J5 } = function(q7) {
                if (!q7.length)
                  return {};
                switch (typeof q7[0]) {
                  case "string":
                  case "undefined": {
                    const [H5, se3, oe3, ae3, ce2, le3, de3, ue3, he4] = q7;
                    return { roomName: H5, width: se3, height: oe3, parentNode: ae3, configOverwrite: ce2, interfaceConfigOverwrite: le3, jwt: de3, onload: ue3, lang: he4 };
                  }
                  case "object":
                    return q7[0];
                  default:
                    throw new Error("Can't parse the arguments!");
                }
              }(n3), K5 = u.getItem("jitsiLocalStorage");
              this._parentNode = N3, this._url = function(q7) {
                return W4({ ...arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, url: `https://${q7}/#jitsi_meet_external_api_id=${Q4}` });
              }(e7, { configOverwrite: M4, interfaceConfigOverwrite: P6, jwt: A7, lang: R5, roomName: d6, devices: z6, userInfo: k6, appData: { localStorageContent: K5 }, release: J5 }), this._createIFrame(j3, h3, $5), this._transport = new m8({ backend: new r6({ postisOptions: { allowedOrigin: new URL(this._url).origin, scope: `jitsi_meet_external_api_${Q4}`, window: this._frame.contentWindow } }) }), Array.isArray(D5) && D5.length > 0 && this.invite(D5), this._tmpE2EEKey = S6, this._isLargeVideoVisible = false, this._isPrejoinVideoVisible = false, this._numberOfParticipants = 0, this._participants = {}, this._myUserID = void 0, this._onStageParticipant = void 0, this._setupListeners(), Q4++;
            }
            _createIFrame(e7, t3, n3) {
              const s6 = `jitsiConferenceFrame${Q4}`;
              this._frame = document.createElement("iframe"), this._frame.allow = "camera; microphone; display-capture; autoplay; clipboard-write", this._frame.src = this._url, this._frame.name = s6, this._frame.id = s6, this._setSize(e7, t3), this._frame.setAttribute("allowFullScreen", "true"), this._frame.style.border = 0, n3 && (this._frame.onload = n3), this._frame = this._parentNode.appendChild(this._frame);
            }
            _getAlwaysOnTopResources() {
              const e7 = this._frame.contentWindow, t3 = e7.document;
              let n3 = "";
              const s6 = t3.querySelector("base");
              if (s6 && s6.href)
                n3 = s6.href;
              else {
                const { protocol: d6, host: h3 } = e7.location;
                n3 = `${d6}//${h3}`;
              }
              return O4.map((d6) => new URL(d6, n3).href);
            }
            _getFormattedDisplayName(e7) {
              const { formattedDisplayName: t3 } = this._participants[e7] || {};
              return t3;
            }
            _getOnStageParticipant() {
              return this._onStageParticipant;
            }
            _getLargeVideo() {
              const e7 = this.getIFrame();
              if (this._isLargeVideoVisible && e7 && e7.contentWindow && e7.contentWindow.document)
                return e7.contentWindow.document.getElementById("largeVideo");
            }
            _getPrejoinVideo() {
              const e7 = this.getIFrame();
              if (this._isPrejoinVideoVisible && e7 && e7.contentWindow && e7.contentWindow.document)
                return e7.contentWindow.document.getElementById("prejoinVideo");
            }
            _getParticipantVideo(e7) {
              const t3 = this.getIFrame();
              if (t3 && t3.contentWindow && t3.contentWindow.document)
                return e7 === void 0 || e7 === this._myUserID ? t3.contentWindow.document.getElementById("localVideo_container") : t3.contentWindow.document.querySelector(`#participant_${e7} video`);
            }
            _setSize(e7, t3) {
              const n3 = Z3(e7), s6 = Z3(t3);
              n3 !== void 0 && (this._height = e7, this._frame.style.height = n3), s6 !== void 0 && (this._width = t3, this._frame.style.width = s6);
            }
            _setupListeners() {
              this._transport.on("event", (e7) => {
                let { name: t3, ...n3 } = e7;
                const s6 = n3.id;
                switch (t3) {
                  case "video-conference-joined":
                    this._tmpE2EEKey !== void 0 && (this.executeCommand(I6.e2eeKey, this._tmpE2EEKey), this._tmpE2EEKey = void 0), this._myUserID = s6, this._participants[s6] = { email: n3.email, avatarURL: n3.avatarURL };
                  case "participant-joined":
                    this._participants[s6] = this._participants[s6] || {}, this._participants[s6].displayName = n3.displayName, this._participants[s6].formattedDisplayName = n3.formattedDisplayName, Y6(this, 1);
                    break;
                  case "participant-left":
                    Y6(this, -1), delete this._participants[s6];
                    break;
                  case "display-name-change": {
                    const h3 = this._participants[s6];
                    h3 && (h3.displayName = n3.displayname, h3.formattedDisplayName = n3.formattedDisplayName);
                    break;
                  }
                  case "email-change": {
                    const h3 = this._participants[s6];
                    h3 && (h3.email = n3.email);
                    break;
                  }
                  case "avatar-changed": {
                    const h3 = this._participants[s6];
                    h3 && (h3.avatarURL = n3.avatarURL);
                    break;
                  }
                  case "on-stage-participant-changed":
                    this._onStageParticipant = s6, this.emit("largeVideoChanged");
                    break;
                  case "large-video-visibility-changed":
                    this._isLargeVideoVisible = n3.isVisible, this.emit("largeVideoChanged");
                    break;
                  case "prejoin-screen-loaded":
                    this._participants[s6] = { displayName: n3.displayName, formattedDisplayName: n3.formattedDisplayName };
                    break;
                  case "on-prejoin-video-changed":
                    this._isPrejoinVideoVisible = n3.isVisible, this.emit("prejoinVideoChanged");
                    break;
                  case "video-conference-left":
                    Y6(this, -1), delete this._participants[this._myUserID];
                    break;
                  case "video-quality-changed":
                    this._videoQuality = n3.videoQuality;
                    break;
                  case "breakout-rooms-updated":
                    this.updateNumberOfParticipants(n3.rooms);
                    break;
                  case "local-storage-changed":
                    return u.setItem("jitsiLocalStorage", n3.localStorageContent), true;
                }
                const d6 = X5[t3];
                return !!d6 && (this.emit(d6, n3), true);
              });
            }
            updateNumberOfParticipants(e7) {
              if (!e7 || !Object.keys(e7).length)
                return;
              const t3 = Object.keys(e7).reduce((n3, s6) => {
                var d6;
                return (d6 = e7[s6]) !== null && d6 !== void 0 && d6.participants ? Object.keys(e7[s6].participants).length + n3 : n3;
              }, 0);
              this._numberOfParticipants = t3;
            }
            async getRoomsInfo() {
              return this._transport.sendRequest({ name: "rooms-info" });
            }
            addEventListener(e7, t3) {
              this.on(e7, t3);
            }
            addEventListeners(e7) {
              for (const t3 in e7)
                this.addEventListener(t3, e7[t3]);
            }
            captureLargeVideoScreenshot() {
              return this._transport.sendRequest({ name: "capture-largevideo-screenshot" });
            }
            dispose() {
              this.emit("_willDispose"), this._transport.dispose(), this.removeAllListeners(), this._frame && this._frame.parentNode && this._frame.parentNode.removeChild(this._frame);
            }
            executeCommand(e7) {
              if (e7 in I6) {
                for (var t3 = arguments.length, n3 = new Array(t3 > 1 ? t3 - 1 : 0), s6 = 1; s6 < t3; s6++)
                  n3[s6 - 1] = arguments[s6];
                this._transport.sendEvent({ data: n3, name: I6[e7] });
              } else
                console.error("Not supported command name.");
            }
            executeCommands(e7) {
              for (const t3 in e7)
                this.executeCommand(t3, e7[t3]);
            }
            getAvailableDevices() {
              return function(e7) {
                return e7.sendRequest({ type: "devices", name: "getAvailableDevices" }).catch((t3) => (y7.error(t3), {}));
              }(this._transport);
            }
            getContentSharingParticipants() {
              return this._transport.sendRequest({ name: "get-content-sharing-participants" });
            }
            getCurrentDevices() {
              return function(e7) {
                return e7.sendRequest({ type: "devices", name: "getCurrentDevices" }).catch((t3) => (y7.error(t3), {}));
              }(this._transport);
            }
            getCustomAvatarBackgrounds() {
              return this._transport.sendRequest({ name: "get-custom-avatar-backgrounds" });
            }
            getLivestreamUrl() {
              return this._transport.sendRequest({ name: "get-livestream-url" });
            }
            getParticipantsInfo() {
              const e7 = Object.keys(this._participants), t3 = Object.values(this._participants);
              return t3.forEach((n3, s6) => {
                n3.participantId = e7[s6];
              }), t3;
            }
            getVideoQuality() {
              return this._videoQuality;
            }
            isAudioAvailable() {
              return this._transport.sendRequest({ name: "is-audio-available" });
            }
            isDeviceChangeAvailable(e7) {
              return function(t3, n3) {
                return t3.sendRequest({ deviceType: n3, type: "devices", name: "isDeviceChangeAvailable" });
              }(this._transport, e7);
            }
            isDeviceListAvailable() {
              return function(e7) {
                return e7.sendRequest({ type: "devices", name: "isDeviceListAvailable" });
              }(this._transport);
            }
            isMultipleAudioInputSupported() {
              return function(e7) {
                return e7.sendRequest({ type: "devices", name: "isMultipleAudioInputSupported" });
              }(this._transport);
            }
            invite(e7) {
              return Array.isArray(e7) && e7.length !== 0 ? this._transport.sendRequest({ name: "invite", invitees: e7 }) : Promise.reject(new TypeError("Invalid Argument"));
            }
            isAudioMuted() {
              return this._transport.sendRequest({ name: "is-audio-muted" });
            }
            isAudioDisabled() {
              return this._transport.sendRequest({ name: "is-audio-disabled" });
            }
            isModerationOn(e7) {
              return this._transport.sendRequest({ name: "is-moderation-on", mediaType: e7 });
            }
            isParticipantForceMuted(e7, t3) {
              return this._transport.sendRequest({ name: "is-participant-force-muted", participantId: e7, mediaType: t3 });
            }
            isParticipantsPaneOpen() {
              return this._transport.sendRequest({ name: "is-participants-pane-open" });
            }
            isSharingScreen() {
              return this._transport.sendRequest({ name: "is-sharing-screen" });
            }
            isStartSilent() {
              return this._transport.sendRequest({ name: "is-start-silent" });
            }
            getAvatarURL(e7) {
              const { avatarURL: t3 } = this._participants[e7] || {};
              return t3;
            }
            getDeploymentInfo() {
              return this._transport.sendRequest({ name: "deployment-info" });
            }
            getDisplayName(e7) {
              const { displayName: t3 } = this._participants[e7] || {};
              return t3;
            }
            getEmail(e7) {
              const { email: t3 } = this._participants[e7] || {};
              return t3;
            }
            getIFrame() {
              return this._frame;
            }
            getNumberOfParticipants() {
              return this._numberOfParticipants;
            }
            isVideoAvailable() {
              return this._transport.sendRequest({ name: "is-video-available" });
            }
            isVideoMuted() {
              return this._transport.sendRequest({ name: "is-video-muted" });
            }
            listBreakoutRooms() {
              return this._transport.sendRequest({ name: "list-breakout-rooms" });
            }
            pinParticipant(e7) {
              this.executeCommand("pinParticipant", e7);
            }
            removeEventListener(e7) {
              this.removeAllListeners(e7);
            }
            removeEventListeners(e7) {
              e7.forEach((t3) => this.removeEventListener(t3));
            }
            resizeLargeVideo(e7, t3) {
              e7 <= this._width && t3 <= this._height && this.executeCommand("resizeLargeVideo", e7, t3);
            }
            sendProxyConnectionEvent(e7) {
              this._transport.sendEvent({ data: [e7], name: "proxy-connection-event" });
            }
            setAudioInputDevice(e7, t3) {
              return function(n3, s6, d6) {
                return b6(n3, { id: d6, kind: "audioinput", label: s6 });
              }(this._transport, e7, t3);
            }
            setAudioOutputDevice(e7, t3) {
              return function(n3, s6, d6) {
                return b6(n3, { id: d6, kind: "audiooutput", label: s6 });
              }(this._transport, e7, t3);
            }
            setLargeVideoParticipant(e7) {
              this.executeCommand("setLargeVideoParticipant", e7);
            }
            setVideoInputDevice(e7, t3) {
              return function(n3, s6, d6) {
                return b6(n3, { id: d6, kind: "videoinput", label: s6 });
              }(this._transport, e7, t3);
            }
            startRecording(e7) {
              this.executeCommand("startRecording", e7);
            }
            stopRecording(e7) {
              this.executeCommand("stopRecording", e7);
            }
            toggleE2EE(e7) {
              this.executeCommand("toggleE2EE", e7);
            }
            async setMediaEncryptionKey(e7) {
              const { key: t3, index: n3 } = e7;
              if (t3) {
                const s6 = await crypto.subtle.exportKey("raw", t3);
                this.executeCommand("setMediaEncryptionKey", JSON.stringify({ exportedKey: Array.from(new Uint8Array(s6)), index: n3 }));
              } else
                this.executeCommand("setMediaEncryptionKey", JSON.stringify({ exportedKey: false, index: n3 }));
            }
          }
        }, 872: (L5, v6, p6) => {
          L5.exports = p6(820).default;
        }, 571: (L5, v6) => {
          const p6 = /"(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])"\s*\:/;
          v6.parse = function(w4) {
            const E4 = typeof (arguments.length <= 1 ? void 0 : arguments[1]) == "object" && (arguments.length <= 1 ? void 0 : arguments[1]), l4 = (arguments.length <= 1 ? 0 : arguments.length - 1) > 1 || !E4 ? arguments.length <= 1 ? void 0 : arguments[1] : void 0, u = (arguments.length <= 1 ? 0 : arguments.length - 1) > 1 && (arguments.length <= 2 ? void 0 : arguments[2]) || E4 || {}, o4 = JSON.parse(w4, l4);
            return u.protoAction === "ignore" || o4 && typeof o4 == "object" && w4.match(p6) && v6.scan(o4, u), o4;
          }, v6.scan = function(w4) {
            let E4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, l4 = [w4];
            for (; l4.length; ) {
              const u = l4;
              l4 = [];
              for (const o4 of u) {
                if (Object.prototype.hasOwnProperty.call(o4, "__proto__")) {
                  if (E4.protoAction !== "remove")
                    throw new SyntaxError("Object contains forbidden prototype property");
                  delete o4.__proto__;
                }
                for (const g6 in o4) {
                  const f6 = o4[g6];
                  f6 && typeof f6 == "object" && l4.push(o4[g6]);
                }
              }
            }
          }, v6.safeParse = function(w4, E4) {
            try {
              return v6.parse(w4, E4);
            } catch {
              return null;
            }
          };
        }, 369: (L5, v6, p6) => {
          var w4 = p6(7);
          function E4(l4, u) {
            this.logStorage = l4, this.stringifyObjects = !(!u || !u.stringifyObjects) && u.stringifyObjects, this.storeInterval = u && u.storeInterval ? u.storeInterval : 3e4, this.maxEntryLength = u && u.maxEntryLength ? u.maxEntryLength : 1e4, Object.keys(w4.levels).forEach(function(o4) {
              this[w4.levels[o4]] = function() {
                this._log.apply(this, arguments);
              }.bind(this, o4);
            }.bind(this)), this.storeLogsIntervalID = null, this.queue = [], this.totalLen = 0, this.outputCache = [];
          }
          E4.prototype.stringify = function(l4) {
            try {
              return JSON.stringify(l4);
            } catch {
              return "[object with circular refs?]";
            }
          }, E4.prototype.formatLogMessage = function(l4) {
            for (var u = "", o4 = 1, g6 = arguments.length; o4 < g6; o4++) {
              var f6 = arguments[o4];
              !this.stringifyObjects && l4 !== w4.levels.ERROR || typeof f6 != "object" || (f6 = this.stringify(f6)), u += f6, o4 !== g6 - 1 && (u += " ");
            }
            return u.length ? u : null;
          }, E4.prototype._log = function() {
            var l4 = arguments[1], u = this.formatLogMessage.apply(this, arguments);
            if (u) {
              var o4 = this.queue[this.queue.length - 1], g6 = o4 && o4.text;
              g6 === u ? o4.count += 1 : (this.queue.push({ text: u, timestamp: l4, count: 1 }), this.totalLen += u.length);
            }
            this.totalLen >= this.maxEntryLength && this._flush(true, true);
          }, E4.prototype.start = function() {
            this._reschedulePublishInterval();
          }, E4.prototype._reschedulePublishInterval = function() {
            this.storeLogsIntervalID && (window.clearTimeout(this.storeLogsIntervalID), this.storeLogsIntervalID = null), this.storeLogsIntervalID = window.setTimeout(this._flush.bind(this, false, true), this.storeInterval);
          }, E4.prototype.flush = function() {
            this._flush(false, true);
          }, E4.prototype._flush = function(l4, u) {
            this.totalLen > 0 && (this.logStorage.isReady() || l4) && (this.logStorage.isReady() ? (this.outputCache.length && (this.outputCache.forEach(function(o4) {
              this.logStorage.storeLogs(o4);
            }.bind(this)), this.outputCache = []), this.logStorage.storeLogs(this.queue)) : this.outputCache.push(this.queue), this.queue = [], this.totalLen = 0), u && this._reschedulePublishInterval();
          }, E4.prototype.stop = function() {
            this._flush(false, false);
          }, L5.exports = E4;
        }, 7: (L5) => {
          var v6 = { trace: 0, debug: 1, info: 2, log: 3, warn: 4, error: 5 };
          u.consoleTransport = console;
          var p6 = [u.consoleTransport];
          u.addGlobalTransport = function(o4) {
            p6.indexOf(o4) === -1 && p6.push(o4);
          }, u.removeGlobalTransport = function(o4) {
            var g6 = p6.indexOf(o4);
            g6 !== -1 && p6.splice(g6, 1);
          };
          var w4 = {};
          function E4() {
            var o4 = { methodName: "", fileLocation: "", line: null, column: null }, g6 = new Error(), f6 = g6.stack ? g6.stack.split(`
`) : [];
            if (!f6 || f6.length < 3)
              return o4;
            var x5 = null;
            return f6[3] && (x5 = f6[3].match(/\s*at\s*(.+?)\s*\((\S*)\s*:(\d*)\s*:(\d*)\)/)), !x5 || x5.length <= 4 ? (f6[2].indexOf("log@") === 0 ? o4.methodName = f6[3].substr(0, f6[3].indexOf("@")) : o4.methodName = f6[2].substr(0, f6[2].indexOf("@")), o4) : (o4.methodName = x5[1], o4.fileLocation = x5[2], o4.line = x5[3], o4.column = x5[4], o4);
          }
          function l4() {
            var o4 = arguments[0], g6 = arguments[1], f6 = Array.prototype.slice.call(arguments, 2);
            if (!(v6[g6] < o4.level))
              for (var x5 = !(o4.options.disableCallerInfo || w4.disableCallerInfo) && E4(), C5 = p6.concat(o4.transports), V4 = 0; V4 < C5.length; V4++) {
                var W4 = C5[V4], B5 = W4[g6];
                if (B5 && typeof B5 == "function") {
                  var U3 = [];
                  U3.push(new Date().toISOString()), o4.id && U3.push("[" + o4.id + "]"), x5 && x5.methodName.length > 1 && U3.push("<" + x5.methodName + ">: ");
                  var r6 = U3.concat(f6);
                  B5.bind(W4).apply(W4, r6);
                }
              }
          }
          function u(o4, g6, f6, x5) {
            this.id = g6, this.options = x5 || {}, this.transports = f6, this.transports || (this.transports = []), this.level = v6[o4];
            for (var C5 = Object.keys(v6), V4 = 0; V4 < C5.length; V4++)
              this[C5[V4]] = l4.bind(null, this, C5[V4]);
          }
          u.setGlobalOptions = function(o4) {
            w4 = o4 || {};
          }, u.prototype.setLevel = function(o4) {
            this.level = v6[o4];
          }, L5.exports = u, u.levels = { TRACE: "trace", DEBUG: "debug", INFO: "info", LOG: "log", WARN: "warn", ERROR: "error" };
        }, 860: (L5, v6, p6) => {
          var w4 = p6(7), E4 = p6(369), l4 = {}, u = [], o4 = w4.levels.TRACE;
          L5.exports = { addGlobalTransport: function(g6) {
            w4.addGlobalTransport(g6);
          }, removeGlobalTransport: function(g6) {
            w4.removeGlobalTransport(g6);
          }, setGlobalOptions: function(g6) {
            w4.setGlobalOptions(g6);
          }, getLogger: function(g6, f6, x5) {
            var C5 = new w4(o4, g6, f6, x5);
            return g6 ? (l4[g6] = l4[g6] || [], l4[g6].push(C5)) : u.push(C5), C5;
          }, setLogLevelById: function(g6, f6) {
            for (var x5 = f6 ? l4[f6] || [] : u, C5 = 0; C5 < x5.length; C5++)
              x5[C5].setLevel(g6);
          }, setLogLevel: function(g6) {
            o4 = g6;
            for (var f6 = 0; f6 < u.length; f6++)
              u[f6].setLevel(g6);
            for (var x5 in l4) {
              var C5 = l4[x5] || [];
              for (f6 = 0; f6 < C5.length; f6++)
                C5[f6].setLevel(g6);
            }
          }, levels: w4.levels, LogCollector: E4 };
        }, 620: (L5) => {
          var v6, p6 = typeof Reflect == "object" ? Reflect : null, w4 = p6 && typeof p6.apply == "function" ? p6.apply : function(r6, a4, c4) {
            return Function.prototype.apply.call(r6, a4, c4);
          };
          v6 = p6 && typeof p6.ownKeys == "function" ? p6.ownKeys : Object.getOwnPropertySymbols ? function(r6) {
            return Object.getOwnPropertyNames(r6).concat(Object.getOwnPropertySymbols(r6));
          } : function(r6) {
            return Object.getOwnPropertyNames(r6);
          };
          var E4 = Number.isNaN || function(r6) {
            return r6 != r6;
          };
          function l4() {
            l4.init.call(this);
          }
          L5.exports = l4, L5.exports.once = function(r6, a4) {
            return new Promise(function(c4, m8) {
              function _6(b6) {
                r6.removeListener(a4, y7), m8(b6);
              }
              function y7() {
                typeof r6.removeListener == "function" && r6.removeListener("error", _6), c4([].slice.call(arguments));
              }
              U3(r6, a4, y7, { once: true }), a4 !== "error" && function(b6, O4, I6) {
                typeof b6.on == "function" && U3(b6, "error", O4, { once: true });
              }(r6, _6);
            });
          }, l4.EventEmitter = l4, l4.prototype._events = void 0, l4.prototype._eventsCount = 0, l4.prototype._maxListeners = void 0;
          var u = 10;
          function o4(r6) {
            if (typeof r6 != "function")
              throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof r6);
          }
          function g6(r6) {
            return r6._maxListeners === void 0 ? l4.defaultMaxListeners : r6._maxListeners;
          }
          function f6(r6, a4, c4, m8) {
            var _6, y7, b6, O4;
            if (o4(c4), (y7 = r6._events) === void 0 ? (y7 = r6._events = /* @__PURE__ */ Object.create(null), r6._eventsCount = 0) : (y7.newListener !== void 0 && (r6.emit("newListener", a4, c4.listener ? c4.listener : c4), y7 = r6._events), b6 = y7[a4]), b6 === void 0)
              b6 = y7[a4] = c4, ++r6._eventsCount;
            else if (typeof b6 == "function" ? b6 = y7[a4] = m8 ? [c4, b6] : [b6, c4] : m8 ? b6.unshift(c4) : b6.push(c4), (_6 = g6(r6)) > 0 && b6.length > _6 && !b6.warned) {
              b6.warned = true;
              var I6 = new Error("Possible EventEmitter memory leak detected. " + b6.length + " " + String(a4) + " listeners added. Use emitter.setMaxListeners() to increase limit");
              I6.name = "MaxListenersExceededWarning", I6.emitter = r6, I6.type = a4, I6.count = b6.length, O4 = I6, console && console.warn && console.warn(O4);
            }
            return r6;
          }
          function x5() {
            if (!this.fired)
              return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
          }
          function C5(r6, a4, c4) {
            var m8 = { fired: false, wrapFn: void 0, target: r6, type: a4, listener: c4 }, _6 = x5.bind(m8);
            return _6.listener = c4, m8.wrapFn = _6, _6;
          }
          function V4(r6, a4, c4) {
            var m8 = r6._events;
            if (m8 === void 0)
              return [];
            var _6 = m8[a4];
            return _6 === void 0 ? [] : typeof _6 == "function" ? c4 ? [_6.listener || _6] : [_6] : c4 ? function(y7) {
              for (var b6 = new Array(y7.length), O4 = 0; O4 < b6.length; ++O4)
                b6[O4] = y7[O4].listener || y7[O4];
              return b6;
            }(_6) : B5(_6, _6.length);
          }
          function W4(r6) {
            var a4 = this._events;
            if (a4 !== void 0) {
              var c4 = a4[r6];
              if (typeof c4 == "function")
                return 1;
              if (c4 !== void 0)
                return c4.length;
            }
            return 0;
          }
          function B5(r6, a4) {
            for (var c4 = new Array(a4), m8 = 0; m8 < a4; ++m8)
              c4[m8] = r6[m8];
            return c4;
          }
          function U3(r6, a4, c4, m8) {
            if (typeof r6.on == "function")
              m8.once ? r6.once(a4, c4) : r6.on(a4, c4);
            else {
              if (typeof r6.addEventListener != "function")
                throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof r6);
              r6.addEventListener(a4, function _6(y7) {
                m8.once && r6.removeEventListener(a4, _6), c4(y7);
              });
            }
          }
          Object.defineProperty(l4, "defaultMaxListeners", { enumerable: true, get: function() {
            return u;
          }, set: function(r6) {
            if (typeof r6 != "number" || r6 < 0 || E4(r6))
              throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + r6 + ".");
            u = r6;
          } }), l4.init = function() {
            this._events !== void 0 && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
          }, l4.prototype.setMaxListeners = function(r6) {
            if (typeof r6 != "number" || r6 < 0 || E4(r6))
              throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + r6 + ".");
            return this._maxListeners = r6, this;
          }, l4.prototype.getMaxListeners = function() {
            return g6(this);
          }, l4.prototype.emit = function(r6) {
            for (var a4 = [], c4 = 1; c4 < arguments.length; c4++)
              a4.push(arguments[c4]);
            var m8 = r6 === "error", _6 = this._events;
            if (_6 !== void 0)
              m8 = m8 && _6.error === void 0;
            else if (!m8)
              return false;
            if (m8) {
              var y7;
              if (a4.length > 0 && (y7 = a4[0]), y7 instanceof Error)
                throw y7;
              var b6 = new Error("Unhandled error." + (y7 ? " (" + y7.message + ")" : ""));
              throw b6.context = y7, b6;
            }
            var O4 = _6[r6];
            if (O4 === void 0)
              return false;
            if (typeof O4 == "function")
              w4(O4, this, a4);
            else {
              var I6 = O4.length, X5 = B5(O4, I6);
              for (c4 = 0; c4 < I6; ++c4)
                w4(X5[c4], this, a4);
            }
            return true;
          }, l4.prototype.addListener = function(r6, a4) {
            return f6(this, r6, a4, false);
          }, l4.prototype.on = l4.prototype.addListener, l4.prototype.prependListener = function(r6, a4) {
            return f6(this, r6, a4, true);
          }, l4.prototype.once = function(r6, a4) {
            return o4(a4), this.on(r6, C5(this, r6, a4)), this;
          }, l4.prototype.prependOnceListener = function(r6, a4) {
            return o4(a4), this.prependListener(r6, C5(this, r6, a4)), this;
          }, l4.prototype.removeListener = function(r6, a4) {
            var c4, m8, _6, y7, b6;
            if (o4(a4), (m8 = this._events) === void 0)
              return this;
            if ((c4 = m8[r6]) === void 0)
              return this;
            if (c4 === a4 || c4.listener === a4)
              --this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete m8[r6], m8.removeListener && this.emit("removeListener", r6, c4.listener || a4));
            else if (typeof c4 != "function") {
              for (_6 = -1, y7 = c4.length - 1; y7 >= 0; y7--)
                if (c4[y7] === a4 || c4[y7].listener === a4) {
                  b6 = c4[y7].listener, _6 = y7;
                  break;
                }
              if (_6 < 0)
                return this;
              _6 === 0 ? c4.shift() : function(O4, I6) {
                for (; I6 + 1 < O4.length; I6++)
                  O4[I6] = O4[I6 + 1];
                O4.pop();
              }(c4, _6), c4.length === 1 && (m8[r6] = c4[0]), m8.removeListener !== void 0 && this.emit("removeListener", r6, b6 || a4);
            }
            return this;
          }, l4.prototype.off = l4.prototype.removeListener, l4.prototype.removeAllListeners = function(r6) {
            var a4, c4, m8;
            if ((c4 = this._events) === void 0)
              return this;
            if (c4.removeListener === void 0)
              return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : c4[r6] !== void 0 && (--this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete c4[r6]), this;
            if (arguments.length === 0) {
              var _6, y7 = Object.keys(c4);
              for (m8 = 0; m8 < y7.length; ++m8)
                (_6 = y7[m8]) !== "removeListener" && this.removeAllListeners(_6);
              return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
            }
            if (typeof (a4 = c4[r6]) == "function")
              this.removeListener(r6, a4);
            else if (a4 !== void 0)
              for (m8 = a4.length - 1; m8 >= 0; m8--)
                this.removeListener(r6, a4[m8]);
            return this;
          }, l4.prototype.listeners = function(r6) {
            return V4(this, r6, true);
          }, l4.prototype.rawListeners = function(r6) {
            return V4(this, r6, false);
          }, l4.listenerCount = function(r6, a4) {
            return typeof r6.listenerCount == "function" ? r6.listenerCount(a4) : W4.call(r6, a4);
          }, l4.prototype.listenerCount = W4, l4.prototype.eventNames = function() {
            return this._eventsCount > 0 ? v6(this._events) : [];
          };
        } }, F5 = {};
        function T6(L5) {
          var v6 = F5[L5];
          if (v6 !== void 0)
            return v6.exports;
          var p6 = F5[L5] = { exports: {} };
          return G4[L5](p6, p6.exports, T6), p6.exports;
        }
        return T6.n = (L5) => {
          var v6 = L5 && L5.__esModule ? () => L5.default : () => L5;
          return T6.d(v6, { a: v6 }), v6;
        }, T6.d = (L5, v6) => {
          for (var p6 in v6)
            T6.o(v6, p6) && !T6.o(L5, p6) && Object.defineProperty(L5, p6, { enumerable: true, get: v6[p6] });
        }, T6.o = (L5, v6) => Object.prototype.hasOwnProperty.call(L5, v6), T6(872);
      })();
    });
    ve4 = I((G4, F5, T6, L5) => {
      let v6, p6;
      return p6 = x(A4, (w4) => v6 = w4), p6(), `

<main><div class="relative md:-translate-y-10 -translate-y-36"><div id="meet" class="w-full h-[82vh] md:h-[670px]"></div>

    <button><img alt="hangup button" class="${"absolute p-2 " + j("opacity-0", true) + " " + j(v6 ? "top-10 right-0" : "bottom-5 right-10 ", true) + " w-[50px] rounded-full content-[url('/phone.svg')] bg-[#2a1c44] active:bg-red-900 rotate-90 hover:scale-[1.3] hover:rotate-0 transition-transform duration-300"}"></button></div></main>`;
    });
    be4 = I((G4, F5, T6, L5) => {
      let v6, p6;
      return p6 = x(d3, (w4) => v6 = w4), A(() => {
        T(d3, v6 = false, v6), window.document.body.classList.remove("dark-mode");
      }), p6(), `${G(ve4, "JitsiUser").$$render(G4, {}, {}, {})}`;
    });
  }
});

// .svelte-kit/output/server/nodes/3.js
var __exports4 = {};
__export(__exports4, {
  component: () => component4,
  file: () => file4,
  fonts: () => fonts4,
  imports: () => imports4,
  index: () => index4,
  stylesheets: () => stylesheets4,
  universal: () => page_exports
});
var index4, component4, file4, imports4, stylesheets4, fonts4;
var init__4 = __esm({
  ".svelte-kit/output/server/nodes/3.js"() {
    init_page();
    index4 = 3;
    component4 = async () => (await Promise.resolve().then(() => (init_page_svelte2(), page_svelte_exports2))).default;
    file4 = "_app/immutable/components/pages/classroom/_page.svelte-a0bb76e1.js";
    imports4 = ["_app/immutable/components/pages/classroom/_page.svelte-a0bb76e1.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/navigation-58fa1539.js", "_app/immutable/chunks/singletons-d150de80.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/modules/pages/classroom/_page.js-5e8863ce.js", "_app/immutable/chunks/_page-b14944b6.js"];
    stylesheets4 = [];
    fonts4 = [];
  }
});

// .svelte-kit/output/server/entries/pages/classroomA/_page.svelte.js
var page_svelte_exports3 = {};
__export(page_svelte_exports3, {
  default: () => m4
});
var c2, m4;
var init_page_svelte3 = __esm({
  ".svelte-kit/output/server/entries/pages/classroomA/_page.svelte.js"() {
    init_chunks();
    init_store();
    c2 = I((t3, n3, o4, l4) => {
      let s6, e7;
      return e7 = x(A4, (d6) => s6 = d6), e7(), `${t3.head += '<!-- HEAD_svelte-1pkind7_START --><script src="https://meet.jit.si/external_api.js"><\/script><!-- HEAD_svelte-1pkind7_END -->', ""}

<div class="relative md:-translate-y-10 -translate-y-32 "><div id="meet" class="w-full h-[95vh] md:h-[670px]"></div>
  <button><img alt="hangup button" class="${"bg-gray-600 p-2 absolute brightness-50 " + j("opacity-0", true) + " " + j(s6 ? "top-5 right-5 " : "bottom-5 right-10 ", true) + " flex w-[50px] rounded-full content-[url('/phone.svg')] rotate-90 duration-[0.4s] hover:scale-[1.5] hover:rotate-0 hover:bg-red-500"}"></button></div>`;
    });
    m4 = I((t3, n3, o4, l4) => {
      let s6;
      return s6 = x(d3, (e7) => e7), s6(), `${G(c2, "JitsiUserAdmin").$$render(t3, {}, {}, {})}`;
    });
  }
});

// .svelte-kit/output/server/nodes/4.js
var __exports5 = {};
__export(__exports5, {
  component: () => component5,
  file: () => file5,
  fonts: () => fonts5,
  imports: () => imports5,
  index: () => index5,
  stylesheets: () => stylesheets5
});
var index5, component5, file5, imports5, stylesheets5, fonts5;
var init__5 = __esm({
  ".svelte-kit/output/server/nodes/4.js"() {
    index5 = 4;
    component5 = async () => (await Promise.resolve().then(() => (init_page_svelte3(), page_svelte_exports3))).default;
    file5 = "_app/immutable/components/pages/classroomA/_page.svelte-76ec7cf5.js";
    imports5 = ["_app/immutable/components/pages/classroomA/_page.svelte-76ec7cf5.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js"];
    stylesheets5 = [];
    fonts5 = [];
  }
});

// .svelte-kit/output/server/entries/pages/faq/_page.svelte.js
var page_svelte_exports4 = {};
__export(page_svelte_exports4, {
  default: () => m5
});
var r, m5;
var init_page_svelte4 = __esm({
  ".svelte-kit/output/server/entries/pages/faq/_page.svelte.js"() {
    init_chunks();
    init_store();
    r = { code: ".faqContainer.svelte-1yyztah.svelte-1yyztah{display:grid;place-content:center}:root{--light-green:rgb(230, 255, 249);--green:rgb(89, 208, 174);--red:rgb(230, 59, 96);--light-red:rgb(243, 186, 198);--borderRadius:15px}@keyframes svelte-1yyztah-sweep{0%{opacity:0;margin-top:-15px}100%{opacity:1;margin-top:0px}}details.svelte-1yyztah>summary.svelte-1yyztah{list-style:none}details.svelte-1yyztah>summary.svelte-1yyztah::-webkit-details-marker{display:none}details.svelte-1yyztah.svelte-1yyztah{font-family:Nunito, sans-serif;border:0px solid #eee;border-radius:var(--borderRadius);padding:0.5em 0.5em 0;font-size:18px}@media screen and (min-width: 768px){details.svelte-1yyztah.svelte-1yyztah{width:60vw}}@media screen and (max-width: 768px){details.svelte-1yyztah.svelte-1yyztah{width:80vw}}summary.svelte-1yyztah.svelte-1yyztah{margin:-0.5em -0.5em 0;padding:0.5em;border-radius:var(--borderRadius) var(--borderRadius) 0 0}details.svelte-1yyztah.svelte-1yyztah:hover{background:#ddd}body.dark-mode details.svelte-1yyztah.svelte-1yyztah:hover{background:#211f51}details.svelte-1yyztah p.svelte-1yyztah{padding:10px}details.svelte-1yyztah a.svelte-1yyztah{color:var(--red)}details.svelte-1yyztah a.svelte-1yyztah:hover{color:rgb(46, 126, 253)}details[open].svelte-1yyztah.svelte-1yyztah{padding:0.5em;background:var(--light-green);animation:svelte-1yyztah-sweep 0.25s ease-in-out;margin-bottom:10px}body.dark-mode details[open].svelte-1yyztah.svelte-1yyztah{background:var(--light-green);color:black}details[open].svelte-1yyztah summary.svelte-1yyztah{border-bottom:1px solid #aaa;margin-bottom:0.5em;background-color:var(--green);outline:none}details[open].svelte-1yyztah summary.highlight.svelte-1yyztah{background:var(--red);color:white;transition:0.2s ease-in-out}details[open].svelte-1yyztah.svelte-1yyztah:has(summary.highlight){background:var(--light-red);transition:0.2s ease-in-out}", map: null };
    m5 = I((o4, y7, d6, c4) => {
      let s6, a4;
      return s6 = x(B2, (e7) => e7), a4 = x(P2, (e7) => e7), o4.css.add(r), s6(), a4(), `





<div class="grid place-content-center py-16">
  <span class="font-Poppins text-center text-5xl font-bold ">FAQ
  </span></div>


<div class="faqContainer svelte-1yyztah"><details class="svelte-1yyztah"><summary class="highlight svelte-1yyztah">How are we screen-sharing? Zoom? </summary>

    Nope, our sessions happen on-site
    <a data-sveltekit-preload-data href="/classroom" class="svelte-1yyztah">in the classroom</a>.
  </details>

  <details class="svelte-1yyztah"><summary class="svelte-1yyztah">Is it possible to access all my session content in one place?
    </summary>
    <p class="svelte-1yyztah">Sure can! Contact us directly to set up a personalized page, or check the
      option when booking! You will be <button class="text-rose-500">redirected to your personal page upon logging in
      </button>.
    </p></details>

  <details class="svelte-1yyztah"><summary class="svelte-1yyztah">How do I share homework? </summary>
    <p class="svelte-1yyztah">Click on &quot;<button class="text-rose-500">Homework</button>&quot; in the navbar and submit screenshots/ PDFs/ etc.
    </p>

    <p class="svelte-1yyztah">For added convenience in future submissions, consider downloading the app
      on your mobile device. Using Safari on iOS devices:
    </p>
    <span class="flex flex-col justify-center items-center gap-x-2 "><span class="flex flex-row gap-x-1">Click share icon
        <img class="w-5 h-5 " src="/safari-share-icon.png" alt="safari share icon"></span>

      <span>Click &quot;Add to Homescreen&quot;</span></span>
    <p class="svelte-1yyztah">Using Chrome on Android devices, you should be prompted automatically
      (usually at the bottom of the screen).
    </p></details>

  <details class="svelte-1yyztah"><summary class="svelte-1yyztah">How do I pay? </summary>
    <p class="svelte-1yyztah">On the <a data-sveltekit-preload-data href="/plans" class="svelte-1yyztah">plans page</a> you can
      either &quot;pay now&quot; or &quot;pay later&quot;, per service.
    </p>
    <p class="svelte-1yyztah">After booking details have been confirmed the &quot;pay now&quot; option will
      redirect you to a checkout page. With &quot;pay later&quot; we send a custom STRIPE
      invoice to the preferred email. In both cases you will have the option to
      pay with credit card, Apple Pay, or Google Pay!
    </p></details>

  <details class="svelte-1yyztah"><summary class="svelte-1yyztah">How do I book multiple sessions at once? </summary>

    <p class="svelte-1yyztah">We will book the remaining times for you at the beginning / end of the
      scheduled session.
    </p></details>

  <details class="svelte-1yyztah"><summary class="svelte-1yyztah">What subjects do you cover? </summary>

    <p class="svelte-1yyztah"><span class="font-Poppins font-bold">MATHEMATICS</span>\xA0 Calculus \u2022
      Trigonometry \u2022 Advanced Functions \u2022 Complex Numbers \u2022 Linear Algebra \u2022
      Probability and Statistics \xA0\xA0<span class="font-Poppins font-bold">PHYSICS</span>
      \xA0Kinematics \u2022 Mechanics \u2022 Thermodynamics \u2022 Fluids \u2022 Electricity &amp; Magnetism
      \u2022 Circuit Analysis \u2022 Waves \u2022 Optics \u2022 Atomic &amp; Quantum Physics \u2022 Special Relativity
      \xA0\xA0<span class="font-Poppins font-bold">SPANISH</span>
      \xA0 Pronunciation \u2022 Grammatical Rules \u2022 Practical Examples

      <br><br>
      <b>Levels:</b> IB / AP / OSSD (9-12) / College &amp; University
    </p></details>

  <details class="svelte-1yyztah"><summary class="svelte-1yyztah">How are mock tests administered? </summary>
    <p class="svelte-1yyztah">After booking a &quot;Mock&quot; session on <a data-sveltekit-preload-data href="/plans" class="svelte-1yyztah">plans</a>, the student attends a live session where a prepared examination \u2014 in
      the form of a Google Forms link \u2014 will be shared at the beginning of the
      session. The topics are chosen based on input during booking, as well as
      prior discussion with the student.
    </p>
    <p class="svelte-1yyztah"><span class="font-Poppins font-bold">In regards to completed questions only:</span> answers are discussed during session time. A detailed, digital solution key
      is also available at a premium, to be populated on your personal page.
    </p></details>

  <details class="group svelte-1yyztah"><summary class="svelte-1yyztah">I am looking to refer a friend, do you offer any discounts based on
      referrals?
    </summary>
    <p class="svelte-1yyztah">

      Great question! You can enter your referral as an input when booking; for
      this initiative we are pleased to offer a
      
      <span class="hover:opacity-100 group-active:opacity-100 opacity-0 text-transparent bg-clip-text bg-gradient-to-b from-rose-700 via-rose-600 to-yellow-300">25%
      </span>
      discount on the next applicable session!
    </p></details>
</div>`;
    });
  }
});

// .svelte-kit/output/server/nodes/5.js
var __exports6 = {};
__export(__exports6, {
  component: () => component6,
  file: () => file6,
  fonts: () => fonts6,
  imports: () => imports6,
  index: () => index6,
  stylesheets: () => stylesheets6
});
var index6, component6, file6, imports6, stylesheets6, fonts6;
var init__6 = __esm({
  ".svelte-kit/output/server/nodes/5.js"() {
    index6 = 5;
    component6 = async () => (await Promise.resolve().then(() => (init_page_svelte4(), page_svelte_exports4))).default;
    file6 = "_app/immutable/components/pages/faq/_page.svelte-5229485b.js";
    imports6 = ["_app/immutable/components/pages/faq/_page.svelte-5229485b.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/index-1b1ee987.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js"];
    stylesheets6 = ["_app/immutable/assets/_page-e302df05.css"];
    fonts6 = [];
  }
});

// .svelte-kit/output/server/entries/pages/homework/_page.svelte.js
var page_svelte_exports5 = {};
__export(page_svelte_exports5, {
  default: () => m6
});
var m6;
var init_page_svelte5 = __esm({
  ".svelte-kit/output/server/entries/pages/homework/_page.svelte.js"() {
    init_chunks();
    init_DropzoneOpener();
    m6 = I((e7, p6, t3, s6) => `${G(w3, "DropzoneOpener").$$render(e7, {}, {}, {})}`);
  }
});

// .svelte-kit/output/server/nodes/6.js
var __exports7 = {};
__export(__exports7, {
  component: () => component7,
  file: () => file7,
  fonts: () => fonts7,
  imports: () => imports7,
  index: () => index7,
  stylesheets: () => stylesheets7
});
var index7, component7, file7, imports7, stylesheets7, fonts7;
var init__7 = __esm({
  ".svelte-kit/output/server/nodes/6.js"() {
    index7 = 6;
    component7 = async () => (await Promise.resolve().then(() => (init_page_svelte5(), page_svelte_exports5))).default;
    file7 = "_app/immutable/components/pages/homework/_page.svelte-2eeebab3.js";
    imports7 = ["_app/immutable/components/pages/homework/_page.svelte-2eeebab3.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/DropzoneOpener-15bd2f3c.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js"];
    stylesheets7 = [];
    fonts7 = [];
  }
});

// .svelte-kit/output/server/entries/pages/katex/_page.js
var page_exports2 = {};
__export(page_exports2, {
  prerender: () => e2
});
var e2;
var init_page2 = __esm({
  ".svelte-kit/output/server/entries/pages/katex/_page.js"() {
    e2 = false;
  }
});

// node_modules/katex/dist/katex.mjs
function escape(text2) {
  return String(text2).replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
}
function getDefaultValue(schema) {
  if (schema.default) {
    return schema.default;
  }
  var type = schema.type;
  var defaultType = Array.isArray(type) ? type[0] : type;
  if (typeof defaultType !== "string") {
    return defaultType.enum[0];
  }
  switch (defaultType) {
    case "boolean":
      return false;
    case "string":
      return "";
    case "number":
      return 0;
    case "object":
      return {};
  }
}
function scriptFromCodepoint(codepoint) {
  for (var i4 = 0; i4 < scriptData.length; i4++) {
    var script = scriptData[i4];
    for (var _i = 0; _i < script.blocks.length; _i++) {
      var block = script.blocks[_i];
      if (codepoint >= block[0] && codepoint <= block[1]) {
        return script.name;
      }
    }
  }
  return null;
}
function supportedCodepoint(codepoint) {
  for (var i4 = 0; i4 < allBlocks.length; i4 += 2) {
    if (codepoint >= allBlocks[i4] && codepoint <= allBlocks[i4 + 1]) {
      return true;
    }
  }
  return false;
}
function setFontMetrics(fontName, metrics) {
  fontMetricsData[fontName] = metrics;
}
function getCharacterMetrics(character, font, mode) {
  if (!fontMetricsData[font]) {
    throw new Error("Font metrics not found for font: " + font + ".");
  }
  var ch = character.charCodeAt(0);
  var metrics = fontMetricsData[font][ch];
  if (!metrics && character[0] in extraCharacterMap) {
    ch = extraCharacterMap[character[0]].charCodeAt(0);
    metrics = fontMetricsData[font][ch];
  }
  if (!metrics && mode === "text") {
    if (supportedCodepoint(ch)) {
      metrics = fontMetricsData[font][77];
    }
  }
  if (metrics) {
    return {
      depth: metrics[0],
      height: metrics[1],
      italic: metrics[2],
      skew: metrics[3],
      width: metrics[4]
    };
  }
}
function getGlobalMetrics(size) {
  var sizeIndex;
  if (size >= 5) {
    sizeIndex = 0;
  } else if (size >= 3) {
    sizeIndex = 1;
  } else {
    sizeIndex = 2;
  }
  if (!fontMetricsBySizeIndex[sizeIndex]) {
    var metrics = fontMetricsBySizeIndex[sizeIndex] = {
      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18
    };
    for (var key in sigmasAndXis) {
      if (sigmasAndXis.hasOwnProperty(key)) {
        metrics[key] = sigmasAndXis[key][sizeIndex];
      }
    }
  }
  return fontMetricsBySizeIndex[sizeIndex];
}
function assertSymbolDomNode(group) {
  if (group instanceof SymbolNode) {
    return group;
  } else {
    throw new Error("Expected symbolNode but got " + String(group) + ".");
  }
}
function assertSpan(group) {
  if (group instanceof Span) {
    return group;
  } else {
    throw new Error("Expected span<HtmlDomNode> but got " + String(group) + ".");
  }
}
function defineSymbol(mode, font, group, replace, name5, acceptUnicodeChar) {
  symbols[mode][name5] = {
    font,
    group,
    replace
  };
  if (acceptUnicodeChar && replace) {
    symbols[mode][replace] = symbols[mode][name5];
  }
}
function defineFunction(_ref) {
  var {
    type,
    names,
    props,
    handler,
    htmlBuilder: htmlBuilder3,
    mathmlBuilder: mathmlBuilder3
  } = _ref;
  var data = {
    type,
    numArgs: props.numArgs,
    argTypes: props.argTypes,
    allowedInArgument: !!props.allowedInArgument,
    allowedInText: !!props.allowedInText,
    allowedInMath: props.allowedInMath === void 0 ? true : props.allowedInMath,
    numOptionalArgs: props.numOptionalArgs || 0,
    infix: !!props.infix,
    primitive: !!props.primitive,
    handler
  };
  for (var i4 = 0; i4 < names.length; ++i4) {
    _functions[names[i4]] = data;
  }
  if (type) {
    if (htmlBuilder3) {
      _htmlGroupBuilders[type] = htmlBuilder3;
    }
    if (mathmlBuilder3) {
      _mathmlGroupBuilders[type] = mathmlBuilder3;
    }
  }
}
function defineFunctionBuilders(_ref2) {
  var {
    type,
    htmlBuilder: htmlBuilder3,
    mathmlBuilder: mathmlBuilder3
  } = _ref2;
  defineFunction({
    type,
    names: [],
    props: {
      numArgs: 0
    },
    handler() {
      throw new Error("Should never be called.");
    },
    htmlBuilder: htmlBuilder3,
    mathmlBuilder: mathmlBuilder3
  });
}
function buildHTMLUnbreakable(children, options) {
  var body = makeSpan$1(["base"], children, options);
  var strut = makeSpan$1(["strut"]);
  strut.style.height = makeEm(body.height + body.depth);
  if (body.depth) {
    strut.style.verticalAlign = makeEm(-body.depth);
  }
  body.children.unshift(strut);
  return body;
}
function buildHTML(tree, options) {
  var tag = null;
  if (tree.length === 1 && tree[0].type === "tag") {
    tag = tree[0].tag;
    tree = tree[0].body;
  }
  var expression = buildExpression$1(tree, options, "root");
  var eqnNum;
  if (expression.length === 2 && expression[1].hasClass("tag")) {
    eqnNum = expression.pop();
  }
  var children = [];
  var parts = [];
  for (var i4 = 0; i4 < expression.length; i4++) {
    parts.push(expression[i4]);
    if (expression[i4].hasClass("mbin") || expression[i4].hasClass("mrel") || expression[i4].hasClass("allowbreak")) {
      var nobreak = false;
      while (i4 < expression.length - 1 && expression[i4 + 1].hasClass("mspace") && !expression[i4 + 1].hasClass("newline")) {
        i4++;
        parts.push(expression[i4]);
        if (expression[i4].hasClass("nobreak")) {
          nobreak = true;
        }
      }
      if (!nobreak) {
        children.push(buildHTMLUnbreakable(parts, options));
        parts = [];
      }
    } else if (expression[i4].hasClass("newline")) {
      parts.pop();
      if (parts.length > 0) {
        children.push(buildHTMLUnbreakable(parts, options));
        parts = [];
      }
      children.push(expression[i4]);
    }
  }
  if (parts.length > 0) {
    children.push(buildHTMLUnbreakable(parts, options));
  }
  var tagChild;
  if (tag) {
    tagChild = buildHTMLUnbreakable(buildExpression$1(tag, options, true));
    tagChild.classes = ["tag"];
    children.push(tagChild);
  } else if (eqnNum) {
    children.push(eqnNum);
  }
  var htmlNode = makeSpan$1(["katex-html"], children);
  htmlNode.setAttribute("aria-hidden", "true");
  if (tagChild) {
    var strut = tagChild.children[0];
    strut.style.height = makeEm(htmlNode.height + htmlNode.depth);
    if (htmlNode.depth) {
      strut.style.verticalAlign = makeEm(-htmlNode.depth);
    }
  }
  return htmlNode;
}
function newDocumentFragment(children) {
  return new DocumentFragment(children);
}
function buildMathML(tree, texExpression, options, isDisplayMode, forMathmlOnly) {
  var expression = buildExpression2(tree, options);
  var wrapper;
  if (expression.length === 1 && expression[0] instanceof MathNode && utils.contains(["mrow", "mtable"], expression[0].type)) {
    wrapper = expression[0];
  } else {
    wrapper = new mathMLTree.MathNode("mrow", expression);
  }
  var annotation = new mathMLTree.MathNode("annotation", [new mathMLTree.TextNode(texExpression)]);
  annotation.setAttribute("encoding", "application/x-tex");
  var semantics = new mathMLTree.MathNode("semantics", [wrapper, annotation]);
  var math2 = new mathMLTree.MathNode("math", [semantics]);
  math2.setAttribute("xmlns", "http://www.w3.org/1998/Math/MathML");
  if (isDisplayMode) {
    math2.setAttribute("display", "block");
  }
  var wrapperClass = forMathmlOnly ? "katex" : "katex-mathml";
  return buildCommon.makeSpan([wrapperClass], [math2]);
}
function assertNodeType(node, type) {
  if (!node || node.type !== type) {
    throw new Error("Expected node of type " + type + ", but got " + (node ? "node of type " + node.type : String(node)));
  }
  return node;
}
function assertSymbolNodeType(node) {
  var typedNode = checkSymbolNodeType(node);
  if (!typedNode) {
    throw new Error("Expected node of symbol group type, but got " + (node ? "node of type " + node.type : String(node)));
  }
  return typedNode;
}
function checkSymbolNodeType(node) {
  if (node && (node.type === "atom" || NON_ATOMS.hasOwnProperty(node.type))) {
    return node;
  }
  return null;
}
function htmlBuilder$9(group, options) {
  var elements = buildExpression$1(group.body, options, true);
  return makeSpan2([group.mclass], elements, options);
}
function mathmlBuilder$8(group, options) {
  var node;
  var inner2 = buildExpression2(group.body, options);
  if (group.mclass === "minner") {
    node = new mathMLTree.MathNode("mpadded", inner2);
  } else if (group.mclass === "mord") {
    if (group.isCharacterBox) {
      node = inner2[0];
      node.type = "mi";
    } else {
      node = new mathMLTree.MathNode("mi", inner2);
    }
  } else {
    if (group.isCharacterBox) {
      node = inner2[0];
      node.type = "mo";
    } else {
      node = new mathMLTree.MathNode("mo", inner2);
    }
    if (group.mclass === "mbin") {
      node.attributes.lspace = "0.22em";
      node.attributes.rspace = "0.22em";
    } else if (group.mclass === "mpunct") {
      node.attributes.lspace = "0em";
      node.attributes.rspace = "0.17em";
    } else if (group.mclass === "mopen" || group.mclass === "mclose") {
      node.attributes.lspace = "0em";
      node.attributes.rspace = "0em";
    } else if (group.mclass === "minner") {
      node.attributes.lspace = "0.0556em";
      node.attributes.width = "+0.1111em";
    }
  }
  return node;
}
function cdArrow(arrowChar, labels, parser) {
  var funcName = cdArrowFunctionName[arrowChar];
  switch (funcName) {
    case "\\\\cdrightarrow":
    case "\\\\cdleftarrow":
      return parser.callFunction(funcName, [labels[0]], [labels[1]]);
    case "\\uparrow":
    case "\\downarrow": {
      var leftLabel = parser.callFunction("\\\\cdleft", [labels[0]], []);
      var bareArrow = {
        type: "atom",
        text: funcName,
        mode: "math",
        family: "rel"
      };
      var sizedArrow = parser.callFunction("\\Big", [bareArrow], []);
      var rightLabel = parser.callFunction("\\\\cdright", [labels[1]], []);
      var arrowGroup = {
        type: "ordgroup",
        mode: "math",
        body: [leftLabel, sizedArrow, rightLabel]
      };
      return parser.callFunction("\\\\cdparent", [arrowGroup], []);
    }
    case "\\\\cdlongequal":
      return parser.callFunction("\\\\cdlongequal", [], []);
    case "\\Vert": {
      var arrow = {
        type: "textord",
        text: "\\Vert",
        mode: "math"
      };
      return parser.callFunction("\\Big", [arrow], []);
    }
    default:
      return {
        type: "textord",
        text: " ",
        mode: "math"
      };
  }
}
function parseCD(parser) {
  var parsedRows = [];
  parser.gullet.beginGroup();
  parser.gullet.macros.set("\\cr", "\\\\\\relax");
  parser.gullet.beginGroup();
  while (true) {
    parsedRows.push(parser.parseExpression(false, "\\\\"));
    parser.gullet.endGroup();
    parser.gullet.beginGroup();
    var next = parser.fetch().text;
    if (next === "&" || next === "\\\\") {
      parser.consume();
    } else if (next === "\\end") {
      if (parsedRows[parsedRows.length - 1].length === 0) {
        parsedRows.pop();
      }
      break;
    } else {
      throw new ParseError("Expected \\\\ or \\cr or \\end", parser.nextToken);
    }
  }
  var row = [];
  var body = [row];
  for (var i4 = 0; i4 < parsedRows.length; i4++) {
    var rowNodes = parsedRows[i4];
    var cell = newCell();
    for (var j3 = 0; j3 < rowNodes.length; j3++) {
      if (!isStartOfArrow(rowNodes[j3])) {
        cell.body.push(rowNodes[j3]);
      } else {
        row.push(cell);
        j3 += 1;
        var arrowChar = assertSymbolNodeType(rowNodes[j3]).text;
        var labels = new Array(2);
        labels[0] = {
          type: "ordgroup",
          mode: "math",
          body: []
        };
        labels[1] = {
          type: "ordgroup",
          mode: "math",
          body: []
        };
        if ("=|.".indexOf(arrowChar) > -1)
          ;
        else if ("<>AV".indexOf(arrowChar) > -1) {
          for (var labelNum = 0; labelNum < 2; labelNum++) {
            var inLabel = true;
            for (var k6 = j3 + 1; k6 < rowNodes.length; k6++) {
              if (isLabelEnd(rowNodes[k6], arrowChar)) {
                inLabel = false;
                j3 = k6;
                break;
              }
              if (isStartOfArrow(rowNodes[k6])) {
                throw new ParseError("Missing a " + arrowChar + " character to complete a CD arrow.", rowNodes[k6]);
              }
              labels[labelNum].body.push(rowNodes[k6]);
            }
            if (inLabel) {
              throw new ParseError("Missing a " + arrowChar + " character to complete a CD arrow.", rowNodes[j3]);
            }
          }
        } else {
          throw new ParseError('Expected one of "<>AV=|." after @', rowNodes[j3]);
        }
        var arrow = cdArrow(arrowChar, labels, parser);
        var wrappedArrow = {
          type: "styling",
          body: [arrow],
          mode: "math",
          style: "display"
        };
        row.push(wrappedArrow);
        cell = newCell();
      }
    }
    if (i4 % 2 === 0) {
      row.push(cell);
    } else {
      row.shift();
    }
    row = [];
    body.push(row);
  }
  parser.gullet.endGroup();
  parser.gullet.endGroup();
  var cols = new Array(body[0].length).fill({
    type: "align",
    align: "c",
    pregap: 0.25,
    postgap: 0.25
  });
  return {
    type: "array",
    mode: "math",
    body,
    arraystretch: 1,
    addJot: true,
    rowGaps: [null],
    cols,
    colSeparationType: "CD",
    hLinesBeforeRow: new Array(body.length + 1).fill([])
  };
}
function checkDelimiter(delim, context) {
  var symDelim = checkSymbolNodeType(delim);
  if (symDelim && utils.contains(delimiters, symDelim.text)) {
    return symDelim;
  } else if (symDelim) {
    throw new ParseError("Invalid delimiter '" + symDelim.text + "' after '" + context.funcName + "'", delim);
  } else {
    throw new ParseError("Invalid delimiter type '" + delim.type + "'", delim);
  }
}
function assertParsed(group) {
  if (!group.body) {
    throw new Error("Bug: The leftright ParseNode wasn't fully parsed.");
  }
}
function defineEnvironment(_ref) {
  var {
    type,
    names,
    props,
    handler,
    htmlBuilder: htmlBuilder3,
    mathmlBuilder: mathmlBuilder3
  } = _ref;
  var data = {
    type,
    numArgs: props.numArgs || 0,
    allowedInText: false,
    numOptionalArgs: 0,
    handler
  };
  for (var i4 = 0; i4 < names.length; ++i4) {
    _environments[names[i4]] = data;
  }
  if (htmlBuilder3) {
    _htmlGroupBuilders[type] = htmlBuilder3;
  }
  if (mathmlBuilder3) {
    _mathmlGroupBuilders[type] = mathmlBuilder3;
  }
}
function defineMacro(name5, body) {
  _macros[name5] = body;
}
function getHLines(parser) {
  var hlineInfo = [];
  parser.consumeSpaces();
  var nxt = parser.fetch().text;
  if (nxt === "\\relax") {
    parser.consume();
    parser.consumeSpaces();
    nxt = parser.fetch().text;
  }
  while (nxt === "\\hline" || nxt === "\\hdashline") {
    parser.consume();
    hlineInfo.push(nxt === "\\hdashline");
    parser.consumeSpaces();
    nxt = parser.fetch().text;
  }
  return hlineInfo;
}
function getAutoTag(name5) {
  if (name5.indexOf("ed") === -1) {
    return name5.indexOf("*") === -1;
  }
}
function parseArray(parser, _ref, style) {
  var {
    hskipBeforeAndAfter,
    addJot,
    cols,
    arraystretch,
    colSeparationType,
    autoTag,
    singleRow,
    emptySingleRow,
    maxNumCols,
    leqno
  } = _ref;
  parser.gullet.beginGroup();
  if (!singleRow) {
    parser.gullet.macros.set("\\cr", "\\\\\\relax");
  }
  if (!arraystretch) {
    var stretch = parser.gullet.expandMacroAsText("\\arraystretch");
    if (stretch == null) {
      arraystretch = 1;
    } else {
      arraystretch = parseFloat(stretch);
      if (!arraystretch || arraystretch < 0) {
        throw new ParseError("Invalid \\arraystretch: " + stretch);
      }
    }
  }
  parser.gullet.beginGroup();
  var row = [];
  var body = [row];
  var rowGaps = [];
  var hLinesBeforeRow = [];
  var tags = autoTag != null ? [] : void 0;
  function beginRow() {
    if (autoTag) {
      parser.gullet.macros.set("\\@eqnsw", "1", true);
    }
  }
  function endRow() {
    if (tags) {
      if (parser.gullet.macros.get("\\df@tag")) {
        tags.push(parser.subparse([new Token("\\df@tag")]));
        parser.gullet.macros.set("\\df@tag", void 0, true);
      } else {
        tags.push(Boolean(autoTag) && parser.gullet.macros.get("\\@eqnsw") === "1");
      }
    }
  }
  beginRow();
  hLinesBeforeRow.push(getHLines(parser));
  while (true) {
    var cell = parser.parseExpression(false, singleRow ? "\\end" : "\\\\");
    parser.gullet.endGroup();
    parser.gullet.beginGroup();
    cell = {
      type: "ordgroup",
      mode: parser.mode,
      body: cell
    };
    if (style) {
      cell = {
        type: "styling",
        mode: parser.mode,
        style,
        body: [cell]
      };
    }
    row.push(cell);
    var next = parser.fetch().text;
    if (next === "&") {
      if (maxNumCols && row.length === maxNumCols) {
        if (singleRow || colSeparationType) {
          throw new ParseError("Too many tab characters: &", parser.nextToken);
        } else {
          parser.settings.reportNonstrict("textEnv", "Too few columns specified in the {array} column argument.");
        }
      }
      parser.consume();
    } else if (next === "\\end") {
      endRow();
      if (row.length === 1 && cell.type === "styling" && cell.body[0].body.length === 0 && (body.length > 1 || !emptySingleRow)) {
        body.pop();
      }
      if (hLinesBeforeRow.length < body.length + 1) {
        hLinesBeforeRow.push([]);
      }
      break;
    } else if (next === "\\\\") {
      parser.consume();
      var size = void 0;
      if (parser.gullet.future().text !== " ") {
        size = parser.parseSizeGroup(true);
      }
      rowGaps.push(size ? size.value : null);
      endRow();
      hLinesBeforeRow.push(getHLines(parser));
      row = [];
      body.push(row);
      beginRow();
    } else {
      throw new ParseError("Expected & or \\\\ or \\cr or \\end", parser.nextToken);
    }
  }
  parser.gullet.endGroup();
  parser.gullet.endGroup();
  return {
    type: "array",
    mode: parser.mode,
    addJot,
    arraystretch,
    body,
    cols,
    rowGaps,
    hskipBeforeAndAfter,
    hLinesBeforeRow,
    colSeparationType,
    tags,
    leqno
  };
}
function dCellStyle(envName) {
  if (envName.slice(0, 1) === "d") {
    return "display";
  } else {
    return "text";
  }
}
function sizingGroup(value, options, baseOptions) {
  var inner2 = buildExpression$1(value, options, false);
  var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;
  for (var i4 = 0; i4 < inner2.length; i4++) {
    var pos = inner2[i4].classes.indexOf("sizing");
    if (pos < 0) {
      Array.prototype.push.apply(inner2[i4].classes, options.sizingClasses(baseOptions));
    } else if (inner2[i4].classes[pos + 1] === "reset-size" + options.size) {
      inner2[i4].classes[pos + 1] = "reset-size" + baseOptions.size;
    }
    inner2[i4].height *= multiplier;
    inner2[i4].depth *= multiplier;
  }
  return buildCommon.makeFragment(inner2);
}
var SourceLocation, Token, ParseError, contains, deflt, uppercase, hyphenate, ESCAPE_LOOKUP, ESCAPE_REGEX, getBaseElem, isCharacterBox, assert, protocolFromUrl, utils, SETTINGS_SCHEMA, Settings, Style, D4, Dc, T4, Tc, S5, Sc, SS, SSc, styles, sup, sub, fracNum, fracDen, cramp, text$1, Style$1, scriptData, allBlocks, hLinePad, sqrtMain, sqrtSize1, sqrtSize2, sqrtSize3, sqrtSize4, phasePath, sqrtTall, sqrtPath, innerPath, path, tallDelim, DocumentFragment, fontMetricsData, sigmasAndXis, extraCharacterMap, fontMetricsBySizeIndex, sizeStyleMap, sizeMultipliers, sizeAtStyle, Options, ptPerUnit, relativeUnit, validUnit, calculateSize, makeEm, createClass, initNode, toNode, toMarkup, Span, Anchor, Img, iCombinations, SymbolNode, SvgNode, PathNode, LineNode, ATOMS, NON_ATOMS, symbols, math, text, main, ams, accent, bin, close, inner, mathord, op, open, punct, rel, spacing, textord, ligatures, mathTextSymbols, ch, i4, textSymbols, _ch, _i, letters, _ch2, _i2, wideChar, _ch3, _i3, _ch4, _i4, extraLatin, _ch5, _i5, wideLatinLetterData, wideNumeralData, wideCharacterFont, lookupSymbol, makeSymbol, mathsym, boldsymbol, makeOrd, canCombine, tryCombineChars, sizeElementFromChildren, makeSpan$2, makeSvgSpan, makeLineSpan, makeAnchor, makeFragment, wrapFragment, getVListChildrenAndDepth, makeVList, makeGlue, retrieveTextFontName, fontMap, svgData, staticSvg, buildCommon, thinspace, mediumspace, thickspace, spacings, tightSpacings, _functions, _htmlGroupBuilders, _mathmlGroupBuilders, normalizeArgument, ordargument, makeSpan$1, binLeftCanceller, binRightCanceller, styleMap$1, DomEnum, buildExpression$1, traverseNonSpaceNodes, checkPartialGroup, getOutermostNode, getTypeOfDomTree, makeNullDelimiter, buildGroup$1, MathNode, TextNode, SpaceNode, mathMLTree, makeText, makeRow, getVariant, buildExpression2, buildExpressionRow, buildGroup2, optionsFromSettings, displayWrap, buildTree, buildHTMLTree, stretchyCodePoint, mathMLnode, katexImagesData, groupLength, svgSpan, encloseSpan, stretchy, htmlBuilder$a, mathmlBuilder$9, NON_STRETCHY_ACCENT_REGEX, paddedNode, makeSpan2, binrelClass, cdArrowFunctionName, newCell, isStartOfArrow, isLabelEnd, htmlBuilder$8, mathmlBuilder$7, globalMap, checkControlSequence, getRHS, letCommand, getMetrics, styleWrap, centerSpan, makeSmallDelim, mathrmSize, makeLargeDelim, makeGlyphSpan, makeInner, lapInEms, lap, verts, doubleVerts, makeStackedDelim, vbPad, emPad, sqrtSvg, makeSqrtImage, stackLargeDelimiters, stackAlwaysDelimiters, stackNeverDelimiters, sizeToMaxHeight, makeSizedDelim, stackNeverDelimiterSequence, stackAlwaysDelimiterSequence, stackLargeDelimiterSequence, delimTypeToFont, traverseSequence, makeCustomSizedDelim, makeLeftRightDelim, delimiter, delimiterSizes, delimiters, htmlBuilder$7, mathmlBuilder$6, _environments, _macros, validateAmsEnvironmentContext, htmlBuilder$6, alignMap, mathmlBuilder$5, alignedHandler, environments, htmlBuilder$5, mathmlBuilder$4, fontAliases, adjustStyle, htmlBuilder$4, mathmlBuilder$3, stylArray, delimFromValue, htmlBuilder$3, mathmlBuilder$2, sizeData, chooseMathStyle, assembleSupSub, noSuccessor, htmlBuilder$2, mathmlBuilder$1, singleCharBigOps, singleCharIntegrals, htmlBuilder$1, mathmlBuilder2, sizeFuncs, htmlBuilder2, styleMap, htmlBuilderDelegate, defaultVariant, cssSpace, regularSpace, pad, textFontFamilies, textFontWeights, textFontShapes, optionsWithFont, makeVerb, functions, spaceRegexString, controlWordRegexString, controlSymbolRegexString, controlWordWhitespaceRegexString, controlSpaceRegexString, combiningDiacriticalMarkString, combiningDiacriticalMarksEndRegex, tokenRegexString, Lexer, Namespace, macros, digitToNumber, newcommand, dotsByToken, spaceAfterDots, latexRaiseA, braketHelper, implicitCommands, MacroExpander, unicodeSubRegEx, uSubsAndSups, unicodeAccents, unicodeSymbols, Parser, parseTree, render, renderToString, generateParseTree, renderError, renderToDomTree, renderToHTMLTree, katex;
var init_katex = __esm({
  "node_modules/katex/dist/katex.mjs"() {
    SourceLocation = class {
      constructor(lexer, start, end) {
        this.lexer = void 0;
        this.start = void 0;
        this.end = void 0;
        this.lexer = lexer;
        this.start = start;
        this.end = end;
      }
      static range(first, second) {
        if (!second) {
          return first && first.loc;
        } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {
          return null;
        } else {
          return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);
        }
      }
    };
    Token = class {
      constructor(text2, loc) {
        this.text = void 0;
        this.loc = void 0;
        this.noexpand = void 0;
        this.treatAsRelax = void 0;
        this.text = text2;
        this.loc = loc;
      }
      range(endToken, text2) {
        return new Token(text2, SourceLocation.range(this, endToken));
      }
    };
    ParseError = class {
      constructor(message, token) {
        this.position = void 0;
        var error = "KaTeX parse error: " + message;
        var start;
        var loc = token && token.loc;
        if (loc && loc.start <= loc.end) {
          var input = loc.lexer.input;
          start = loc.start;
          var end = loc.end;
          if (start === input.length) {
            error += " at end of input: ";
          } else {
            error += " at position " + (start + 1) + ": ";
          }
          var underlined = input.slice(start, end).replace(/[^]/g, "$&\u0332");
          var left;
          if (start > 15) {
            left = "\u2026" + input.slice(start - 15, start);
          } else {
            left = input.slice(0, start);
          }
          var right;
          if (end + 15 < input.length) {
            right = input.slice(end, end + 15) + "\u2026";
          } else {
            right = input.slice(end);
          }
          error += left + underlined + right;
        }
        var self2 = new Error(error);
        self2.name = "ParseError";
        self2.__proto__ = ParseError.prototype;
        self2.position = start;
        return self2;
      }
    };
    ParseError.prototype.__proto__ = Error.prototype;
    contains = function contains2(list, elem) {
      return list.indexOf(elem) !== -1;
    };
    deflt = function deflt2(setting, defaultIfUndefined) {
      return setting === void 0 ? defaultIfUndefined : setting;
    };
    uppercase = /([A-Z])/g;
    hyphenate = function hyphenate2(str) {
      return str.replace(uppercase, "-$1").toLowerCase();
    };
    ESCAPE_LOOKUP = {
      "&": "&amp;",
      ">": "&gt;",
      "<": "&lt;",
      '"': "&quot;",
      "'": "&#x27;"
    };
    ESCAPE_REGEX = /[&><"']/g;
    getBaseElem = function getBaseElem2(group) {
      if (group.type === "ordgroup") {
        if (group.body.length === 1) {
          return getBaseElem2(group.body[0]);
        } else {
          return group;
        }
      } else if (group.type === "color") {
        if (group.body.length === 1) {
          return getBaseElem2(group.body[0]);
        } else {
          return group;
        }
      } else if (group.type === "font") {
        return getBaseElem2(group.body);
      } else {
        return group;
      }
    };
    isCharacterBox = function isCharacterBox2(group) {
      var baseElem = getBaseElem(group);
      return baseElem.type === "mathord" || baseElem.type === "textord" || baseElem.type === "atom";
    };
    assert = function assert2(value) {
      if (!value) {
        throw new Error("Expected non-null, but got " + String(value));
      }
      return value;
    };
    protocolFromUrl = function protocolFromUrl2(url) {
      var protocol = /^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);
      return protocol != null ? protocol[1] : "_relative";
    };
    utils = {
      contains,
      deflt,
      escape,
      hyphenate,
      getBaseElem,
      isCharacterBox,
      protocolFromUrl
    };
    SETTINGS_SCHEMA = {
      displayMode: {
        type: "boolean",
        description: "Render math in display mode, which puts the math in display style (so \\int and \\sum are large, for example), and centers the math on the page on its own line.",
        cli: "-d, --display-mode"
      },
      output: {
        type: {
          enum: ["htmlAndMathml", "html", "mathml"]
        },
        description: "Determines the markup language of the output.",
        cli: "-F, --format <type>"
      },
      leqno: {
        type: "boolean",
        description: "Render display math in leqno style (left-justified tags)."
      },
      fleqn: {
        type: "boolean",
        description: "Render display math flush left."
      },
      throwOnError: {
        type: "boolean",
        default: true,
        cli: "-t, --no-throw-on-error",
        cliDescription: "Render errors (in the color given by --error-color) instead of throwing a ParseError exception when encountering an error."
      },
      errorColor: {
        type: "string",
        default: "#cc0000",
        cli: "-c, --error-color <color>",
        cliDescription: "A color string given in the format 'rgb' or 'rrggbb' (no #). This option determines the color of errors rendered by the -t option.",
        cliProcessor: (color) => "#" + color
      },
      macros: {
        type: "object",
        cli: "-m, --macro <def>",
        cliDescription: "Define custom macro of the form '\\foo:expansion' (use multiple -m arguments for multiple macros).",
        cliDefault: [],
        cliProcessor: (def, defs) => {
          defs.push(def);
          return defs;
        }
      },
      minRuleThickness: {
        type: "number",
        description: "Specifies a minimum thickness, in ems, for fraction lines, `\\sqrt` top lines, `{array}` vertical lines, `\\hline`, `\\hdashline`, `\\underline`, `\\overline`, and the borders of `\\fbox`, `\\boxed`, and `\\fcolorbox`.",
        processor: (t3) => Math.max(0, t3),
        cli: "--min-rule-thickness <size>",
        cliProcessor: parseFloat
      },
      colorIsTextColor: {
        type: "boolean",
        description: "Makes \\color behave like LaTeX's 2-argument \\textcolor, instead of LaTeX's one-argument \\color mode change.",
        cli: "-b, --color-is-text-color"
      },
      strict: {
        type: [{
          enum: ["warn", "ignore", "error"]
        }, "boolean", "function"],
        description: "Turn on strict / LaTeX faithfulness mode, which throws an error if the input uses features that are not supported by LaTeX.",
        cli: "-S, --strict",
        cliDefault: false
      },
      trust: {
        type: ["boolean", "function"],
        description: "Trust the input, enabling all HTML features such as \\url.",
        cli: "-T, --trust"
      },
      maxSize: {
        type: "number",
        default: Infinity,
        description: "If non-zero, all user-specified sizes, e.g. in \\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, elements and spaces can be arbitrarily large",
        processor: (s6) => Math.max(0, s6),
        cli: "-s, --max-size <n>",
        cliProcessor: parseInt
      },
      maxExpand: {
        type: "number",
        default: 1e3,
        description: "Limit the number of macro expansions to the specified number, to prevent e.g. infinite macro loops. If set to Infinity, the macro expander will try to fully expand as in LaTeX.",
        processor: (n3) => Math.max(0, n3),
        cli: "-e, --max-expand <n>",
        cliProcessor: (n3) => n3 === "Infinity" ? Infinity : parseInt(n3)
      },
      globalGroup: {
        type: "boolean",
        cli: false
      }
    };
    Settings = class {
      constructor(options) {
        this.displayMode = void 0;
        this.output = void 0;
        this.leqno = void 0;
        this.fleqn = void 0;
        this.throwOnError = void 0;
        this.errorColor = void 0;
        this.macros = void 0;
        this.minRuleThickness = void 0;
        this.colorIsTextColor = void 0;
        this.strict = void 0;
        this.trust = void 0;
        this.maxSize = void 0;
        this.maxExpand = void 0;
        this.globalGroup = void 0;
        options = options || {};
        for (var prop in SETTINGS_SCHEMA) {
          if (SETTINGS_SCHEMA.hasOwnProperty(prop)) {
            var schema = SETTINGS_SCHEMA[prop];
            this[prop] = options[prop] !== void 0 ? schema.processor ? schema.processor(options[prop]) : options[prop] : getDefaultValue(schema);
          }
        }
      }
      reportNonstrict(errorCode, errorMsg, token) {
        var strict = this.strict;
        if (typeof strict === "function") {
          strict = strict(errorCode, errorMsg, token);
        }
        if (!strict || strict === "ignore") {
          return;
        } else if (strict === true || strict === "error") {
          throw new ParseError("LaTeX-incompatible input and strict mode is set to 'error': " + (errorMsg + " [" + errorCode + "]"), token);
        } else if (strict === "warn") {
          typeof console !== "undefined" && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + (errorMsg + " [" + errorCode + "]"));
        } else {
          typeof console !== "undefined" && console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized '" + strict + "': " + errorMsg + " [" + errorCode + "]"));
        }
      }
      useStrictBehavior(errorCode, errorMsg, token) {
        var strict = this.strict;
        if (typeof strict === "function") {
          try {
            strict = strict(errorCode, errorMsg, token);
          } catch (error) {
            strict = "error";
          }
        }
        if (!strict || strict === "ignore") {
          return false;
        } else if (strict === true || strict === "error") {
          return true;
        } else if (strict === "warn") {
          typeof console !== "undefined" && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + (errorMsg + " [" + errorCode + "]"));
          return false;
        } else {
          typeof console !== "undefined" && console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized '" + strict + "': " + errorMsg + " [" + errorCode + "]"));
          return false;
        }
      }
      isTrusted(context) {
        if (context.url && !context.protocol) {
          context.protocol = utils.protocolFromUrl(context.url);
        }
        var trust = typeof this.trust === "function" ? this.trust(context) : this.trust;
        return Boolean(trust);
      }
    };
    Style = class {
      constructor(id, size, cramped) {
        this.id = void 0;
        this.size = void 0;
        this.cramped = void 0;
        this.id = id;
        this.size = size;
        this.cramped = cramped;
      }
      sup() {
        return styles[sup[this.id]];
      }
      sub() {
        return styles[sub[this.id]];
      }
      fracNum() {
        return styles[fracNum[this.id]];
      }
      fracDen() {
        return styles[fracDen[this.id]];
      }
      cramp() {
        return styles[cramp[this.id]];
      }
      text() {
        return styles[text$1[this.id]];
      }
      isTight() {
        return this.size >= 2;
      }
    };
    D4 = 0;
    Dc = 1;
    T4 = 2;
    Tc = 3;
    S5 = 4;
    Sc = 5;
    SS = 6;
    SSc = 7;
    styles = [new Style(D4, 0, false), new Style(Dc, 0, true), new Style(T4, 1, false), new Style(Tc, 1, true), new Style(S5, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)];
    sup = [S5, Sc, S5, Sc, SS, SSc, SS, SSc];
    sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];
    fracNum = [T4, Tc, S5, Sc, SS, SSc, SS, SSc];
    fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];
    cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];
    text$1 = [D4, Dc, T4, Tc, T4, Tc, T4, Tc];
    Style$1 = {
      DISPLAY: styles[D4],
      TEXT: styles[T4],
      SCRIPT: styles[S5],
      SCRIPTSCRIPT: styles[SS]
    };
    scriptData = [{
      name: "latin",
      blocks: [
        [256, 591],
        [768, 879]
      ]
    }, {
      name: "cyrillic",
      blocks: [[1024, 1279]]
    }, {
      name: "armenian",
      blocks: [[1328, 1423]]
    }, {
      name: "brahmic",
      blocks: [[2304, 4255]]
    }, {
      name: "georgian",
      blocks: [[4256, 4351]]
    }, {
      name: "cjk",
      blocks: [
        [12288, 12543],
        [19968, 40879],
        [65280, 65376]
      ]
    }, {
      name: "hangul",
      blocks: [[44032, 55215]]
    }];
    allBlocks = [];
    scriptData.forEach((s6) => s6.blocks.forEach((b6) => allBlocks.push(...b6)));
    hLinePad = 80;
    sqrtMain = function sqrtMain2(extraViniculum, hLinePad2) {
      return "M95," + (622 + extraViniculum + hLinePad2) + "\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl" + extraViniculum / 2.075 + " -" + extraViniculum + "\nc5.3,-9.3,12,-14,20,-14\nH400000v" + (40 + extraViniculum) + "H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM" + (834 + extraViniculum) + " " + hLinePad2 + "h400000v" + (40 + extraViniculum) + "h-400000z";
    };
    sqrtSize1 = function sqrtSize12(extraViniculum, hLinePad2) {
      return "M263," + (601 + extraViniculum + hLinePad2) + "c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl" + extraViniculum / 2.084 + " -" + extraViniculum + "\nc4.7,-7.3,11,-11,19,-11\nH40000v" + (40 + extraViniculum) + "H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM" + (1001 + extraViniculum) + " " + hLinePad2 + "h400000v" + (40 + extraViniculum) + "h-400000z";
    };
    sqrtSize2 = function sqrtSize22(extraViniculum, hLinePad2) {
      return "M983 " + (10 + extraViniculum + hLinePad2) + "\nl" + extraViniculum / 3.13 + " -" + extraViniculum + "\nc4,-6.7,10,-10,18,-10 H400000v" + (40 + extraViniculum) + "\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM" + (1001 + extraViniculum) + " " + hLinePad2 + "h400000v" + (40 + extraViniculum) + "h-400000z";
    };
    sqrtSize3 = function sqrtSize32(extraViniculum, hLinePad2) {
      return "M424," + (2398 + extraViniculum + hLinePad2) + "\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl" + extraViniculum / 4.223 + " -" + extraViniculum + "c4,-6.7,10,-10,18,-10 H400000\nv" + (40 + extraViniculum) + "H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M" + (1001 + extraViniculum) + " " + hLinePad2 + "\nh400000v" + (40 + extraViniculum) + "h-400000z";
    };
    sqrtSize4 = function sqrtSize42(extraViniculum, hLinePad2) {
      return "M473," + (2713 + extraViniculum + hLinePad2) + "\nc339.3,-1799.3,509.3,-2700,510,-2702 l" + extraViniculum / 5.298 + " -" + extraViniculum + "\nc3.3,-7.3,9.3,-11,18,-11 H400000v" + (40 + extraViniculum) + "H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM" + (1001 + extraViniculum) + " " + hLinePad2 + "h400000v" + (40 + extraViniculum) + "H1017.7z";
    };
    phasePath = function phasePath2(y7) {
      var x5 = y7 / 2;
      return "M400000 " + y7 + " H0 L" + x5 + " 0 l65 45 L145 " + (y7 - 80) + " H400000z";
    };
    sqrtTall = function sqrtTall2(extraViniculum, hLinePad2, viewBoxHeight) {
      var vertSegment = viewBoxHeight - 54 - hLinePad2 - extraViniculum;
      return "M702 " + (extraViniculum + hLinePad2) + "H400000" + (40 + extraViniculum) + "\nH742v" + vertSegment + "l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 " + hLinePad2 + "H400000v" + (40 + extraViniculum) + "H742z";
    };
    sqrtPath = function sqrtPath2(size, extraViniculum, viewBoxHeight) {
      extraViniculum = 1e3 * extraViniculum;
      var path2 = "";
      switch (size) {
        case "sqrtMain":
          path2 = sqrtMain(extraViniculum, hLinePad);
          break;
        case "sqrtSize1":
          path2 = sqrtSize1(extraViniculum, hLinePad);
          break;
        case "sqrtSize2":
          path2 = sqrtSize2(extraViniculum, hLinePad);
          break;
        case "sqrtSize3":
          path2 = sqrtSize3(extraViniculum, hLinePad);
          break;
        case "sqrtSize4":
          path2 = sqrtSize4(extraViniculum, hLinePad);
          break;
        case "sqrtTall":
          path2 = sqrtTall(extraViniculum, hLinePad, viewBoxHeight);
      }
      return path2;
    };
    innerPath = function innerPath2(name5, height) {
      switch (name5) {
        case "\u239C":
          return "M291 0 H417 V" + height + " H291z M291 0 H417 V" + height + " H291z";
        case "\u2223":
          return "M145 0 H188 V" + height + " H145z M145 0 H188 V" + height + " H145z";
        case "\u2225":
          return "M145 0 H188 V" + height + " H145z M145 0 H188 V" + height + " H145z" + ("M367 0 H410 V" + height + " H367z M367 0 H410 V" + height + " H367z");
        case "\u239F":
          return "M457 0 H583 V" + height + " H457z M457 0 H583 V" + height + " H457z";
        case "\u23A2":
          return "M319 0 H403 V" + height + " H319z M319 0 H403 V" + height + " H319z";
        case "\u23A5":
          return "M263 0 H347 V" + height + " H263z M263 0 H347 V" + height + " H263z";
        case "\u23AA":
          return "M384 0 H504 V" + height + " H384z M384 0 H504 V" + height + " H384z";
        case "\u23D0":
          return "M312 0 H355 V" + height + " H312z M312 0 H355 V" + height + " H312z";
        case "\u2016":
          return "M257 0 H300 V" + height + " H257z M257 0 H300 V" + height + " H257z" + ("M478 0 H521 V" + height + " H478z M478 0 H521 V" + height + " H478z");
        default:
          return "";
      }
    };
    path = {
      doubleleftarrow: "M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",
      doublerightarrow: "M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",
      leftarrow: "M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",
      leftbrace: "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",
      leftbraceunder: "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",
      leftgroup: "M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",
      leftgroupunder: "M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",
      leftharpoon: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",
      leftharpoonplus: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",
      leftharpoondown: "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",
      leftharpoondownplus: "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",
      lefthook: "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",
      leftlinesegment: "M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",
      leftmapsto: "M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",
      leftToFrom: "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",
      longequal: "M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",
      midbrace: "M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",
      midbraceunder: "M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",
      oiintSize1: "M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z",
      oiintSize2: "M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z",
      oiiintSize1: "M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z",
      oiiintSize2: "M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z",
      rightarrow: "M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",
      rightbrace: "M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",
      rightbraceunder: "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",
      rightgroup: "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",
      rightgroupunder: "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",
      rightharpoon: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",
      rightharpoonplus: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",
      rightharpoondown: "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",
      rightharpoondownplus: "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",
      righthook: "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",
      rightlinesegment: "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",
      rightToFrom: "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",
      twoheadleftarrow: "M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",
      twoheadrightarrow: "M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",
      tilde1: "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",
      tilde2: "M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",
      tilde3: "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",
      tilde4: "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",
      vec: "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z",
      widehat1: "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",
      widehat2: "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
      widehat3: "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
      widehat4: "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
      widecheck1: "M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z",
      widecheck2: "M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
      widecheck3: "M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
      widecheck4: "M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
      baraboveleftarrow: "M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z",
      rightarrowabovebar: "M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z",
      baraboveshortleftharpoon: "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z",
      rightharpoonaboveshortbar: "M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z",
      shortbaraboveleftharpoon: "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z",
      shortrightharpoonabovebar: "M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"
    };
    tallDelim = function tallDelim2(label, midHeight) {
      switch (label) {
        case "lbrack":
          return "M403 1759 V84 H666 V0 H319 V1759 v" + midHeight + " v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v" + midHeight + " v1759 h84z";
        case "rbrack":
          return "M347 1759 V0 H0 V84 H263 V1759 v" + midHeight + " v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v" + midHeight + " v1759 h84z";
        case "vert":
          return "M145 15 v585 v" + midHeight + " v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v" + -midHeight + " v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v" + midHeight + " v585 h43z";
        case "doublevert":
          return "M145 15 v585 v" + midHeight + " v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v" + -midHeight + " v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v" + midHeight + " v585 h43z\nM367 15 v585 v" + midHeight + " v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v" + -midHeight + " v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v" + midHeight + " v585 h43z";
        case "lfloor":
          return "M319 602 V0 H403 V602 v" + midHeight + " v1715 h263 v84 H319z\nMM319 602 V0 H403 V602 v" + midHeight + " v1715 H319z";
        case "rfloor":
          return "M319 602 V0 H403 V602 v" + midHeight + " v1799 H0 v-84 H319z\nMM319 602 V0 H403 V602 v" + midHeight + " v1715 H319z";
        case "lceil":
          return "M403 1759 V84 H666 V0 H319 V1759 v" + midHeight + " v602 h84z\nM403 1759 V0 H319 V1759 v" + midHeight + " v602 h84z";
        case "rceil":
          return "M347 1759 V0 H0 V84 H263 V1759 v" + midHeight + " v602 h84z\nM347 1759 V0 h-84 V1759 v" + midHeight + " v602 h84z";
        case "lparen":
          return "M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0," + (midHeight + 84) + "c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-" + (midHeight + 92) + "c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z";
        case "rparen":
          return "M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0," + (midHeight + 9) + "\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-" + (midHeight + 144) + "c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z";
        default:
          throw new Error("Unknown stretchy delimiter.");
      }
    };
    DocumentFragment = class {
      constructor(children) {
        this.children = void 0;
        this.classes = void 0;
        this.height = void 0;
        this.depth = void 0;
        this.maxFontSize = void 0;
        this.style = void 0;
        this.children = children;
        this.classes = [];
        this.height = 0;
        this.depth = 0;
        this.maxFontSize = 0;
        this.style = {};
      }
      hasClass(className) {
        return utils.contains(this.classes, className);
      }
      toNode() {
        var frag = document.createDocumentFragment();
        for (var i4 = 0; i4 < this.children.length; i4++) {
          frag.appendChild(this.children[i4].toNode());
        }
        return frag;
      }
      toMarkup() {
        var markup = "";
        for (var i4 = 0; i4 < this.children.length; i4++) {
          markup += this.children[i4].toMarkup();
        }
        return markup;
      }
      toText() {
        var toText = (child) => child.toText();
        return this.children.map(toText).join("");
      }
    };
    fontMetricsData = {
      "AMS-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "65": [0, 0.68889, 0, 0, 0.72222],
        "66": [0, 0.68889, 0, 0, 0.66667],
        "67": [0, 0.68889, 0, 0, 0.72222],
        "68": [0, 0.68889, 0, 0, 0.72222],
        "69": [0, 0.68889, 0, 0, 0.66667],
        "70": [0, 0.68889, 0, 0, 0.61111],
        "71": [0, 0.68889, 0, 0, 0.77778],
        "72": [0, 0.68889, 0, 0, 0.77778],
        "73": [0, 0.68889, 0, 0, 0.38889],
        "74": [0.16667, 0.68889, 0, 0, 0.5],
        "75": [0, 0.68889, 0, 0, 0.77778],
        "76": [0, 0.68889, 0, 0, 0.66667],
        "77": [0, 0.68889, 0, 0, 0.94445],
        "78": [0, 0.68889, 0, 0, 0.72222],
        "79": [0.16667, 0.68889, 0, 0, 0.77778],
        "80": [0, 0.68889, 0, 0, 0.61111],
        "81": [0.16667, 0.68889, 0, 0, 0.77778],
        "82": [0, 0.68889, 0, 0, 0.72222],
        "83": [0, 0.68889, 0, 0, 0.55556],
        "84": [0, 0.68889, 0, 0, 0.66667],
        "85": [0, 0.68889, 0, 0, 0.72222],
        "86": [0, 0.68889, 0, 0, 0.72222],
        "87": [0, 0.68889, 0, 0, 1],
        "88": [0, 0.68889, 0, 0, 0.72222],
        "89": [0, 0.68889, 0, 0, 0.72222],
        "90": [0, 0.68889, 0, 0, 0.66667],
        "107": [0, 0.68889, 0, 0, 0.55556],
        "160": [0, 0, 0, 0, 0.25],
        "165": [0, 0.675, 0.025, 0, 0.75],
        "174": [0.15559, 0.69224, 0, 0, 0.94666],
        "240": [0, 0.68889, 0, 0, 0.55556],
        "295": [0, 0.68889, 0, 0, 0.54028],
        "710": [0, 0.825, 0, 0, 2.33334],
        "732": [0, 0.9, 0, 0, 2.33334],
        "770": [0, 0.825, 0, 0, 2.33334],
        "771": [0, 0.9, 0, 0, 2.33334],
        "989": [0.08167, 0.58167, 0, 0, 0.77778],
        "1008": [0, 0.43056, 0.04028, 0, 0.66667],
        "8245": [0, 0.54986, 0, 0, 0.275],
        "8463": [0, 0.68889, 0, 0, 0.54028],
        "8487": [0, 0.68889, 0, 0, 0.72222],
        "8498": [0, 0.68889, 0, 0, 0.55556],
        "8502": [0, 0.68889, 0, 0, 0.66667],
        "8503": [0, 0.68889, 0, 0, 0.44445],
        "8504": [0, 0.68889, 0, 0, 0.66667],
        "8513": [0, 0.68889, 0, 0, 0.63889],
        "8592": [-0.03598, 0.46402, 0, 0, 0.5],
        "8594": [-0.03598, 0.46402, 0, 0, 0.5],
        "8602": [-0.13313, 0.36687, 0, 0, 1],
        "8603": [-0.13313, 0.36687, 0, 0, 1],
        "8606": [0.01354, 0.52239, 0, 0, 1],
        "8608": [0.01354, 0.52239, 0, 0, 1],
        "8610": [0.01354, 0.52239, 0, 0, 1.11111],
        "8611": [0.01354, 0.52239, 0, 0, 1.11111],
        "8619": [0, 0.54986, 0, 0, 1],
        "8620": [0, 0.54986, 0, 0, 1],
        "8621": [-0.13313, 0.37788, 0, 0, 1.38889],
        "8622": [-0.13313, 0.36687, 0, 0, 1],
        "8624": [0, 0.69224, 0, 0, 0.5],
        "8625": [0, 0.69224, 0, 0, 0.5],
        "8630": [0, 0.43056, 0, 0, 1],
        "8631": [0, 0.43056, 0, 0, 1],
        "8634": [0.08198, 0.58198, 0, 0, 0.77778],
        "8635": [0.08198, 0.58198, 0, 0, 0.77778],
        "8638": [0.19444, 0.69224, 0, 0, 0.41667],
        "8639": [0.19444, 0.69224, 0, 0, 0.41667],
        "8642": [0.19444, 0.69224, 0, 0, 0.41667],
        "8643": [0.19444, 0.69224, 0, 0, 0.41667],
        "8644": [0.1808, 0.675, 0, 0, 1],
        "8646": [0.1808, 0.675, 0, 0, 1],
        "8647": [0.1808, 0.675, 0, 0, 1],
        "8648": [0.19444, 0.69224, 0, 0, 0.83334],
        "8649": [0.1808, 0.675, 0, 0, 1],
        "8650": [0.19444, 0.69224, 0, 0, 0.83334],
        "8651": [0.01354, 0.52239, 0, 0, 1],
        "8652": [0.01354, 0.52239, 0, 0, 1],
        "8653": [-0.13313, 0.36687, 0, 0, 1],
        "8654": [-0.13313, 0.36687, 0, 0, 1],
        "8655": [-0.13313, 0.36687, 0, 0, 1],
        "8666": [0.13667, 0.63667, 0, 0, 1],
        "8667": [0.13667, 0.63667, 0, 0, 1],
        "8669": [-0.13313, 0.37788, 0, 0, 1],
        "8672": [-0.064, 0.437, 0, 0, 1.334],
        "8674": [-0.064, 0.437, 0, 0, 1.334],
        "8705": [0, 0.825, 0, 0, 0.5],
        "8708": [0, 0.68889, 0, 0, 0.55556],
        "8709": [0.08167, 0.58167, 0, 0, 0.77778],
        "8717": [0, 0.43056, 0, 0, 0.42917],
        "8722": [-0.03598, 0.46402, 0, 0, 0.5],
        "8724": [0.08198, 0.69224, 0, 0, 0.77778],
        "8726": [0.08167, 0.58167, 0, 0, 0.77778],
        "8733": [0, 0.69224, 0, 0, 0.77778],
        "8736": [0, 0.69224, 0, 0, 0.72222],
        "8737": [0, 0.69224, 0, 0, 0.72222],
        "8738": [0.03517, 0.52239, 0, 0, 0.72222],
        "8739": [0.08167, 0.58167, 0, 0, 0.22222],
        "8740": [0.25142, 0.74111, 0, 0, 0.27778],
        "8741": [0.08167, 0.58167, 0, 0, 0.38889],
        "8742": [0.25142, 0.74111, 0, 0, 0.5],
        "8756": [0, 0.69224, 0, 0, 0.66667],
        "8757": [0, 0.69224, 0, 0, 0.66667],
        "8764": [-0.13313, 0.36687, 0, 0, 0.77778],
        "8765": [-0.13313, 0.37788, 0, 0, 0.77778],
        "8769": [-0.13313, 0.36687, 0, 0, 0.77778],
        "8770": [-0.03625, 0.46375, 0, 0, 0.77778],
        "8774": [0.30274, 0.79383, 0, 0, 0.77778],
        "8776": [-0.01688, 0.48312, 0, 0, 0.77778],
        "8778": [0.08167, 0.58167, 0, 0, 0.77778],
        "8782": [0.06062, 0.54986, 0, 0, 0.77778],
        "8783": [0.06062, 0.54986, 0, 0, 0.77778],
        "8785": [0.08198, 0.58198, 0, 0, 0.77778],
        "8786": [0.08198, 0.58198, 0, 0, 0.77778],
        "8787": [0.08198, 0.58198, 0, 0, 0.77778],
        "8790": [0, 0.69224, 0, 0, 0.77778],
        "8791": [0.22958, 0.72958, 0, 0, 0.77778],
        "8796": [0.08198, 0.91667, 0, 0, 0.77778],
        "8806": [0.25583, 0.75583, 0, 0, 0.77778],
        "8807": [0.25583, 0.75583, 0, 0, 0.77778],
        "8808": [0.25142, 0.75726, 0, 0, 0.77778],
        "8809": [0.25142, 0.75726, 0, 0, 0.77778],
        "8812": [0.25583, 0.75583, 0, 0, 0.5],
        "8814": [0.20576, 0.70576, 0, 0, 0.77778],
        "8815": [0.20576, 0.70576, 0, 0, 0.77778],
        "8816": [0.30274, 0.79383, 0, 0, 0.77778],
        "8817": [0.30274, 0.79383, 0, 0, 0.77778],
        "8818": [0.22958, 0.72958, 0, 0, 0.77778],
        "8819": [0.22958, 0.72958, 0, 0, 0.77778],
        "8822": [0.1808, 0.675, 0, 0, 0.77778],
        "8823": [0.1808, 0.675, 0, 0, 0.77778],
        "8828": [0.13667, 0.63667, 0, 0, 0.77778],
        "8829": [0.13667, 0.63667, 0, 0, 0.77778],
        "8830": [0.22958, 0.72958, 0, 0, 0.77778],
        "8831": [0.22958, 0.72958, 0, 0, 0.77778],
        "8832": [0.20576, 0.70576, 0, 0, 0.77778],
        "8833": [0.20576, 0.70576, 0, 0, 0.77778],
        "8840": [0.30274, 0.79383, 0, 0, 0.77778],
        "8841": [0.30274, 0.79383, 0, 0, 0.77778],
        "8842": [0.13597, 0.63597, 0, 0, 0.77778],
        "8843": [0.13597, 0.63597, 0, 0, 0.77778],
        "8847": [0.03517, 0.54986, 0, 0, 0.77778],
        "8848": [0.03517, 0.54986, 0, 0, 0.77778],
        "8858": [0.08198, 0.58198, 0, 0, 0.77778],
        "8859": [0.08198, 0.58198, 0, 0, 0.77778],
        "8861": [0.08198, 0.58198, 0, 0, 0.77778],
        "8862": [0, 0.675, 0, 0, 0.77778],
        "8863": [0, 0.675, 0, 0, 0.77778],
        "8864": [0, 0.675, 0, 0, 0.77778],
        "8865": [0, 0.675, 0, 0, 0.77778],
        "8872": [0, 0.69224, 0, 0, 0.61111],
        "8873": [0, 0.69224, 0, 0, 0.72222],
        "8874": [0, 0.69224, 0, 0, 0.88889],
        "8876": [0, 0.68889, 0, 0, 0.61111],
        "8877": [0, 0.68889, 0, 0, 0.61111],
        "8878": [0, 0.68889, 0, 0, 0.72222],
        "8879": [0, 0.68889, 0, 0, 0.72222],
        "8882": [0.03517, 0.54986, 0, 0, 0.77778],
        "8883": [0.03517, 0.54986, 0, 0, 0.77778],
        "8884": [0.13667, 0.63667, 0, 0, 0.77778],
        "8885": [0.13667, 0.63667, 0, 0, 0.77778],
        "8888": [0, 0.54986, 0, 0, 1.11111],
        "8890": [0.19444, 0.43056, 0, 0, 0.55556],
        "8891": [0.19444, 0.69224, 0, 0, 0.61111],
        "8892": [0.19444, 0.69224, 0, 0, 0.61111],
        "8901": [0, 0.54986, 0, 0, 0.27778],
        "8903": [0.08167, 0.58167, 0, 0, 0.77778],
        "8905": [0.08167, 0.58167, 0, 0, 0.77778],
        "8906": [0.08167, 0.58167, 0, 0, 0.77778],
        "8907": [0, 0.69224, 0, 0, 0.77778],
        "8908": [0, 0.69224, 0, 0, 0.77778],
        "8909": [-0.03598, 0.46402, 0, 0, 0.77778],
        "8910": [0, 0.54986, 0, 0, 0.76042],
        "8911": [0, 0.54986, 0, 0, 0.76042],
        "8912": [0.03517, 0.54986, 0, 0, 0.77778],
        "8913": [0.03517, 0.54986, 0, 0, 0.77778],
        "8914": [0, 0.54986, 0, 0, 0.66667],
        "8915": [0, 0.54986, 0, 0, 0.66667],
        "8916": [0, 0.69224, 0, 0, 0.66667],
        "8918": [0.0391, 0.5391, 0, 0, 0.77778],
        "8919": [0.0391, 0.5391, 0, 0, 0.77778],
        "8920": [0.03517, 0.54986, 0, 0, 1.33334],
        "8921": [0.03517, 0.54986, 0, 0, 1.33334],
        "8922": [0.38569, 0.88569, 0, 0, 0.77778],
        "8923": [0.38569, 0.88569, 0, 0, 0.77778],
        "8926": [0.13667, 0.63667, 0, 0, 0.77778],
        "8927": [0.13667, 0.63667, 0, 0, 0.77778],
        "8928": [0.30274, 0.79383, 0, 0, 0.77778],
        "8929": [0.30274, 0.79383, 0, 0, 0.77778],
        "8934": [0.23222, 0.74111, 0, 0, 0.77778],
        "8935": [0.23222, 0.74111, 0, 0, 0.77778],
        "8936": [0.23222, 0.74111, 0, 0, 0.77778],
        "8937": [0.23222, 0.74111, 0, 0, 0.77778],
        "8938": [0.20576, 0.70576, 0, 0, 0.77778],
        "8939": [0.20576, 0.70576, 0, 0, 0.77778],
        "8940": [0.30274, 0.79383, 0, 0, 0.77778],
        "8941": [0.30274, 0.79383, 0, 0, 0.77778],
        "8994": [0.19444, 0.69224, 0, 0, 0.77778],
        "8995": [0.19444, 0.69224, 0, 0, 0.77778],
        "9416": [0.15559, 0.69224, 0, 0, 0.90222],
        "9484": [0, 0.69224, 0, 0, 0.5],
        "9488": [0, 0.69224, 0, 0, 0.5],
        "9492": [0, 0.37788, 0, 0, 0.5],
        "9496": [0, 0.37788, 0, 0, 0.5],
        "9585": [0.19444, 0.68889, 0, 0, 0.88889],
        "9586": [0.19444, 0.74111, 0, 0, 0.88889],
        "9632": [0, 0.675, 0, 0, 0.77778],
        "9633": [0, 0.675, 0, 0, 0.77778],
        "9650": [0, 0.54986, 0, 0, 0.72222],
        "9651": [0, 0.54986, 0, 0, 0.72222],
        "9654": [0.03517, 0.54986, 0, 0, 0.77778],
        "9660": [0, 0.54986, 0, 0, 0.72222],
        "9661": [0, 0.54986, 0, 0, 0.72222],
        "9664": [0.03517, 0.54986, 0, 0, 0.77778],
        "9674": [0.11111, 0.69224, 0, 0, 0.66667],
        "9733": [0.19444, 0.69224, 0, 0, 0.94445],
        "10003": [0, 0.69224, 0, 0, 0.83334],
        "10016": [0, 0.69224, 0, 0, 0.83334],
        "10731": [0.11111, 0.69224, 0, 0, 0.66667],
        "10846": [0.19444, 0.75583, 0, 0, 0.61111],
        "10877": [0.13667, 0.63667, 0, 0, 0.77778],
        "10878": [0.13667, 0.63667, 0, 0, 0.77778],
        "10885": [0.25583, 0.75583, 0, 0, 0.77778],
        "10886": [0.25583, 0.75583, 0, 0, 0.77778],
        "10887": [0.13597, 0.63597, 0, 0, 0.77778],
        "10888": [0.13597, 0.63597, 0, 0, 0.77778],
        "10889": [0.26167, 0.75726, 0, 0, 0.77778],
        "10890": [0.26167, 0.75726, 0, 0, 0.77778],
        "10891": [0.48256, 0.98256, 0, 0, 0.77778],
        "10892": [0.48256, 0.98256, 0, 0, 0.77778],
        "10901": [0.13667, 0.63667, 0, 0, 0.77778],
        "10902": [0.13667, 0.63667, 0, 0, 0.77778],
        "10933": [0.25142, 0.75726, 0, 0, 0.77778],
        "10934": [0.25142, 0.75726, 0, 0, 0.77778],
        "10935": [0.26167, 0.75726, 0, 0, 0.77778],
        "10936": [0.26167, 0.75726, 0, 0, 0.77778],
        "10937": [0.26167, 0.75726, 0, 0, 0.77778],
        "10938": [0.26167, 0.75726, 0, 0, 0.77778],
        "10949": [0.25583, 0.75583, 0, 0, 0.77778],
        "10950": [0.25583, 0.75583, 0, 0, 0.77778],
        "10955": [0.28481, 0.79383, 0, 0, 0.77778],
        "10956": [0.28481, 0.79383, 0, 0, 0.77778],
        "57350": [0.08167, 0.58167, 0, 0, 0.22222],
        "57351": [0.08167, 0.58167, 0, 0, 0.38889],
        "57352": [0.08167, 0.58167, 0, 0, 0.77778],
        "57353": [0, 0.43056, 0.04028, 0, 0.66667],
        "57356": [0.25142, 0.75726, 0, 0, 0.77778],
        "57357": [0.25142, 0.75726, 0, 0, 0.77778],
        "57358": [0.41951, 0.91951, 0, 0, 0.77778],
        "57359": [0.30274, 0.79383, 0, 0, 0.77778],
        "57360": [0.30274, 0.79383, 0, 0, 0.77778],
        "57361": [0.41951, 0.91951, 0, 0, 0.77778],
        "57366": [0.25142, 0.75726, 0, 0, 0.77778],
        "57367": [0.25142, 0.75726, 0, 0, 0.77778],
        "57368": [0.25142, 0.75726, 0, 0, 0.77778],
        "57369": [0.25142, 0.75726, 0, 0, 0.77778],
        "57370": [0.13597, 0.63597, 0, 0, 0.77778],
        "57371": [0.13597, 0.63597, 0, 0, 0.77778]
      },
      "Caligraphic-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "65": [0, 0.68333, 0, 0.19445, 0.79847],
        "66": [0, 0.68333, 0.03041, 0.13889, 0.65681],
        "67": [0, 0.68333, 0.05834, 0.13889, 0.52653],
        "68": [0, 0.68333, 0.02778, 0.08334, 0.77139],
        "69": [0, 0.68333, 0.08944, 0.11111, 0.52778],
        "70": [0, 0.68333, 0.09931, 0.11111, 0.71875],
        "71": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],
        "72": [0, 0.68333, 965e-5, 0.11111, 0.84452],
        "73": [0, 0.68333, 0.07382, 0, 0.54452],
        "74": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],
        "75": [0, 0.68333, 0.01445, 0.05556, 0.76195],
        "76": [0, 0.68333, 0, 0.13889, 0.68972],
        "77": [0, 0.68333, 0, 0.13889, 1.2009],
        "78": [0, 0.68333, 0.14736, 0.08334, 0.82049],
        "79": [0, 0.68333, 0.02778, 0.11111, 0.79611],
        "80": [0, 0.68333, 0.08222, 0.08334, 0.69556],
        "81": [0.09722, 0.68333, 0, 0.11111, 0.81667],
        "82": [0, 0.68333, 0, 0.08334, 0.8475],
        "83": [0, 0.68333, 0.075, 0.13889, 0.60556],
        "84": [0, 0.68333, 0.25417, 0, 0.54464],
        "85": [0, 0.68333, 0.09931, 0.08334, 0.62583],
        "86": [0, 0.68333, 0.08222, 0, 0.61278],
        "87": [0, 0.68333, 0.08222, 0.08334, 0.98778],
        "88": [0, 0.68333, 0.14643, 0.13889, 0.7133],
        "89": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],
        "90": [0, 0.68333, 0.07944, 0.13889, 0.72473],
        "160": [0, 0, 0, 0, 0.25]
      },
      "Fraktur-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "33": [0, 0.69141, 0, 0, 0.29574],
        "34": [0, 0.69141, 0, 0, 0.21471],
        "38": [0, 0.69141, 0, 0, 0.73786],
        "39": [0, 0.69141, 0, 0, 0.21201],
        "40": [0.24982, 0.74947, 0, 0, 0.38865],
        "41": [0.24982, 0.74947, 0, 0, 0.38865],
        "42": [0, 0.62119, 0, 0, 0.27764],
        "43": [0.08319, 0.58283, 0, 0, 0.75623],
        "44": [0, 0.10803, 0, 0, 0.27764],
        "45": [0.08319, 0.58283, 0, 0, 0.75623],
        "46": [0, 0.10803, 0, 0, 0.27764],
        "47": [0.24982, 0.74947, 0, 0, 0.50181],
        "48": [0, 0.47534, 0, 0, 0.50181],
        "49": [0, 0.47534, 0, 0, 0.50181],
        "50": [0, 0.47534, 0, 0, 0.50181],
        "51": [0.18906, 0.47534, 0, 0, 0.50181],
        "52": [0.18906, 0.47534, 0, 0, 0.50181],
        "53": [0.18906, 0.47534, 0, 0, 0.50181],
        "54": [0, 0.69141, 0, 0, 0.50181],
        "55": [0.18906, 0.47534, 0, 0, 0.50181],
        "56": [0, 0.69141, 0, 0, 0.50181],
        "57": [0.18906, 0.47534, 0, 0, 0.50181],
        "58": [0, 0.47534, 0, 0, 0.21606],
        "59": [0.12604, 0.47534, 0, 0, 0.21606],
        "61": [-0.13099, 0.36866, 0, 0, 0.75623],
        "63": [0, 0.69141, 0, 0, 0.36245],
        "65": [0, 0.69141, 0, 0, 0.7176],
        "66": [0, 0.69141, 0, 0, 0.88397],
        "67": [0, 0.69141, 0, 0, 0.61254],
        "68": [0, 0.69141, 0, 0, 0.83158],
        "69": [0, 0.69141, 0, 0, 0.66278],
        "70": [0.12604, 0.69141, 0, 0, 0.61119],
        "71": [0, 0.69141, 0, 0, 0.78539],
        "72": [0.06302, 0.69141, 0, 0, 0.7203],
        "73": [0, 0.69141, 0, 0, 0.55448],
        "74": [0.12604, 0.69141, 0, 0, 0.55231],
        "75": [0, 0.69141, 0, 0, 0.66845],
        "76": [0, 0.69141, 0, 0, 0.66602],
        "77": [0, 0.69141, 0, 0, 1.04953],
        "78": [0, 0.69141, 0, 0, 0.83212],
        "79": [0, 0.69141, 0, 0, 0.82699],
        "80": [0.18906, 0.69141, 0, 0, 0.82753],
        "81": [0.03781, 0.69141, 0, 0, 0.82699],
        "82": [0, 0.69141, 0, 0, 0.82807],
        "83": [0, 0.69141, 0, 0, 0.82861],
        "84": [0, 0.69141, 0, 0, 0.66899],
        "85": [0, 0.69141, 0, 0, 0.64576],
        "86": [0, 0.69141, 0, 0, 0.83131],
        "87": [0, 0.69141, 0, 0, 1.04602],
        "88": [0, 0.69141, 0, 0, 0.71922],
        "89": [0.18906, 0.69141, 0, 0, 0.83293],
        "90": [0.12604, 0.69141, 0, 0, 0.60201],
        "91": [0.24982, 0.74947, 0, 0, 0.27764],
        "93": [0.24982, 0.74947, 0, 0, 0.27764],
        "94": [0, 0.69141, 0, 0, 0.49965],
        "97": [0, 0.47534, 0, 0, 0.50046],
        "98": [0, 0.69141, 0, 0, 0.51315],
        "99": [0, 0.47534, 0, 0, 0.38946],
        "100": [0, 0.62119, 0, 0, 0.49857],
        "101": [0, 0.47534, 0, 0, 0.40053],
        "102": [0.18906, 0.69141, 0, 0, 0.32626],
        "103": [0.18906, 0.47534, 0, 0, 0.5037],
        "104": [0.18906, 0.69141, 0, 0, 0.52126],
        "105": [0, 0.69141, 0, 0, 0.27899],
        "106": [0, 0.69141, 0, 0, 0.28088],
        "107": [0, 0.69141, 0, 0, 0.38946],
        "108": [0, 0.69141, 0, 0, 0.27953],
        "109": [0, 0.47534, 0, 0, 0.76676],
        "110": [0, 0.47534, 0, 0, 0.52666],
        "111": [0, 0.47534, 0, 0, 0.48885],
        "112": [0.18906, 0.52396, 0, 0, 0.50046],
        "113": [0.18906, 0.47534, 0, 0, 0.48912],
        "114": [0, 0.47534, 0, 0, 0.38919],
        "115": [0, 0.47534, 0, 0, 0.44266],
        "116": [0, 0.62119, 0, 0, 0.33301],
        "117": [0, 0.47534, 0, 0, 0.5172],
        "118": [0, 0.52396, 0, 0, 0.5118],
        "119": [0, 0.52396, 0, 0, 0.77351],
        "120": [0.18906, 0.47534, 0, 0, 0.38865],
        "121": [0.18906, 0.47534, 0, 0, 0.49884],
        "122": [0.18906, 0.47534, 0, 0, 0.39054],
        "160": [0, 0, 0, 0, 0.25],
        "8216": [0, 0.69141, 0, 0, 0.21471],
        "8217": [0, 0.69141, 0, 0, 0.21471],
        "58112": [0, 0.62119, 0, 0, 0.49749],
        "58113": [0, 0.62119, 0, 0, 0.4983],
        "58114": [0.18906, 0.69141, 0, 0, 0.33328],
        "58115": [0.18906, 0.69141, 0, 0, 0.32923],
        "58116": [0.18906, 0.47534, 0, 0, 0.50343],
        "58117": [0, 0.69141, 0, 0, 0.33301],
        "58118": [0, 0.62119, 0, 0, 0.33409],
        "58119": [0, 0.47534, 0, 0, 0.50073]
      },
      "Main-Bold": {
        "32": [0, 0, 0, 0, 0.25],
        "33": [0, 0.69444, 0, 0, 0.35],
        "34": [0, 0.69444, 0, 0, 0.60278],
        "35": [0.19444, 0.69444, 0, 0, 0.95833],
        "36": [0.05556, 0.75, 0, 0, 0.575],
        "37": [0.05556, 0.75, 0, 0, 0.95833],
        "38": [0, 0.69444, 0, 0, 0.89444],
        "39": [0, 0.69444, 0, 0, 0.31944],
        "40": [0.25, 0.75, 0, 0, 0.44722],
        "41": [0.25, 0.75, 0, 0, 0.44722],
        "42": [0, 0.75, 0, 0, 0.575],
        "43": [0.13333, 0.63333, 0, 0, 0.89444],
        "44": [0.19444, 0.15556, 0, 0, 0.31944],
        "45": [0, 0.44444, 0, 0, 0.38333],
        "46": [0, 0.15556, 0, 0, 0.31944],
        "47": [0.25, 0.75, 0, 0, 0.575],
        "48": [0, 0.64444, 0, 0, 0.575],
        "49": [0, 0.64444, 0, 0, 0.575],
        "50": [0, 0.64444, 0, 0, 0.575],
        "51": [0, 0.64444, 0, 0, 0.575],
        "52": [0, 0.64444, 0, 0, 0.575],
        "53": [0, 0.64444, 0, 0, 0.575],
        "54": [0, 0.64444, 0, 0, 0.575],
        "55": [0, 0.64444, 0, 0, 0.575],
        "56": [0, 0.64444, 0, 0, 0.575],
        "57": [0, 0.64444, 0, 0, 0.575],
        "58": [0, 0.44444, 0, 0, 0.31944],
        "59": [0.19444, 0.44444, 0, 0, 0.31944],
        "60": [0.08556, 0.58556, 0, 0, 0.89444],
        "61": [-0.10889, 0.39111, 0, 0, 0.89444],
        "62": [0.08556, 0.58556, 0, 0, 0.89444],
        "63": [0, 0.69444, 0, 0, 0.54305],
        "64": [0, 0.69444, 0, 0, 0.89444],
        "65": [0, 0.68611, 0, 0, 0.86944],
        "66": [0, 0.68611, 0, 0, 0.81805],
        "67": [0, 0.68611, 0, 0, 0.83055],
        "68": [0, 0.68611, 0, 0, 0.88194],
        "69": [0, 0.68611, 0, 0, 0.75555],
        "70": [0, 0.68611, 0, 0, 0.72361],
        "71": [0, 0.68611, 0, 0, 0.90416],
        "72": [0, 0.68611, 0, 0, 0.9],
        "73": [0, 0.68611, 0, 0, 0.43611],
        "74": [0, 0.68611, 0, 0, 0.59444],
        "75": [0, 0.68611, 0, 0, 0.90138],
        "76": [0, 0.68611, 0, 0, 0.69166],
        "77": [0, 0.68611, 0, 0, 1.09166],
        "78": [0, 0.68611, 0, 0, 0.9],
        "79": [0, 0.68611, 0, 0, 0.86388],
        "80": [0, 0.68611, 0, 0, 0.78611],
        "81": [0.19444, 0.68611, 0, 0, 0.86388],
        "82": [0, 0.68611, 0, 0, 0.8625],
        "83": [0, 0.68611, 0, 0, 0.63889],
        "84": [0, 0.68611, 0, 0, 0.8],
        "85": [0, 0.68611, 0, 0, 0.88472],
        "86": [0, 0.68611, 0.01597, 0, 0.86944],
        "87": [0, 0.68611, 0.01597, 0, 1.18888],
        "88": [0, 0.68611, 0, 0, 0.86944],
        "89": [0, 0.68611, 0.02875, 0, 0.86944],
        "90": [0, 0.68611, 0, 0, 0.70277],
        "91": [0.25, 0.75, 0, 0, 0.31944],
        "92": [0.25, 0.75, 0, 0, 0.575],
        "93": [0.25, 0.75, 0, 0, 0.31944],
        "94": [0, 0.69444, 0, 0, 0.575],
        "95": [0.31, 0.13444, 0.03194, 0, 0.575],
        "97": [0, 0.44444, 0, 0, 0.55902],
        "98": [0, 0.69444, 0, 0, 0.63889],
        "99": [0, 0.44444, 0, 0, 0.51111],
        "100": [0, 0.69444, 0, 0, 0.63889],
        "101": [0, 0.44444, 0, 0, 0.52708],
        "102": [0, 0.69444, 0.10903, 0, 0.35139],
        "103": [0.19444, 0.44444, 0.01597, 0, 0.575],
        "104": [0, 0.69444, 0, 0, 0.63889],
        "105": [0, 0.69444, 0, 0, 0.31944],
        "106": [0.19444, 0.69444, 0, 0, 0.35139],
        "107": [0, 0.69444, 0, 0, 0.60694],
        "108": [0, 0.69444, 0, 0, 0.31944],
        "109": [0, 0.44444, 0, 0, 0.95833],
        "110": [0, 0.44444, 0, 0, 0.63889],
        "111": [0, 0.44444, 0, 0, 0.575],
        "112": [0.19444, 0.44444, 0, 0, 0.63889],
        "113": [0.19444, 0.44444, 0, 0, 0.60694],
        "114": [0, 0.44444, 0, 0, 0.47361],
        "115": [0, 0.44444, 0, 0, 0.45361],
        "116": [0, 0.63492, 0, 0, 0.44722],
        "117": [0, 0.44444, 0, 0, 0.63889],
        "118": [0, 0.44444, 0.01597, 0, 0.60694],
        "119": [0, 0.44444, 0.01597, 0, 0.83055],
        "120": [0, 0.44444, 0, 0, 0.60694],
        "121": [0.19444, 0.44444, 0.01597, 0, 0.60694],
        "122": [0, 0.44444, 0, 0, 0.51111],
        "123": [0.25, 0.75, 0, 0, 0.575],
        "124": [0.25, 0.75, 0, 0, 0.31944],
        "125": [0.25, 0.75, 0, 0, 0.575],
        "126": [0.35, 0.34444, 0, 0, 0.575],
        "160": [0, 0, 0, 0, 0.25],
        "163": [0, 0.69444, 0, 0, 0.86853],
        "168": [0, 0.69444, 0, 0, 0.575],
        "172": [0, 0.44444, 0, 0, 0.76666],
        "176": [0, 0.69444, 0, 0, 0.86944],
        "177": [0.13333, 0.63333, 0, 0, 0.89444],
        "184": [0.17014, 0, 0, 0, 0.51111],
        "198": [0, 0.68611, 0, 0, 1.04166],
        "215": [0.13333, 0.63333, 0, 0, 0.89444],
        "216": [0.04861, 0.73472, 0, 0, 0.89444],
        "223": [0, 0.69444, 0, 0, 0.59722],
        "230": [0, 0.44444, 0, 0, 0.83055],
        "247": [0.13333, 0.63333, 0, 0, 0.89444],
        "248": [0.09722, 0.54167, 0, 0, 0.575],
        "305": [0, 0.44444, 0, 0, 0.31944],
        "338": [0, 0.68611, 0, 0, 1.16944],
        "339": [0, 0.44444, 0, 0, 0.89444],
        "567": [0.19444, 0.44444, 0, 0, 0.35139],
        "710": [0, 0.69444, 0, 0, 0.575],
        "711": [0, 0.63194, 0, 0, 0.575],
        "713": [0, 0.59611, 0, 0, 0.575],
        "714": [0, 0.69444, 0, 0, 0.575],
        "715": [0, 0.69444, 0, 0, 0.575],
        "728": [0, 0.69444, 0, 0, 0.575],
        "729": [0, 0.69444, 0, 0, 0.31944],
        "730": [0, 0.69444, 0, 0, 0.86944],
        "732": [0, 0.69444, 0, 0, 0.575],
        "733": [0, 0.69444, 0, 0, 0.575],
        "915": [0, 0.68611, 0, 0, 0.69166],
        "916": [0, 0.68611, 0, 0, 0.95833],
        "920": [0, 0.68611, 0, 0, 0.89444],
        "923": [0, 0.68611, 0, 0, 0.80555],
        "926": [0, 0.68611, 0, 0, 0.76666],
        "928": [0, 0.68611, 0, 0, 0.9],
        "931": [0, 0.68611, 0, 0, 0.83055],
        "933": [0, 0.68611, 0, 0, 0.89444],
        "934": [0, 0.68611, 0, 0, 0.83055],
        "936": [0, 0.68611, 0, 0, 0.89444],
        "937": [0, 0.68611, 0, 0, 0.83055],
        "8211": [0, 0.44444, 0.03194, 0, 0.575],
        "8212": [0, 0.44444, 0.03194, 0, 1.14999],
        "8216": [0, 0.69444, 0, 0, 0.31944],
        "8217": [0, 0.69444, 0, 0, 0.31944],
        "8220": [0, 0.69444, 0, 0, 0.60278],
        "8221": [0, 0.69444, 0, 0, 0.60278],
        "8224": [0.19444, 0.69444, 0, 0, 0.51111],
        "8225": [0.19444, 0.69444, 0, 0, 0.51111],
        "8242": [0, 0.55556, 0, 0, 0.34444],
        "8407": [0, 0.72444, 0.15486, 0, 0.575],
        "8463": [0, 0.69444, 0, 0, 0.66759],
        "8465": [0, 0.69444, 0, 0, 0.83055],
        "8467": [0, 0.69444, 0, 0, 0.47361],
        "8472": [0.19444, 0.44444, 0, 0, 0.74027],
        "8476": [0, 0.69444, 0, 0, 0.83055],
        "8501": [0, 0.69444, 0, 0, 0.70277],
        "8592": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8593": [0.19444, 0.69444, 0, 0, 0.575],
        "8594": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8595": [0.19444, 0.69444, 0, 0, 0.575],
        "8596": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8597": [0.25, 0.75, 0, 0, 0.575],
        "8598": [0.19444, 0.69444, 0, 0, 1.14999],
        "8599": [0.19444, 0.69444, 0, 0, 1.14999],
        "8600": [0.19444, 0.69444, 0, 0, 1.14999],
        "8601": [0.19444, 0.69444, 0, 0, 1.14999],
        "8636": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8637": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8640": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8641": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8656": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8657": [0.19444, 0.69444, 0, 0, 0.70277],
        "8658": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8659": [0.19444, 0.69444, 0, 0, 0.70277],
        "8660": [-0.10889, 0.39111, 0, 0, 1.14999],
        "8661": [0.25, 0.75, 0, 0, 0.70277],
        "8704": [0, 0.69444, 0, 0, 0.63889],
        "8706": [0, 0.69444, 0.06389, 0, 0.62847],
        "8707": [0, 0.69444, 0, 0, 0.63889],
        "8709": [0.05556, 0.75, 0, 0, 0.575],
        "8711": [0, 0.68611, 0, 0, 0.95833],
        "8712": [0.08556, 0.58556, 0, 0, 0.76666],
        "8715": [0.08556, 0.58556, 0, 0, 0.76666],
        "8722": [0.13333, 0.63333, 0, 0, 0.89444],
        "8723": [0.13333, 0.63333, 0, 0, 0.89444],
        "8725": [0.25, 0.75, 0, 0, 0.575],
        "8726": [0.25, 0.75, 0, 0, 0.575],
        "8727": [-0.02778, 0.47222, 0, 0, 0.575],
        "8728": [-0.02639, 0.47361, 0, 0, 0.575],
        "8729": [-0.02639, 0.47361, 0, 0, 0.575],
        "8730": [0.18, 0.82, 0, 0, 0.95833],
        "8733": [0, 0.44444, 0, 0, 0.89444],
        "8734": [0, 0.44444, 0, 0, 1.14999],
        "8736": [0, 0.69224, 0, 0, 0.72222],
        "8739": [0.25, 0.75, 0, 0, 0.31944],
        "8741": [0.25, 0.75, 0, 0, 0.575],
        "8743": [0, 0.55556, 0, 0, 0.76666],
        "8744": [0, 0.55556, 0, 0, 0.76666],
        "8745": [0, 0.55556, 0, 0, 0.76666],
        "8746": [0, 0.55556, 0, 0, 0.76666],
        "8747": [0.19444, 0.69444, 0.12778, 0, 0.56875],
        "8764": [-0.10889, 0.39111, 0, 0, 0.89444],
        "8768": [0.19444, 0.69444, 0, 0, 0.31944],
        "8771": [222e-5, 0.50222, 0, 0, 0.89444],
        "8773": [0.027, 0.638, 0, 0, 0.894],
        "8776": [0.02444, 0.52444, 0, 0, 0.89444],
        "8781": [222e-5, 0.50222, 0, 0, 0.89444],
        "8801": [222e-5, 0.50222, 0, 0, 0.89444],
        "8804": [0.19667, 0.69667, 0, 0, 0.89444],
        "8805": [0.19667, 0.69667, 0, 0, 0.89444],
        "8810": [0.08556, 0.58556, 0, 0, 1.14999],
        "8811": [0.08556, 0.58556, 0, 0, 1.14999],
        "8826": [0.08556, 0.58556, 0, 0, 0.89444],
        "8827": [0.08556, 0.58556, 0, 0, 0.89444],
        "8834": [0.08556, 0.58556, 0, 0, 0.89444],
        "8835": [0.08556, 0.58556, 0, 0, 0.89444],
        "8838": [0.19667, 0.69667, 0, 0, 0.89444],
        "8839": [0.19667, 0.69667, 0, 0, 0.89444],
        "8846": [0, 0.55556, 0, 0, 0.76666],
        "8849": [0.19667, 0.69667, 0, 0, 0.89444],
        "8850": [0.19667, 0.69667, 0, 0, 0.89444],
        "8851": [0, 0.55556, 0, 0, 0.76666],
        "8852": [0, 0.55556, 0, 0, 0.76666],
        "8853": [0.13333, 0.63333, 0, 0, 0.89444],
        "8854": [0.13333, 0.63333, 0, 0, 0.89444],
        "8855": [0.13333, 0.63333, 0, 0, 0.89444],
        "8856": [0.13333, 0.63333, 0, 0, 0.89444],
        "8857": [0.13333, 0.63333, 0, 0, 0.89444],
        "8866": [0, 0.69444, 0, 0, 0.70277],
        "8867": [0, 0.69444, 0, 0, 0.70277],
        "8868": [0, 0.69444, 0, 0, 0.89444],
        "8869": [0, 0.69444, 0, 0, 0.89444],
        "8900": [-0.02639, 0.47361, 0, 0, 0.575],
        "8901": [-0.02639, 0.47361, 0, 0, 0.31944],
        "8902": [-0.02778, 0.47222, 0, 0, 0.575],
        "8968": [0.25, 0.75, 0, 0, 0.51111],
        "8969": [0.25, 0.75, 0, 0, 0.51111],
        "8970": [0.25, 0.75, 0, 0, 0.51111],
        "8971": [0.25, 0.75, 0, 0, 0.51111],
        "8994": [-0.13889, 0.36111, 0, 0, 1.14999],
        "8995": [-0.13889, 0.36111, 0, 0, 1.14999],
        "9651": [0.19444, 0.69444, 0, 0, 1.02222],
        "9657": [-0.02778, 0.47222, 0, 0, 0.575],
        "9661": [0.19444, 0.69444, 0, 0, 1.02222],
        "9667": [-0.02778, 0.47222, 0, 0, 0.575],
        "9711": [0.19444, 0.69444, 0, 0, 1.14999],
        "9824": [0.12963, 0.69444, 0, 0, 0.89444],
        "9825": [0.12963, 0.69444, 0, 0, 0.89444],
        "9826": [0.12963, 0.69444, 0, 0, 0.89444],
        "9827": [0.12963, 0.69444, 0, 0, 0.89444],
        "9837": [0, 0.75, 0, 0, 0.44722],
        "9838": [0.19444, 0.69444, 0, 0, 0.44722],
        "9839": [0.19444, 0.69444, 0, 0, 0.44722],
        "10216": [0.25, 0.75, 0, 0, 0.44722],
        "10217": [0.25, 0.75, 0, 0, 0.44722],
        "10815": [0, 0.68611, 0, 0, 0.9],
        "10927": [0.19667, 0.69667, 0, 0, 0.89444],
        "10928": [0.19667, 0.69667, 0, 0, 0.89444],
        "57376": [0.19444, 0.69444, 0, 0, 0]
      },
      "Main-BoldItalic": {
        "32": [0, 0, 0, 0, 0.25],
        "33": [0, 0.69444, 0.11417, 0, 0.38611],
        "34": [0, 0.69444, 0.07939, 0, 0.62055],
        "35": [0.19444, 0.69444, 0.06833, 0, 0.94444],
        "37": [0.05556, 0.75, 0.12861, 0, 0.94444],
        "38": [0, 0.69444, 0.08528, 0, 0.88555],
        "39": [0, 0.69444, 0.12945, 0, 0.35555],
        "40": [0.25, 0.75, 0.15806, 0, 0.47333],
        "41": [0.25, 0.75, 0.03306, 0, 0.47333],
        "42": [0, 0.75, 0.14333, 0, 0.59111],
        "43": [0.10333, 0.60333, 0.03306, 0, 0.88555],
        "44": [0.19444, 0.14722, 0, 0, 0.35555],
        "45": [0, 0.44444, 0.02611, 0, 0.41444],
        "46": [0, 0.14722, 0, 0, 0.35555],
        "47": [0.25, 0.75, 0.15806, 0, 0.59111],
        "48": [0, 0.64444, 0.13167, 0, 0.59111],
        "49": [0, 0.64444, 0.13167, 0, 0.59111],
        "50": [0, 0.64444, 0.13167, 0, 0.59111],
        "51": [0, 0.64444, 0.13167, 0, 0.59111],
        "52": [0.19444, 0.64444, 0.13167, 0, 0.59111],
        "53": [0, 0.64444, 0.13167, 0, 0.59111],
        "54": [0, 0.64444, 0.13167, 0, 0.59111],
        "55": [0.19444, 0.64444, 0.13167, 0, 0.59111],
        "56": [0, 0.64444, 0.13167, 0, 0.59111],
        "57": [0, 0.64444, 0.13167, 0, 0.59111],
        "58": [0, 0.44444, 0.06695, 0, 0.35555],
        "59": [0.19444, 0.44444, 0.06695, 0, 0.35555],
        "61": [-0.10889, 0.39111, 0.06833, 0, 0.88555],
        "63": [0, 0.69444, 0.11472, 0, 0.59111],
        "64": [0, 0.69444, 0.09208, 0, 0.88555],
        "65": [0, 0.68611, 0, 0, 0.86555],
        "66": [0, 0.68611, 0.0992, 0, 0.81666],
        "67": [0, 0.68611, 0.14208, 0, 0.82666],
        "68": [0, 0.68611, 0.09062, 0, 0.87555],
        "69": [0, 0.68611, 0.11431, 0, 0.75666],
        "70": [0, 0.68611, 0.12903, 0, 0.72722],
        "71": [0, 0.68611, 0.07347, 0, 0.89527],
        "72": [0, 0.68611, 0.17208, 0, 0.8961],
        "73": [0, 0.68611, 0.15681, 0, 0.47166],
        "74": [0, 0.68611, 0.145, 0, 0.61055],
        "75": [0, 0.68611, 0.14208, 0, 0.89499],
        "76": [0, 0.68611, 0, 0, 0.69777],
        "77": [0, 0.68611, 0.17208, 0, 1.07277],
        "78": [0, 0.68611, 0.17208, 0, 0.8961],
        "79": [0, 0.68611, 0.09062, 0, 0.85499],
        "80": [0, 0.68611, 0.0992, 0, 0.78721],
        "81": [0.19444, 0.68611, 0.09062, 0, 0.85499],
        "82": [0, 0.68611, 0.02559, 0, 0.85944],
        "83": [0, 0.68611, 0.11264, 0, 0.64999],
        "84": [0, 0.68611, 0.12903, 0, 0.7961],
        "85": [0, 0.68611, 0.17208, 0, 0.88083],
        "86": [0, 0.68611, 0.18625, 0, 0.86555],
        "87": [0, 0.68611, 0.18625, 0, 1.15999],
        "88": [0, 0.68611, 0.15681, 0, 0.86555],
        "89": [0, 0.68611, 0.19803, 0, 0.86555],
        "90": [0, 0.68611, 0.14208, 0, 0.70888],
        "91": [0.25, 0.75, 0.1875, 0, 0.35611],
        "93": [0.25, 0.75, 0.09972, 0, 0.35611],
        "94": [0, 0.69444, 0.06709, 0, 0.59111],
        "95": [0.31, 0.13444, 0.09811, 0, 0.59111],
        "97": [0, 0.44444, 0.09426, 0, 0.59111],
        "98": [0, 0.69444, 0.07861, 0, 0.53222],
        "99": [0, 0.44444, 0.05222, 0, 0.53222],
        "100": [0, 0.69444, 0.10861, 0, 0.59111],
        "101": [0, 0.44444, 0.085, 0, 0.53222],
        "102": [0.19444, 0.69444, 0.21778, 0, 0.4],
        "103": [0.19444, 0.44444, 0.105, 0, 0.53222],
        "104": [0, 0.69444, 0.09426, 0, 0.59111],
        "105": [0, 0.69326, 0.11387, 0, 0.35555],
        "106": [0.19444, 0.69326, 0.1672, 0, 0.35555],
        "107": [0, 0.69444, 0.11111, 0, 0.53222],
        "108": [0, 0.69444, 0.10861, 0, 0.29666],
        "109": [0, 0.44444, 0.09426, 0, 0.94444],
        "110": [0, 0.44444, 0.09426, 0, 0.64999],
        "111": [0, 0.44444, 0.07861, 0, 0.59111],
        "112": [0.19444, 0.44444, 0.07861, 0, 0.59111],
        "113": [0.19444, 0.44444, 0.105, 0, 0.53222],
        "114": [0, 0.44444, 0.11111, 0, 0.50167],
        "115": [0, 0.44444, 0.08167, 0, 0.48694],
        "116": [0, 0.63492, 0.09639, 0, 0.385],
        "117": [0, 0.44444, 0.09426, 0, 0.62055],
        "118": [0, 0.44444, 0.11111, 0, 0.53222],
        "119": [0, 0.44444, 0.11111, 0, 0.76777],
        "120": [0, 0.44444, 0.12583, 0, 0.56055],
        "121": [0.19444, 0.44444, 0.105, 0, 0.56166],
        "122": [0, 0.44444, 0.13889, 0, 0.49055],
        "126": [0.35, 0.34444, 0.11472, 0, 0.59111],
        "160": [0, 0, 0, 0, 0.25],
        "168": [0, 0.69444, 0.11473, 0, 0.59111],
        "176": [0, 0.69444, 0, 0, 0.94888],
        "184": [0.17014, 0, 0, 0, 0.53222],
        "198": [0, 0.68611, 0.11431, 0, 1.02277],
        "216": [0.04861, 0.73472, 0.09062, 0, 0.88555],
        "223": [0.19444, 0.69444, 0.09736, 0, 0.665],
        "230": [0, 0.44444, 0.085, 0, 0.82666],
        "248": [0.09722, 0.54167, 0.09458, 0, 0.59111],
        "305": [0, 0.44444, 0.09426, 0, 0.35555],
        "338": [0, 0.68611, 0.11431, 0, 1.14054],
        "339": [0, 0.44444, 0.085, 0, 0.82666],
        "567": [0.19444, 0.44444, 0.04611, 0, 0.385],
        "710": [0, 0.69444, 0.06709, 0, 0.59111],
        "711": [0, 0.63194, 0.08271, 0, 0.59111],
        "713": [0, 0.59444, 0.10444, 0, 0.59111],
        "714": [0, 0.69444, 0.08528, 0, 0.59111],
        "715": [0, 0.69444, 0, 0, 0.59111],
        "728": [0, 0.69444, 0.10333, 0, 0.59111],
        "729": [0, 0.69444, 0.12945, 0, 0.35555],
        "730": [0, 0.69444, 0, 0, 0.94888],
        "732": [0, 0.69444, 0.11472, 0, 0.59111],
        "733": [0, 0.69444, 0.11472, 0, 0.59111],
        "915": [0, 0.68611, 0.12903, 0, 0.69777],
        "916": [0, 0.68611, 0, 0, 0.94444],
        "920": [0, 0.68611, 0.09062, 0, 0.88555],
        "923": [0, 0.68611, 0, 0, 0.80666],
        "926": [0, 0.68611, 0.15092, 0, 0.76777],
        "928": [0, 0.68611, 0.17208, 0, 0.8961],
        "931": [0, 0.68611, 0.11431, 0, 0.82666],
        "933": [0, 0.68611, 0.10778, 0, 0.88555],
        "934": [0, 0.68611, 0.05632, 0, 0.82666],
        "936": [0, 0.68611, 0.10778, 0, 0.88555],
        "937": [0, 0.68611, 0.0992, 0, 0.82666],
        "8211": [0, 0.44444, 0.09811, 0, 0.59111],
        "8212": [0, 0.44444, 0.09811, 0, 1.18221],
        "8216": [0, 0.69444, 0.12945, 0, 0.35555],
        "8217": [0, 0.69444, 0.12945, 0, 0.35555],
        "8220": [0, 0.69444, 0.16772, 0, 0.62055],
        "8221": [0, 0.69444, 0.07939, 0, 0.62055]
      },
      "Main-Italic": {
        "32": [0, 0, 0, 0, 0.25],
        "33": [0, 0.69444, 0.12417, 0, 0.30667],
        "34": [0, 0.69444, 0.06961, 0, 0.51444],
        "35": [0.19444, 0.69444, 0.06616, 0, 0.81777],
        "37": [0.05556, 0.75, 0.13639, 0, 0.81777],
        "38": [0, 0.69444, 0.09694, 0, 0.76666],
        "39": [0, 0.69444, 0.12417, 0, 0.30667],
        "40": [0.25, 0.75, 0.16194, 0, 0.40889],
        "41": [0.25, 0.75, 0.03694, 0, 0.40889],
        "42": [0, 0.75, 0.14917, 0, 0.51111],
        "43": [0.05667, 0.56167, 0.03694, 0, 0.76666],
        "44": [0.19444, 0.10556, 0, 0, 0.30667],
        "45": [0, 0.43056, 0.02826, 0, 0.35778],
        "46": [0, 0.10556, 0, 0, 0.30667],
        "47": [0.25, 0.75, 0.16194, 0, 0.51111],
        "48": [0, 0.64444, 0.13556, 0, 0.51111],
        "49": [0, 0.64444, 0.13556, 0, 0.51111],
        "50": [0, 0.64444, 0.13556, 0, 0.51111],
        "51": [0, 0.64444, 0.13556, 0, 0.51111],
        "52": [0.19444, 0.64444, 0.13556, 0, 0.51111],
        "53": [0, 0.64444, 0.13556, 0, 0.51111],
        "54": [0, 0.64444, 0.13556, 0, 0.51111],
        "55": [0.19444, 0.64444, 0.13556, 0, 0.51111],
        "56": [0, 0.64444, 0.13556, 0, 0.51111],
        "57": [0, 0.64444, 0.13556, 0, 0.51111],
        "58": [0, 0.43056, 0.0582, 0, 0.30667],
        "59": [0.19444, 0.43056, 0.0582, 0, 0.30667],
        "61": [-0.13313, 0.36687, 0.06616, 0, 0.76666],
        "63": [0, 0.69444, 0.1225, 0, 0.51111],
        "64": [0, 0.69444, 0.09597, 0, 0.76666],
        "65": [0, 0.68333, 0, 0, 0.74333],
        "66": [0, 0.68333, 0.10257, 0, 0.70389],
        "67": [0, 0.68333, 0.14528, 0, 0.71555],
        "68": [0, 0.68333, 0.09403, 0, 0.755],
        "69": [0, 0.68333, 0.12028, 0, 0.67833],
        "70": [0, 0.68333, 0.13305, 0, 0.65277],
        "71": [0, 0.68333, 0.08722, 0, 0.77361],
        "72": [0, 0.68333, 0.16389, 0, 0.74333],
        "73": [0, 0.68333, 0.15806, 0, 0.38555],
        "74": [0, 0.68333, 0.14028, 0, 0.525],
        "75": [0, 0.68333, 0.14528, 0, 0.76888],
        "76": [0, 0.68333, 0, 0, 0.62722],
        "77": [0, 0.68333, 0.16389, 0, 0.89666],
        "78": [0, 0.68333, 0.16389, 0, 0.74333],
        "79": [0, 0.68333, 0.09403, 0, 0.76666],
        "80": [0, 0.68333, 0.10257, 0, 0.67833],
        "81": [0.19444, 0.68333, 0.09403, 0, 0.76666],
        "82": [0, 0.68333, 0.03868, 0, 0.72944],
        "83": [0, 0.68333, 0.11972, 0, 0.56222],
        "84": [0, 0.68333, 0.13305, 0, 0.71555],
        "85": [0, 0.68333, 0.16389, 0, 0.74333],
        "86": [0, 0.68333, 0.18361, 0, 0.74333],
        "87": [0, 0.68333, 0.18361, 0, 0.99888],
        "88": [0, 0.68333, 0.15806, 0, 0.74333],
        "89": [0, 0.68333, 0.19383, 0, 0.74333],
        "90": [0, 0.68333, 0.14528, 0, 0.61333],
        "91": [0.25, 0.75, 0.1875, 0, 0.30667],
        "93": [0.25, 0.75, 0.10528, 0, 0.30667],
        "94": [0, 0.69444, 0.06646, 0, 0.51111],
        "95": [0.31, 0.12056, 0.09208, 0, 0.51111],
        "97": [0, 0.43056, 0.07671, 0, 0.51111],
        "98": [0, 0.69444, 0.06312, 0, 0.46],
        "99": [0, 0.43056, 0.05653, 0, 0.46],
        "100": [0, 0.69444, 0.10333, 0, 0.51111],
        "101": [0, 0.43056, 0.07514, 0, 0.46],
        "102": [0.19444, 0.69444, 0.21194, 0, 0.30667],
        "103": [0.19444, 0.43056, 0.08847, 0, 0.46],
        "104": [0, 0.69444, 0.07671, 0, 0.51111],
        "105": [0, 0.65536, 0.1019, 0, 0.30667],
        "106": [0.19444, 0.65536, 0.14467, 0, 0.30667],
        "107": [0, 0.69444, 0.10764, 0, 0.46],
        "108": [0, 0.69444, 0.10333, 0, 0.25555],
        "109": [0, 0.43056, 0.07671, 0, 0.81777],
        "110": [0, 0.43056, 0.07671, 0, 0.56222],
        "111": [0, 0.43056, 0.06312, 0, 0.51111],
        "112": [0.19444, 0.43056, 0.06312, 0, 0.51111],
        "113": [0.19444, 0.43056, 0.08847, 0, 0.46],
        "114": [0, 0.43056, 0.10764, 0, 0.42166],
        "115": [0, 0.43056, 0.08208, 0, 0.40889],
        "116": [0, 0.61508, 0.09486, 0, 0.33222],
        "117": [0, 0.43056, 0.07671, 0, 0.53666],
        "118": [0, 0.43056, 0.10764, 0, 0.46],
        "119": [0, 0.43056, 0.10764, 0, 0.66444],
        "120": [0, 0.43056, 0.12042, 0, 0.46389],
        "121": [0.19444, 0.43056, 0.08847, 0, 0.48555],
        "122": [0, 0.43056, 0.12292, 0, 0.40889],
        "126": [0.35, 0.31786, 0.11585, 0, 0.51111],
        "160": [0, 0, 0, 0, 0.25],
        "168": [0, 0.66786, 0.10474, 0, 0.51111],
        "176": [0, 0.69444, 0, 0, 0.83129],
        "184": [0.17014, 0, 0, 0, 0.46],
        "198": [0, 0.68333, 0.12028, 0, 0.88277],
        "216": [0.04861, 0.73194, 0.09403, 0, 0.76666],
        "223": [0.19444, 0.69444, 0.10514, 0, 0.53666],
        "230": [0, 0.43056, 0.07514, 0, 0.71555],
        "248": [0.09722, 0.52778, 0.09194, 0, 0.51111],
        "338": [0, 0.68333, 0.12028, 0, 0.98499],
        "339": [0, 0.43056, 0.07514, 0, 0.71555],
        "710": [0, 0.69444, 0.06646, 0, 0.51111],
        "711": [0, 0.62847, 0.08295, 0, 0.51111],
        "713": [0, 0.56167, 0.10333, 0, 0.51111],
        "714": [0, 0.69444, 0.09694, 0, 0.51111],
        "715": [0, 0.69444, 0, 0, 0.51111],
        "728": [0, 0.69444, 0.10806, 0, 0.51111],
        "729": [0, 0.66786, 0.11752, 0, 0.30667],
        "730": [0, 0.69444, 0, 0, 0.83129],
        "732": [0, 0.66786, 0.11585, 0, 0.51111],
        "733": [0, 0.69444, 0.1225, 0, 0.51111],
        "915": [0, 0.68333, 0.13305, 0, 0.62722],
        "916": [0, 0.68333, 0, 0, 0.81777],
        "920": [0, 0.68333, 0.09403, 0, 0.76666],
        "923": [0, 0.68333, 0, 0, 0.69222],
        "926": [0, 0.68333, 0.15294, 0, 0.66444],
        "928": [0, 0.68333, 0.16389, 0, 0.74333],
        "931": [0, 0.68333, 0.12028, 0, 0.71555],
        "933": [0, 0.68333, 0.11111, 0, 0.76666],
        "934": [0, 0.68333, 0.05986, 0, 0.71555],
        "936": [0, 0.68333, 0.11111, 0, 0.76666],
        "937": [0, 0.68333, 0.10257, 0, 0.71555],
        "8211": [0, 0.43056, 0.09208, 0, 0.51111],
        "8212": [0, 0.43056, 0.09208, 0, 1.02222],
        "8216": [0, 0.69444, 0.12417, 0, 0.30667],
        "8217": [0, 0.69444, 0.12417, 0, 0.30667],
        "8220": [0, 0.69444, 0.1685, 0, 0.51444],
        "8221": [0, 0.69444, 0.06961, 0, 0.51444],
        "8463": [0, 0.68889, 0, 0, 0.54028]
      },
      "Main-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "33": [0, 0.69444, 0, 0, 0.27778],
        "34": [0, 0.69444, 0, 0, 0.5],
        "35": [0.19444, 0.69444, 0, 0, 0.83334],
        "36": [0.05556, 0.75, 0, 0, 0.5],
        "37": [0.05556, 0.75, 0, 0, 0.83334],
        "38": [0, 0.69444, 0, 0, 0.77778],
        "39": [0, 0.69444, 0, 0, 0.27778],
        "40": [0.25, 0.75, 0, 0, 0.38889],
        "41": [0.25, 0.75, 0, 0, 0.38889],
        "42": [0, 0.75, 0, 0, 0.5],
        "43": [0.08333, 0.58333, 0, 0, 0.77778],
        "44": [0.19444, 0.10556, 0, 0, 0.27778],
        "45": [0, 0.43056, 0, 0, 0.33333],
        "46": [0, 0.10556, 0, 0, 0.27778],
        "47": [0.25, 0.75, 0, 0, 0.5],
        "48": [0, 0.64444, 0, 0, 0.5],
        "49": [0, 0.64444, 0, 0, 0.5],
        "50": [0, 0.64444, 0, 0, 0.5],
        "51": [0, 0.64444, 0, 0, 0.5],
        "52": [0, 0.64444, 0, 0, 0.5],
        "53": [0, 0.64444, 0, 0, 0.5],
        "54": [0, 0.64444, 0, 0, 0.5],
        "55": [0, 0.64444, 0, 0, 0.5],
        "56": [0, 0.64444, 0, 0, 0.5],
        "57": [0, 0.64444, 0, 0, 0.5],
        "58": [0, 0.43056, 0, 0, 0.27778],
        "59": [0.19444, 0.43056, 0, 0, 0.27778],
        "60": [0.0391, 0.5391, 0, 0, 0.77778],
        "61": [-0.13313, 0.36687, 0, 0, 0.77778],
        "62": [0.0391, 0.5391, 0, 0, 0.77778],
        "63": [0, 0.69444, 0, 0, 0.47222],
        "64": [0, 0.69444, 0, 0, 0.77778],
        "65": [0, 0.68333, 0, 0, 0.75],
        "66": [0, 0.68333, 0, 0, 0.70834],
        "67": [0, 0.68333, 0, 0, 0.72222],
        "68": [0, 0.68333, 0, 0, 0.76389],
        "69": [0, 0.68333, 0, 0, 0.68056],
        "70": [0, 0.68333, 0, 0, 0.65278],
        "71": [0, 0.68333, 0, 0, 0.78472],
        "72": [0, 0.68333, 0, 0, 0.75],
        "73": [0, 0.68333, 0, 0, 0.36111],
        "74": [0, 0.68333, 0, 0, 0.51389],
        "75": [0, 0.68333, 0, 0, 0.77778],
        "76": [0, 0.68333, 0, 0, 0.625],
        "77": [0, 0.68333, 0, 0, 0.91667],
        "78": [0, 0.68333, 0, 0, 0.75],
        "79": [0, 0.68333, 0, 0, 0.77778],
        "80": [0, 0.68333, 0, 0, 0.68056],
        "81": [0.19444, 0.68333, 0, 0, 0.77778],
        "82": [0, 0.68333, 0, 0, 0.73611],
        "83": [0, 0.68333, 0, 0, 0.55556],
        "84": [0, 0.68333, 0, 0, 0.72222],
        "85": [0, 0.68333, 0, 0, 0.75],
        "86": [0, 0.68333, 0.01389, 0, 0.75],
        "87": [0, 0.68333, 0.01389, 0, 1.02778],
        "88": [0, 0.68333, 0, 0, 0.75],
        "89": [0, 0.68333, 0.025, 0, 0.75],
        "90": [0, 0.68333, 0, 0, 0.61111],
        "91": [0.25, 0.75, 0, 0, 0.27778],
        "92": [0.25, 0.75, 0, 0, 0.5],
        "93": [0.25, 0.75, 0, 0, 0.27778],
        "94": [0, 0.69444, 0, 0, 0.5],
        "95": [0.31, 0.12056, 0.02778, 0, 0.5],
        "97": [0, 0.43056, 0, 0, 0.5],
        "98": [0, 0.69444, 0, 0, 0.55556],
        "99": [0, 0.43056, 0, 0, 0.44445],
        "100": [0, 0.69444, 0, 0, 0.55556],
        "101": [0, 0.43056, 0, 0, 0.44445],
        "102": [0, 0.69444, 0.07778, 0, 0.30556],
        "103": [0.19444, 0.43056, 0.01389, 0, 0.5],
        "104": [0, 0.69444, 0, 0, 0.55556],
        "105": [0, 0.66786, 0, 0, 0.27778],
        "106": [0.19444, 0.66786, 0, 0, 0.30556],
        "107": [0, 0.69444, 0, 0, 0.52778],
        "108": [0, 0.69444, 0, 0, 0.27778],
        "109": [0, 0.43056, 0, 0, 0.83334],
        "110": [0, 0.43056, 0, 0, 0.55556],
        "111": [0, 0.43056, 0, 0, 0.5],
        "112": [0.19444, 0.43056, 0, 0, 0.55556],
        "113": [0.19444, 0.43056, 0, 0, 0.52778],
        "114": [0, 0.43056, 0, 0, 0.39167],
        "115": [0, 0.43056, 0, 0, 0.39445],
        "116": [0, 0.61508, 0, 0, 0.38889],
        "117": [0, 0.43056, 0, 0, 0.55556],
        "118": [0, 0.43056, 0.01389, 0, 0.52778],
        "119": [0, 0.43056, 0.01389, 0, 0.72222],
        "120": [0, 0.43056, 0, 0, 0.52778],
        "121": [0.19444, 0.43056, 0.01389, 0, 0.52778],
        "122": [0, 0.43056, 0, 0, 0.44445],
        "123": [0.25, 0.75, 0, 0, 0.5],
        "124": [0.25, 0.75, 0, 0, 0.27778],
        "125": [0.25, 0.75, 0, 0, 0.5],
        "126": [0.35, 0.31786, 0, 0, 0.5],
        "160": [0, 0, 0, 0, 0.25],
        "163": [0, 0.69444, 0, 0, 0.76909],
        "167": [0.19444, 0.69444, 0, 0, 0.44445],
        "168": [0, 0.66786, 0, 0, 0.5],
        "172": [0, 0.43056, 0, 0, 0.66667],
        "176": [0, 0.69444, 0, 0, 0.75],
        "177": [0.08333, 0.58333, 0, 0, 0.77778],
        "182": [0.19444, 0.69444, 0, 0, 0.61111],
        "184": [0.17014, 0, 0, 0, 0.44445],
        "198": [0, 0.68333, 0, 0, 0.90278],
        "215": [0.08333, 0.58333, 0, 0, 0.77778],
        "216": [0.04861, 0.73194, 0, 0, 0.77778],
        "223": [0, 0.69444, 0, 0, 0.5],
        "230": [0, 0.43056, 0, 0, 0.72222],
        "247": [0.08333, 0.58333, 0, 0, 0.77778],
        "248": [0.09722, 0.52778, 0, 0, 0.5],
        "305": [0, 0.43056, 0, 0, 0.27778],
        "338": [0, 0.68333, 0, 0, 1.01389],
        "339": [0, 0.43056, 0, 0, 0.77778],
        "567": [0.19444, 0.43056, 0, 0, 0.30556],
        "710": [0, 0.69444, 0, 0, 0.5],
        "711": [0, 0.62847, 0, 0, 0.5],
        "713": [0, 0.56778, 0, 0, 0.5],
        "714": [0, 0.69444, 0, 0, 0.5],
        "715": [0, 0.69444, 0, 0, 0.5],
        "728": [0, 0.69444, 0, 0, 0.5],
        "729": [0, 0.66786, 0, 0, 0.27778],
        "730": [0, 0.69444, 0, 0, 0.75],
        "732": [0, 0.66786, 0, 0, 0.5],
        "733": [0, 0.69444, 0, 0, 0.5],
        "915": [0, 0.68333, 0, 0, 0.625],
        "916": [0, 0.68333, 0, 0, 0.83334],
        "920": [0, 0.68333, 0, 0, 0.77778],
        "923": [0, 0.68333, 0, 0, 0.69445],
        "926": [0, 0.68333, 0, 0, 0.66667],
        "928": [0, 0.68333, 0, 0, 0.75],
        "931": [0, 0.68333, 0, 0, 0.72222],
        "933": [0, 0.68333, 0, 0, 0.77778],
        "934": [0, 0.68333, 0, 0, 0.72222],
        "936": [0, 0.68333, 0, 0, 0.77778],
        "937": [0, 0.68333, 0, 0, 0.72222],
        "8211": [0, 0.43056, 0.02778, 0, 0.5],
        "8212": [0, 0.43056, 0.02778, 0, 1],
        "8216": [0, 0.69444, 0, 0, 0.27778],
        "8217": [0, 0.69444, 0, 0, 0.27778],
        "8220": [0, 0.69444, 0, 0, 0.5],
        "8221": [0, 0.69444, 0, 0, 0.5],
        "8224": [0.19444, 0.69444, 0, 0, 0.44445],
        "8225": [0.19444, 0.69444, 0, 0, 0.44445],
        "8230": [0, 0.123, 0, 0, 1.172],
        "8242": [0, 0.55556, 0, 0, 0.275],
        "8407": [0, 0.71444, 0.15382, 0, 0.5],
        "8463": [0, 0.68889, 0, 0, 0.54028],
        "8465": [0, 0.69444, 0, 0, 0.72222],
        "8467": [0, 0.69444, 0, 0.11111, 0.41667],
        "8472": [0.19444, 0.43056, 0, 0.11111, 0.63646],
        "8476": [0, 0.69444, 0, 0, 0.72222],
        "8501": [0, 0.69444, 0, 0, 0.61111],
        "8592": [-0.13313, 0.36687, 0, 0, 1],
        "8593": [0.19444, 0.69444, 0, 0, 0.5],
        "8594": [-0.13313, 0.36687, 0, 0, 1],
        "8595": [0.19444, 0.69444, 0, 0, 0.5],
        "8596": [-0.13313, 0.36687, 0, 0, 1],
        "8597": [0.25, 0.75, 0, 0, 0.5],
        "8598": [0.19444, 0.69444, 0, 0, 1],
        "8599": [0.19444, 0.69444, 0, 0, 1],
        "8600": [0.19444, 0.69444, 0, 0, 1],
        "8601": [0.19444, 0.69444, 0, 0, 1],
        "8614": [0.011, 0.511, 0, 0, 1],
        "8617": [0.011, 0.511, 0, 0, 1.126],
        "8618": [0.011, 0.511, 0, 0, 1.126],
        "8636": [-0.13313, 0.36687, 0, 0, 1],
        "8637": [-0.13313, 0.36687, 0, 0, 1],
        "8640": [-0.13313, 0.36687, 0, 0, 1],
        "8641": [-0.13313, 0.36687, 0, 0, 1],
        "8652": [0.011, 0.671, 0, 0, 1],
        "8656": [-0.13313, 0.36687, 0, 0, 1],
        "8657": [0.19444, 0.69444, 0, 0, 0.61111],
        "8658": [-0.13313, 0.36687, 0, 0, 1],
        "8659": [0.19444, 0.69444, 0, 0, 0.61111],
        "8660": [-0.13313, 0.36687, 0, 0, 1],
        "8661": [0.25, 0.75, 0, 0, 0.61111],
        "8704": [0, 0.69444, 0, 0, 0.55556],
        "8706": [0, 0.69444, 0.05556, 0.08334, 0.5309],
        "8707": [0, 0.69444, 0, 0, 0.55556],
        "8709": [0.05556, 0.75, 0, 0, 0.5],
        "8711": [0, 0.68333, 0, 0, 0.83334],
        "8712": [0.0391, 0.5391, 0, 0, 0.66667],
        "8715": [0.0391, 0.5391, 0, 0, 0.66667],
        "8722": [0.08333, 0.58333, 0, 0, 0.77778],
        "8723": [0.08333, 0.58333, 0, 0, 0.77778],
        "8725": [0.25, 0.75, 0, 0, 0.5],
        "8726": [0.25, 0.75, 0, 0, 0.5],
        "8727": [-0.03472, 0.46528, 0, 0, 0.5],
        "8728": [-0.05555, 0.44445, 0, 0, 0.5],
        "8729": [-0.05555, 0.44445, 0, 0, 0.5],
        "8730": [0.2, 0.8, 0, 0, 0.83334],
        "8733": [0, 0.43056, 0, 0, 0.77778],
        "8734": [0, 0.43056, 0, 0, 1],
        "8736": [0, 0.69224, 0, 0, 0.72222],
        "8739": [0.25, 0.75, 0, 0, 0.27778],
        "8741": [0.25, 0.75, 0, 0, 0.5],
        "8743": [0, 0.55556, 0, 0, 0.66667],
        "8744": [0, 0.55556, 0, 0, 0.66667],
        "8745": [0, 0.55556, 0, 0, 0.66667],
        "8746": [0, 0.55556, 0, 0, 0.66667],
        "8747": [0.19444, 0.69444, 0.11111, 0, 0.41667],
        "8764": [-0.13313, 0.36687, 0, 0, 0.77778],
        "8768": [0.19444, 0.69444, 0, 0, 0.27778],
        "8771": [-0.03625, 0.46375, 0, 0, 0.77778],
        "8773": [-0.022, 0.589, 0, 0, 0.778],
        "8776": [-0.01688, 0.48312, 0, 0, 0.77778],
        "8781": [-0.03625, 0.46375, 0, 0, 0.77778],
        "8784": [-0.133, 0.673, 0, 0, 0.778],
        "8801": [-0.03625, 0.46375, 0, 0, 0.77778],
        "8804": [0.13597, 0.63597, 0, 0, 0.77778],
        "8805": [0.13597, 0.63597, 0, 0, 0.77778],
        "8810": [0.0391, 0.5391, 0, 0, 1],
        "8811": [0.0391, 0.5391, 0, 0, 1],
        "8826": [0.0391, 0.5391, 0, 0, 0.77778],
        "8827": [0.0391, 0.5391, 0, 0, 0.77778],
        "8834": [0.0391, 0.5391, 0, 0, 0.77778],
        "8835": [0.0391, 0.5391, 0, 0, 0.77778],
        "8838": [0.13597, 0.63597, 0, 0, 0.77778],
        "8839": [0.13597, 0.63597, 0, 0, 0.77778],
        "8846": [0, 0.55556, 0, 0, 0.66667],
        "8849": [0.13597, 0.63597, 0, 0, 0.77778],
        "8850": [0.13597, 0.63597, 0, 0, 0.77778],
        "8851": [0, 0.55556, 0, 0, 0.66667],
        "8852": [0, 0.55556, 0, 0, 0.66667],
        "8853": [0.08333, 0.58333, 0, 0, 0.77778],
        "8854": [0.08333, 0.58333, 0, 0, 0.77778],
        "8855": [0.08333, 0.58333, 0, 0, 0.77778],
        "8856": [0.08333, 0.58333, 0, 0, 0.77778],
        "8857": [0.08333, 0.58333, 0, 0, 0.77778],
        "8866": [0, 0.69444, 0, 0, 0.61111],
        "8867": [0, 0.69444, 0, 0, 0.61111],
        "8868": [0, 0.69444, 0, 0, 0.77778],
        "8869": [0, 0.69444, 0, 0, 0.77778],
        "8872": [0.249, 0.75, 0, 0, 0.867],
        "8900": [-0.05555, 0.44445, 0, 0, 0.5],
        "8901": [-0.05555, 0.44445, 0, 0, 0.27778],
        "8902": [-0.03472, 0.46528, 0, 0, 0.5],
        "8904": [5e-3, 0.505, 0, 0, 0.9],
        "8942": [0.03, 0.903, 0, 0, 0.278],
        "8943": [-0.19, 0.313, 0, 0, 1.172],
        "8945": [-0.1, 0.823, 0, 0, 1.282],
        "8968": [0.25, 0.75, 0, 0, 0.44445],
        "8969": [0.25, 0.75, 0, 0, 0.44445],
        "8970": [0.25, 0.75, 0, 0, 0.44445],
        "8971": [0.25, 0.75, 0, 0, 0.44445],
        "8994": [-0.14236, 0.35764, 0, 0, 1],
        "8995": [-0.14236, 0.35764, 0, 0, 1],
        "9136": [0.244, 0.744, 0, 0, 0.412],
        "9137": [0.244, 0.745, 0, 0, 0.412],
        "9651": [0.19444, 0.69444, 0, 0, 0.88889],
        "9657": [-0.03472, 0.46528, 0, 0, 0.5],
        "9661": [0.19444, 0.69444, 0, 0, 0.88889],
        "9667": [-0.03472, 0.46528, 0, 0, 0.5],
        "9711": [0.19444, 0.69444, 0, 0, 1],
        "9824": [0.12963, 0.69444, 0, 0, 0.77778],
        "9825": [0.12963, 0.69444, 0, 0, 0.77778],
        "9826": [0.12963, 0.69444, 0, 0, 0.77778],
        "9827": [0.12963, 0.69444, 0, 0, 0.77778],
        "9837": [0, 0.75, 0, 0, 0.38889],
        "9838": [0.19444, 0.69444, 0, 0, 0.38889],
        "9839": [0.19444, 0.69444, 0, 0, 0.38889],
        "10216": [0.25, 0.75, 0, 0, 0.38889],
        "10217": [0.25, 0.75, 0, 0, 0.38889],
        "10222": [0.244, 0.744, 0, 0, 0.412],
        "10223": [0.244, 0.745, 0, 0, 0.412],
        "10229": [0.011, 0.511, 0, 0, 1.609],
        "10230": [0.011, 0.511, 0, 0, 1.638],
        "10231": [0.011, 0.511, 0, 0, 1.859],
        "10232": [0.024, 0.525, 0, 0, 1.609],
        "10233": [0.024, 0.525, 0, 0, 1.638],
        "10234": [0.024, 0.525, 0, 0, 1.858],
        "10236": [0.011, 0.511, 0, 0, 1.638],
        "10815": [0, 0.68333, 0, 0, 0.75],
        "10927": [0.13597, 0.63597, 0, 0, 0.77778],
        "10928": [0.13597, 0.63597, 0, 0, 0.77778],
        "57376": [0.19444, 0.69444, 0, 0, 0]
      },
      "Math-BoldItalic": {
        "32": [0, 0, 0, 0, 0.25],
        "48": [0, 0.44444, 0, 0, 0.575],
        "49": [0, 0.44444, 0, 0, 0.575],
        "50": [0, 0.44444, 0, 0, 0.575],
        "51": [0.19444, 0.44444, 0, 0, 0.575],
        "52": [0.19444, 0.44444, 0, 0, 0.575],
        "53": [0.19444, 0.44444, 0, 0, 0.575],
        "54": [0, 0.64444, 0, 0, 0.575],
        "55": [0.19444, 0.44444, 0, 0, 0.575],
        "56": [0, 0.64444, 0, 0, 0.575],
        "57": [0.19444, 0.44444, 0, 0, 0.575],
        "65": [0, 0.68611, 0, 0, 0.86944],
        "66": [0, 0.68611, 0.04835, 0, 0.8664],
        "67": [0, 0.68611, 0.06979, 0, 0.81694],
        "68": [0, 0.68611, 0.03194, 0, 0.93812],
        "69": [0, 0.68611, 0.05451, 0, 0.81007],
        "70": [0, 0.68611, 0.15972, 0, 0.68889],
        "71": [0, 0.68611, 0, 0, 0.88673],
        "72": [0, 0.68611, 0.08229, 0, 0.98229],
        "73": [0, 0.68611, 0.07778, 0, 0.51111],
        "74": [0, 0.68611, 0.10069, 0, 0.63125],
        "75": [0, 0.68611, 0.06979, 0, 0.97118],
        "76": [0, 0.68611, 0, 0, 0.75555],
        "77": [0, 0.68611, 0.11424, 0, 1.14201],
        "78": [0, 0.68611, 0.11424, 0, 0.95034],
        "79": [0, 0.68611, 0.03194, 0, 0.83666],
        "80": [0, 0.68611, 0.15972, 0, 0.72309],
        "81": [0.19444, 0.68611, 0, 0, 0.86861],
        "82": [0, 0.68611, 421e-5, 0, 0.87235],
        "83": [0, 0.68611, 0.05382, 0, 0.69271],
        "84": [0, 0.68611, 0.15972, 0, 0.63663],
        "85": [0, 0.68611, 0.11424, 0, 0.80027],
        "86": [0, 0.68611, 0.25555, 0, 0.67778],
        "87": [0, 0.68611, 0.15972, 0, 1.09305],
        "88": [0, 0.68611, 0.07778, 0, 0.94722],
        "89": [0, 0.68611, 0.25555, 0, 0.67458],
        "90": [0, 0.68611, 0.06979, 0, 0.77257],
        "97": [0, 0.44444, 0, 0, 0.63287],
        "98": [0, 0.69444, 0, 0, 0.52083],
        "99": [0, 0.44444, 0, 0, 0.51342],
        "100": [0, 0.69444, 0, 0, 0.60972],
        "101": [0, 0.44444, 0, 0, 0.55361],
        "102": [0.19444, 0.69444, 0.11042, 0, 0.56806],
        "103": [0.19444, 0.44444, 0.03704, 0, 0.5449],
        "104": [0, 0.69444, 0, 0, 0.66759],
        "105": [0, 0.69326, 0, 0, 0.4048],
        "106": [0.19444, 0.69326, 0.0622, 0, 0.47083],
        "107": [0, 0.69444, 0.01852, 0, 0.6037],
        "108": [0, 0.69444, 88e-4, 0, 0.34815],
        "109": [0, 0.44444, 0, 0, 1.0324],
        "110": [0, 0.44444, 0, 0, 0.71296],
        "111": [0, 0.44444, 0, 0, 0.58472],
        "112": [0.19444, 0.44444, 0, 0, 0.60092],
        "113": [0.19444, 0.44444, 0.03704, 0, 0.54213],
        "114": [0, 0.44444, 0.03194, 0, 0.5287],
        "115": [0, 0.44444, 0, 0, 0.53125],
        "116": [0, 0.63492, 0, 0, 0.41528],
        "117": [0, 0.44444, 0, 0, 0.68102],
        "118": [0, 0.44444, 0.03704, 0, 0.56666],
        "119": [0, 0.44444, 0.02778, 0, 0.83148],
        "120": [0, 0.44444, 0, 0, 0.65903],
        "121": [0.19444, 0.44444, 0.03704, 0, 0.59028],
        "122": [0, 0.44444, 0.04213, 0, 0.55509],
        "160": [0, 0, 0, 0, 0.25],
        "915": [0, 0.68611, 0.15972, 0, 0.65694],
        "916": [0, 0.68611, 0, 0, 0.95833],
        "920": [0, 0.68611, 0.03194, 0, 0.86722],
        "923": [0, 0.68611, 0, 0, 0.80555],
        "926": [0, 0.68611, 0.07458, 0, 0.84125],
        "928": [0, 0.68611, 0.08229, 0, 0.98229],
        "931": [0, 0.68611, 0.05451, 0, 0.88507],
        "933": [0, 0.68611, 0.15972, 0, 0.67083],
        "934": [0, 0.68611, 0, 0, 0.76666],
        "936": [0, 0.68611, 0.11653, 0, 0.71402],
        "937": [0, 0.68611, 0.04835, 0, 0.8789],
        "945": [0, 0.44444, 0, 0, 0.76064],
        "946": [0.19444, 0.69444, 0.03403, 0, 0.65972],
        "947": [0.19444, 0.44444, 0.06389, 0, 0.59003],
        "948": [0, 0.69444, 0.03819, 0, 0.52222],
        "949": [0, 0.44444, 0, 0, 0.52882],
        "950": [0.19444, 0.69444, 0.06215, 0, 0.50833],
        "951": [0.19444, 0.44444, 0.03704, 0, 0.6],
        "952": [0, 0.69444, 0.03194, 0, 0.5618],
        "953": [0, 0.44444, 0, 0, 0.41204],
        "954": [0, 0.44444, 0, 0, 0.66759],
        "955": [0, 0.69444, 0, 0, 0.67083],
        "956": [0.19444, 0.44444, 0, 0, 0.70787],
        "957": [0, 0.44444, 0.06898, 0, 0.57685],
        "958": [0.19444, 0.69444, 0.03021, 0, 0.50833],
        "959": [0, 0.44444, 0, 0, 0.58472],
        "960": [0, 0.44444, 0.03704, 0, 0.68241],
        "961": [0.19444, 0.44444, 0, 0, 0.6118],
        "962": [0.09722, 0.44444, 0.07917, 0, 0.42361],
        "963": [0, 0.44444, 0.03704, 0, 0.68588],
        "964": [0, 0.44444, 0.13472, 0, 0.52083],
        "965": [0, 0.44444, 0.03704, 0, 0.63055],
        "966": [0.19444, 0.44444, 0, 0, 0.74722],
        "967": [0.19444, 0.44444, 0, 0, 0.71805],
        "968": [0.19444, 0.69444, 0.03704, 0, 0.75833],
        "969": [0, 0.44444, 0.03704, 0, 0.71782],
        "977": [0, 0.69444, 0, 0, 0.69155],
        "981": [0.19444, 0.69444, 0, 0, 0.7125],
        "982": [0, 0.44444, 0.03194, 0, 0.975],
        "1009": [0.19444, 0.44444, 0, 0, 0.6118],
        "1013": [0, 0.44444, 0, 0, 0.48333],
        "57649": [0, 0.44444, 0, 0, 0.39352],
        "57911": [0.19444, 0.44444, 0, 0, 0.43889]
      },
      "Math-Italic": {
        "32": [0, 0, 0, 0, 0.25],
        "48": [0, 0.43056, 0, 0, 0.5],
        "49": [0, 0.43056, 0, 0, 0.5],
        "50": [0, 0.43056, 0, 0, 0.5],
        "51": [0.19444, 0.43056, 0, 0, 0.5],
        "52": [0.19444, 0.43056, 0, 0, 0.5],
        "53": [0.19444, 0.43056, 0, 0, 0.5],
        "54": [0, 0.64444, 0, 0, 0.5],
        "55": [0.19444, 0.43056, 0, 0, 0.5],
        "56": [0, 0.64444, 0, 0, 0.5],
        "57": [0.19444, 0.43056, 0, 0, 0.5],
        "65": [0, 0.68333, 0, 0.13889, 0.75],
        "66": [0, 0.68333, 0.05017, 0.08334, 0.75851],
        "67": [0, 0.68333, 0.07153, 0.08334, 0.71472],
        "68": [0, 0.68333, 0.02778, 0.05556, 0.82792],
        "69": [0, 0.68333, 0.05764, 0.08334, 0.7382],
        "70": [0, 0.68333, 0.13889, 0.08334, 0.64306],
        "71": [0, 0.68333, 0, 0.08334, 0.78625],
        "72": [0, 0.68333, 0.08125, 0.05556, 0.83125],
        "73": [0, 0.68333, 0.07847, 0.11111, 0.43958],
        "74": [0, 0.68333, 0.09618, 0.16667, 0.55451],
        "75": [0, 0.68333, 0.07153, 0.05556, 0.84931],
        "76": [0, 0.68333, 0, 0.02778, 0.68056],
        "77": [0, 0.68333, 0.10903, 0.08334, 0.97014],
        "78": [0, 0.68333, 0.10903, 0.08334, 0.80347],
        "79": [0, 0.68333, 0.02778, 0.08334, 0.76278],
        "80": [0, 0.68333, 0.13889, 0.08334, 0.64201],
        "81": [0.19444, 0.68333, 0, 0.08334, 0.79056],
        "82": [0, 0.68333, 773e-5, 0.08334, 0.75929],
        "83": [0, 0.68333, 0.05764, 0.08334, 0.6132],
        "84": [0, 0.68333, 0.13889, 0.08334, 0.58438],
        "85": [0, 0.68333, 0.10903, 0.02778, 0.68278],
        "86": [0, 0.68333, 0.22222, 0, 0.58333],
        "87": [0, 0.68333, 0.13889, 0, 0.94445],
        "88": [0, 0.68333, 0.07847, 0.08334, 0.82847],
        "89": [0, 0.68333, 0.22222, 0, 0.58056],
        "90": [0, 0.68333, 0.07153, 0.08334, 0.68264],
        "97": [0, 0.43056, 0, 0, 0.52859],
        "98": [0, 0.69444, 0, 0, 0.42917],
        "99": [0, 0.43056, 0, 0.05556, 0.43276],
        "100": [0, 0.69444, 0, 0.16667, 0.52049],
        "101": [0, 0.43056, 0, 0.05556, 0.46563],
        "102": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],
        "103": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],
        "104": [0, 0.69444, 0, 0, 0.57616],
        "105": [0, 0.65952, 0, 0, 0.34451],
        "106": [0.19444, 0.65952, 0.05724, 0, 0.41181],
        "107": [0, 0.69444, 0.03148, 0, 0.5206],
        "108": [0, 0.69444, 0.01968, 0.08334, 0.29838],
        "109": [0, 0.43056, 0, 0, 0.87801],
        "110": [0, 0.43056, 0, 0, 0.60023],
        "111": [0, 0.43056, 0, 0.05556, 0.48472],
        "112": [0.19444, 0.43056, 0, 0.08334, 0.50313],
        "113": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],
        "114": [0, 0.43056, 0.02778, 0.05556, 0.45116],
        "115": [0, 0.43056, 0, 0.05556, 0.46875],
        "116": [0, 0.61508, 0, 0.08334, 0.36111],
        "117": [0, 0.43056, 0, 0.02778, 0.57246],
        "118": [0, 0.43056, 0.03588, 0.02778, 0.48472],
        "119": [0, 0.43056, 0.02691, 0.08334, 0.71592],
        "120": [0, 0.43056, 0, 0.02778, 0.57153],
        "121": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],
        "122": [0, 0.43056, 0.04398, 0.05556, 0.46505],
        "160": [0, 0, 0, 0, 0.25],
        "915": [0, 0.68333, 0.13889, 0.08334, 0.61528],
        "916": [0, 0.68333, 0, 0.16667, 0.83334],
        "920": [0, 0.68333, 0.02778, 0.08334, 0.76278],
        "923": [0, 0.68333, 0, 0.16667, 0.69445],
        "926": [0, 0.68333, 0.07569, 0.08334, 0.74236],
        "928": [0, 0.68333, 0.08125, 0.05556, 0.83125],
        "931": [0, 0.68333, 0.05764, 0.08334, 0.77986],
        "933": [0, 0.68333, 0.13889, 0.05556, 0.58333],
        "934": [0, 0.68333, 0, 0.08334, 0.66667],
        "936": [0, 0.68333, 0.11, 0.05556, 0.61222],
        "937": [0, 0.68333, 0.05017, 0.08334, 0.7724],
        "945": [0, 0.43056, 37e-4, 0.02778, 0.6397],
        "946": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],
        "947": [0.19444, 0.43056, 0.05556, 0, 0.51773],
        "948": [0, 0.69444, 0.03785, 0.05556, 0.44444],
        "949": [0, 0.43056, 0, 0.08334, 0.46632],
        "950": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],
        "951": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],
        "952": [0, 0.69444, 0.02778, 0.08334, 0.46944],
        "953": [0, 0.43056, 0, 0.05556, 0.35394],
        "954": [0, 0.43056, 0, 0, 0.57616],
        "955": [0, 0.69444, 0, 0, 0.58334],
        "956": [0.19444, 0.43056, 0, 0.02778, 0.60255],
        "957": [0, 0.43056, 0.06366, 0.02778, 0.49398],
        "958": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],
        "959": [0, 0.43056, 0, 0.05556, 0.48472],
        "960": [0, 0.43056, 0.03588, 0, 0.57003],
        "961": [0.19444, 0.43056, 0, 0.08334, 0.51702],
        "962": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],
        "963": [0, 0.43056, 0.03588, 0, 0.57141],
        "964": [0, 0.43056, 0.1132, 0.02778, 0.43715],
        "965": [0, 0.43056, 0.03588, 0.02778, 0.54028],
        "966": [0.19444, 0.43056, 0, 0.08334, 0.65417],
        "967": [0.19444, 0.43056, 0, 0.05556, 0.62569],
        "968": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],
        "969": [0, 0.43056, 0.03588, 0, 0.62245],
        "977": [0, 0.69444, 0, 0.08334, 0.59144],
        "981": [0.19444, 0.69444, 0, 0.08334, 0.59583],
        "982": [0, 0.43056, 0.02778, 0, 0.82813],
        "1009": [0.19444, 0.43056, 0, 0.08334, 0.51702],
        "1013": [0, 0.43056, 0, 0.05556, 0.4059],
        "57649": [0, 0.43056, 0, 0.02778, 0.32246],
        "57911": [0.19444, 0.43056, 0, 0.08334, 0.38403]
      },
      "SansSerif-Bold": {
        "32": [0, 0, 0, 0, 0.25],
        "33": [0, 0.69444, 0, 0, 0.36667],
        "34": [0, 0.69444, 0, 0, 0.55834],
        "35": [0.19444, 0.69444, 0, 0, 0.91667],
        "36": [0.05556, 0.75, 0, 0, 0.55],
        "37": [0.05556, 0.75, 0, 0, 1.02912],
        "38": [0, 0.69444, 0, 0, 0.83056],
        "39": [0, 0.69444, 0, 0, 0.30556],
        "40": [0.25, 0.75, 0, 0, 0.42778],
        "41": [0.25, 0.75, 0, 0, 0.42778],
        "42": [0, 0.75, 0, 0, 0.55],
        "43": [0.11667, 0.61667, 0, 0, 0.85556],
        "44": [0.10556, 0.13056, 0, 0, 0.30556],
        "45": [0, 0.45833, 0, 0, 0.36667],
        "46": [0, 0.13056, 0, 0, 0.30556],
        "47": [0.25, 0.75, 0, 0, 0.55],
        "48": [0, 0.69444, 0, 0, 0.55],
        "49": [0, 0.69444, 0, 0, 0.55],
        "50": [0, 0.69444, 0, 0, 0.55],
        "51": [0, 0.69444, 0, 0, 0.55],
        "52": [0, 0.69444, 0, 0, 0.55],
        "53": [0, 0.69444, 0, 0, 0.55],
        "54": [0, 0.69444, 0, 0, 0.55],
        "55": [0, 0.69444, 0, 0, 0.55],
        "56": [0, 0.69444, 0, 0, 0.55],
        "57": [0, 0.69444, 0, 0, 0.55],
        "58": [0, 0.45833, 0, 0, 0.30556],
        "59": [0.10556, 0.45833, 0, 0, 0.30556],
        "61": [-0.09375, 0.40625, 0, 0, 0.85556],
        "63": [0, 0.69444, 0, 0, 0.51945],
        "64": [0, 0.69444, 0, 0, 0.73334],
        "65": [0, 0.69444, 0, 0, 0.73334],
        "66": [0, 0.69444, 0, 0, 0.73334],
        "67": [0, 0.69444, 0, 0, 0.70278],
        "68": [0, 0.69444, 0, 0, 0.79445],
        "69": [0, 0.69444, 0, 0, 0.64167],
        "70": [0, 0.69444, 0, 0, 0.61111],
        "71": [0, 0.69444, 0, 0, 0.73334],
        "72": [0, 0.69444, 0, 0, 0.79445],
        "73": [0, 0.69444, 0, 0, 0.33056],
        "74": [0, 0.69444, 0, 0, 0.51945],
        "75": [0, 0.69444, 0, 0, 0.76389],
        "76": [0, 0.69444, 0, 0, 0.58056],
        "77": [0, 0.69444, 0, 0, 0.97778],
        "78": [0, 0.69444, 0, 0, 0.79445],
        "79": [0, 0.69444, 0, 0, 0.79445],
        "80": [0, 0.69444, 0, 0, 0.70278],
        "81": [0.10556, 0.69444, 0, 0, 0.79445],
        "82": [0, 0.69444, 0, 0, 0.70278],
        "83": [0, 0.69444, 0, 0, 0.61111],
        "84": [0, 0.69444, 0, 0, 0.73334],
        "85": [0, 0.69444, 0, 0, 0.76389],
        "86": [0, 0.69444, 0.01528, 0, 0.73334],
        "87": [0, 0.69444, 0.01528, 0, 1.03889],
        "88": [0, 0.69444, 0, 0, 0.73334],
        "89": [0, 0.69444, 0.0275, 0, 0.73334],
        "90": [0, 0.69444, 0, 0, 0.67223],
        "91": [0.25, 0.75, 0, 0, 0.34306],
        "93": [0.25, 0.75, 0, 0, 0.34306],
        "94": [0, 0.69444, 0, 0, 0.55],
        "95": [0.35, 0.10833, 0.03056, 0, 0.55],
        "97": [0, 0.45833, 0, 0, 0.525],
        "98": [0, 0.69444, 0, 0, 0.56111],
        "99": [0, 0.45833, 0, 0, 0.48889],
        "100": [0, 0.69444, 0, 0, 0.56111],
        "101": [0, 0.45833, 0, 0, 0.51111],
        "102": [0, 0.69444, 0.07639, 0, 0.33611],
        "103": [0.19444, 0.45833, 0.01528, 0, 0.55],
        "104": [0, 0.69444, 0, 0, 0.56111],
        "105": [0, 0.69444, 0, 0, 0.25556],
        "106": [0.19444, 0.69444, 0, 0, 0.28611],
        "107": [0, 0.69444, 0, 0, 0.53056],
        "108": [0, 0.69444, 0, 0, 0.25556],
        "109": [0, 0.45833, 0, 0, 0.86667],
        "110": [0, 0.45833, 0, 0, 0.56111],
        "111": [0, 0.45833, 0, 0, 0.55],
        "112": [0.19444, 0.45833, 0, 0, 0.56111],
        "113": [0.19444, 0.45833, 0, 0, 0.56111],
        "114": [0, 0.45833, 0.01528, 0, 0.37222],
        "115": [0, 0.45833, 0, 0, 0.42167],
        "116": [0, 0.58929, 0, 0, 0.40417],
        "117": [0, 0.45833, 0, 0, 0.56111],
        "118": [0, 0.45833, 0.01528, 0, 0.5],
        "119": [0, 0.45833, 0.01528, 0, 0.74445],
        "120": [0, 0.45833, 0, 0, 0.5],
        "121": [0.19444, 0.45833, 0.01528, 0, 0.5],
        "122": [0, 0.45833, 0, 0, 0.47639],
        "126": [0.35, 0.34444, 0, 0, 0.55],
        "160": [0, 0, 0, 0, 0.25],
        "168": [0, 0.69444, 0, 0, 0.55],
        "176": [0, 0.69444, 0, 0, 0.73334],
        "180": [0, 0.69444, 0, 0, 0.55],
        "184": [0.17014, 0, 0, 0, 0.48889],
        "305": [0, 0.45833, 0, 0, 0.25556],
        "567": [0.19444, 0.45833, 0, 0, 0.28611],
        "710": [0, 0.69444, 0, 0, 0.55],
        "711": [0, 0.63542, 0, 0, 0.55],
        "713": [0, 0.63778, 0, 0, 0.55],
        "728": [0, 0.69444, 0, 0, 0.55],
        "729": [0, 0.69444, 0, 0, 0.30556],
        "730": [0, 0.69444, 0, 0, 0.73334],
        "732": [0, 0.69444, 0, 0, 0.55],
        "733": [0, 0.69444, 0, 0, 0.55],
        "915": [0, 0.69444, 0, 0, 0.58056],
        "916": [0, 0.69444, 0, 0, 0.91667],
        "920": [0, 0.69444, 0, 0, 0.85556],
        "923": [0, 0.69444, 0, 0, 0.67223],
        "926": [0, 0.69444, 0, 0, 0.73334],
        "928": [0, 0.69444, 0, 0, 0.79445],
        "931": [0, 0.69444, 0, 0, 0.79445],
        "933": [0, 0.69444, 0, 0, 0.85556],
        "934": [0, 0.69444, 0, 0, 0.79445],
        "936": [0, 0.69444, 0, 0, 0.85556],
        "937": [0, 0.69444, 0, 0, 0.79445],
        "8211": [0, 0.45833, 0.03056, 0, 0.55],
        "8212": [0, 0.45833, 0.03056, 0, 1.10001],
        "8216": [0, 0.69444, 0, 0, 0.30556],
        "8217": [0, 0.69444, 0, 0, 0.30556],
        "8220": [0, 0.69444, 0, 0, 0.55834],
        "8221": [0, 0.69444, 0, 0, 0.55834]
      },
      "SansSerif-Italic": {
        "32": [0, 0, 0, 0, 0.25],
        "33": [0, 0.69444, 0.05733, 0, 0.31945],
        "34": [0, 0.69444, 316e-5, 0, 0.5],
        "35": [0.19444, 0.69444, 0.05087, 0, 0.83334],
        "36": [0.05556, 0.75, 0.11156, 0, 0.5],
        "37": [0.05556, 0.75, 0.03126, 0, 0.83334],
        "38": [0, 0.69444, 0.03058, 0, 0.75834],
        "39": [0, 0.69444, 0.07816, 0, 0.27778],
        "40": [0.25, 0.75, 0.13164, 0, 0.38889],
        "41": [0.25, 0.75, 0.02536, 0, 0.38889],
        "42": [0, 0.75, 0.11775, 0, 0.5],
        "43": [0.08333, 0.58333, 0.02536, 0, 0.77778],
        "44": [0.125, 0.08333, 0, 0, 0.27778],
        "45": [0, 0.44444, 0.01946, 0, 0.33333],
        "46": [0, 0.08333, 0, 0, 0.27778],
        "47": [0.25, 0.75, 0.13164, 0, 0.5],
        "48": [0, 0.65556, 0.11156, 0, 0.5],
        "49": [0, 0.65556, 0.11156, 0, 0.5],
        "50": [0, 0.65556, 0.11156, 0, 0.5],
        "51": [0, 0.65556, 0.11156, 0, 0.5],
        "52": [0, 0.65556, 0.11156, 0, 0.5],
        "53": [0, 0.65556, 0.11156, 0, 0.5],
        "54": [0, 0.65556, 0.11156, 0, 0.5],
        "55": [0, 0.65556, 0.11156, 0, 0.5],
        "56": [0, 0.65556, 0.11156, 0, 0.5],
        "57": [0, 0.65556, 0.11156, 0, 0.5],
        "58": [0, 0.44444, 0.02502, 0, 0.27778],
        "59": [0.125, 0.44444, 0.02502, 0, 0.27778],
        "61": [-0.13, 0.37, 0.05087, 0, 0.77778],
        "63": [0, 0.69444, 0.11809, 0, 0.47222],
        "64": [0, 0.69444, 0.07555, 0, 0.66667],
        "65": [0, 0.69444, 0, 0, 0.66667],
        "66": [0, 0.69444, 0.08293, 0, 0.66667],
        "67": [0, 0.69444, 0.11983, 0, 0.63889],
        "68": [0, 0.69444, 0.07555, 0, 0.72223],
        "69": [0, 0.69444, 0.11983, 0, 0.59722],
        "70": [0, 0.69444, 0.13372, 0, 0.56945],
        "71": [0, 0.69444, 0.11983, 0, 0.66667],
        "72": [0, 0.69444, 0.08094, 0, 0.70834],
        "73": [0, 0.69444, 0.13372, 0, 0.27778],
        "74": [0, 0.69444, 0.08094, 0, 0.47222],
        "75": [0, 0.69444, 0.11983, 0, 0.69445],
        "76": [0, 0.69444, 0, 0, 0.54167],
        "77": [0, 0.69444, 0.08094, 0, 0.875],
        "78": [0, 0.69444, 0.08094, 0, 0.70834],
        "79": [0, 0.69444, 0.07555, 0, 0.73611],
        "80": [0, 0.69444, 0.08293, 0, 0.63889],
        "81": [0.125, 0.69444, 0.07555, 0, 0.73611],
        "82": [0, 0.69444, 0.08293, 0, 0.64584],
        "83": [0, 0.69444, 0.09205, 0, 0.55556],
        "84": [0, 0.69444, 0.13372, 0, 0.68056],
        "85": [0, 0.69444, 0.08094, 0, 0.6875],
        "86": [0, 0.69444, 0.1615, 0, 0.66667],
        "87": [0, 0.69444, 0.1615, 0, 0.94445],
        "88": [0, 0.69444, 0.13372, 0, 0.66667],
        "89": [0, 0.69444, 0.17261, 0, 0.66667],
        "90": [0, 0.69444, 0.11983, 0, 0.61111],
        "91": [0.25, 0.75, 0.15942, 0, 0.28889],
        "93": [0.25, 0.75, 0.08719, 0, 0.28889],
        "94": [0, 0.69444, 0.0799, 0, 0.5],
        "95": [0.35, 0.09444, 0.08616, 0, 0.5],
        "97": [0, 0.44444, 981e-5, 0, 0.48056],
        "98": [0, 0.69444, 0.03057, 0, 0.51667],
        "99": [0, 0.44444, 0.08336, 0, 0.44445],
        "100": [0, 0.69444, 0.09483, 0, 0.51667],
        "101": [0, 0.44444, 0.06778, 0, 0.44445],
        "102": [0, 0.69444, 0.21705, 0, 0.30556],
        "103": [0.19444, 0.44444, 0.10836, 0, 0.5],
        "104": [0, 0.69444, 0.01778, 0, 0.51667],
        "105": [0, 0.67937, 0.09718, 0, 0.23889],
        "106": [0.19444, 0.67937, 0.09162, 0, 0.26667],
        "107": [0, 0.69444, 0.08336, 0, 0.48889],
        "108": [0, 0.69444, 0.09483, 0, 0.23889],
        "109": [0, 0.44444, 0.01778, 0, 0.79445],
        "110": [0, 0.44444, 0.01778, 0, 0.51667],
        "111": [0, 0.44444, 0.06613, 0, 0.5],
        "112": [0.19444, 0.44444, 0.0389, 0, 0.51667],
        "113": [0.19444, 0.44444, 0.04169, 0, 0.51667],
        "114": [0, 0.44444, 0.10836, 0, 0.34167],
        "115": [0, 0.44444, 0.0778, 0, 0.38333],
        "116": [0, 0.57143, 0.07225, 0, 0.36111],
        "117": [0, 0.44444, 0.04169, 0, 0.51667],
        "118": [0, 0.44444, 0.10836, 0, 0.46111],
        "119": [0, 0.44444, 0.10836, 0, 0.68334],
        "120": [0, 0.44444, 0.09169, 0, 0.46111],
        "121": [0.19444, 0.44444, 0.10836, 0, 0.46111],
        "122": [0, 0.44444, 0.08752, 0, 0.43472],
        "126": [0.35, 0.32659, 0.08826, 0, 0.5],
        "160": [0, 0, 0, 0, 0.25],
        "168": [0, 0.67937, 0.06385, 0, 0.5],
        "176": [0, 0.69444, 0, 0, 0.73752],
        "184": [0.17014, 0, 0, 0, 0.44445],
        "305": [0, 0.44444, 0.04169, 0, 0.23889],
        "567": [0.19444, 0.44444, 0.04169, 0, 0.26667],
        "710": [0, 0.69444, 0.0799, 0, 0.5],
        "711": [0, 0.63194, 0.08432, 0, 0.5],
        "713": [0, 0.60889, 0.08776, 0, 0.5],
        "714": [0, 0.69444, 0.09205, 0, 0.5],
        "715": [0, 0.69444, 0, 0, 0.5],
        "728": [0, 0.69444, 0.09483, 0, 0.5],
        "729": [0, 0.67937, 0.07774, 0, 0.27778],
        "730": [0, 0.69444, 0, 0, 0.73752],
        "732": [0, 0.67659, 0.08826, 0, 0.5],
        "733": [0, 0.69444, 0.09205, 0, 0.5],
        "915": [0, 0.69444, 0.13372, 0, 0.54167],
        "916": [0, 0.69444, 0, 0, 0.83334],
        "920": [0, 0.69444, 0.07555, 0, 0.77778],
        "923": [0, 0.69444, 0, 0, 0.61111],
        "926": [0, 0.69444, 0.12816, 0, 0.66667],
        "928": [0, 0.69444, 0.08094, 0, 0.70834],
        "931": [0, 0.69444, 0.11983, 0, 0.72222],
        "933": [0, 0.69444, 0.09031, 0, 0.77778],
        "934": [0, 0.69444, 0.04603, 0, 0.72222],
        "936": [0, 0.69444, 0.09031, 0, 0.77778],
        "937": [0, 0.69444, 0.08293, 0, 0.72222],
        "8211": [0, 0.44444, 0.08616, 0, 0.5],
        "8212": [0, 0.44444, 0.08616, 0, 1],
        "8216": [0, 0.69444, 0.07816, 0, 0.27778],
        "8217": [0, 0.69444, 0.07816, 0, 0.27778],
        "8220": [0, 0.69444, 0.14205, 0, 0.5],
        "8221": [0, 0.69444, 316e-5, 0, 0.5]
      },
      "SansSerif-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "33": [0, 0.69444, 0, 0, 0.31945],
        "34": [0, 0.69444, 0, 0, 0.5],
        "35": [0.19444, 0.69444, 0, 0, 0.83334],
        "36": [0.05556, 0.75, 0, 0, 0.5],
        "37": [0.05556, 0.75, 0, 0, 0.83334],
        "38": [0, 0.69444, 0, 0, 0.75834],
        "39": [0, 0.69444, 0, 0, 0.27778],
        "40": [0.25, 0.75, 0, 0, 0.38889],
        "41": [0.25, 0.75, 0, 0, 0.38889],
        "42": [0, 0.75, 0, 0, 0.5],
        "43": [0.08333, 0.58333, 0, 0, 0.77778],
        "44": [0.125, 0.08333, 0, 0, 0.27778],
        "45": [0, 0.44444, 0, 0, 0.33333],
        "46": [0, 0.08333, 0, 0, 0.27778],
        "47": [0.25, 0.75, 0, 0, 0.5],
        "48": [0, 0.65556, 0, 0, 0.5],
        "49": [0, 0.65556, 0, 0, 0.5],
        "50": [0, 0.65556, 0, 0, 0.5],
        "51": [0, 0.65556, 0, 0, 0.5],
        "52": [0, 0.65556, 0, 0, 0.5],
        "53": [0, 0.65556, 0, 0, 0.5],
        "54": [0, 0.65556, 0, 0, 0.5],
        "55": [0, 0.65556, 0, 0, 0.5],
        "56": [0, 0.65556, 0, 0, 0.5],
        "57": [0, 0.65556, 0, 0, 0.5],
        "58": [0, 0.44444, 0, 0, 0.27778],
        "59": [0.125, 0.44444, 0, 0, 0.27778],
        "61": [-0.13, 0.37, 0, 0, 0.77778],
        "63": [0, 0.69444, 0, 0, 0.47222],
        "64": [0, 0.69444, 0, 0, 0.66667],
        "65": [0, 0.69444, 0, 0, 0.66667],
        "66": [0, 0.69444, 0, 0, 0.66667],
        "67": [0, 0.69444, 0, 0, 0.63889],
        "68": [0, 0.69444, 0, 0, 0.72223],
        "69": [0, 0.69444, 0, 0, 0.59722],
        "70": [0, 0.69444, 0, 0, 0.56945],
        "71": [0, 0.69444, 0, 0, 0.66667],
        "72": [0, 0.69444, 0, 0, 0.70834],
        "73": [0, 0.69444, 0, 0, 0.27778],
        "74": [0, 0.69444, 0, 0, 0.47222],
        "75": [0, 0.69444, 0, 0, 0.69445],
        "76": [0, 0.69444, 0, 0, 0.54167],
        "77": [0, 0.69444, 0, 0, 0.875],
        "78": [0, 0.69444, 0, 0, 0.70834],
        "79": [0, 0.69444, 0, 0, 0.73611],
        "80": [0, 0.69444, 0, 0, 0.63889],
        "81": [0.125, 0.69444, 0, 0, 0.73611],
        "82": [0, 0.69444, 0, 0, 0.64584],
        "83": [0, 0.69444, 0, 0, 0.55556],
        "84": [0, 0.69444, 0, 0, 0.68056],
        "85": [0, 0.69444, 0, 0, 0.6875],
        "86": [0, 0.69444, 0.01389, 0, 0.66667],
        "87": [0, 0.69444, 0.01389, 0, 0.94445],
        "88": [0, 0.69444, 0, 0, 0.66667],
        "89": [0, 0.69444, 0.025, 0, 0.66667],
        "90": [0, 0.69444, 0, 0, 0.61111],
        "91": [0.25, 0.75, 0, 0, 0.28889],
        "93": [0.25, 0.75, 0, 0, 0.28889],
        "94": [0, 0.69444, 0, 0, 0.5],
        "95": [0.35, 0.09444, 0.02778, 0, 0.5],
        "97": [0, 0.44444, 0, 0, 0.48056],
        "98": [0, 0.69444, 0, 0, 0.51667],
        "99": [0, 0.44444, 0, 0, 0.44445],
        "100": [0, 0.69444, 0, 0, 0.51667],
        "101": [0, 0.44444, 0, 0, 0.44445],
        "102": [0, 0.69444, 0.06944, 0, 0.30556],
        "103": [0.19444, 0.44444, 0.01389, 0, 0.5],
        "104": [0, 0.69444, 0, 0, 0.51667],
        "105": [0, 0.67937, 0, 0, 0.23889],
        "106": [0.19444, 0.67937, 0, 0, 0.26667],
        "107": [0, 0.69444, 0, 0, 0.48889],
        "108": [0, 0.69444, 0, 0, 0.23889],
        "109": [0, 0.44444, 0, 0, 0.79445],
        "110": [0, 0.44444, 0, 0, 0.51667],
        "111": [0, 0.44444, 0, 0, 0.5],
        "112": [0.19444, 0.44444, 0, 0, 0.51667],
        "113": [0.19444, 0.44444, 0, 0, 0.51667],
        "114": [0, 0.44444, 0.01389, 0, 0.34167],
        "115": [0, 0.44444, 0, 0, 0.38333],
        "116": [0, 0.57143, 0, 0, 0.36111],
        "117": [0, 0.44444, 0, 0, 0.51667],
        "118": [0, 0.44444, 0.01389, 0, 0.46111],
        "119": [0, 0.44444, 0.01389, 0, 0.68334],
        "120": [0, 0.44444, 0, 0, 0.46111],
        "121": [0.19444, 0.44444, 0.01389, 0, 0.46111],
        "122": [0, 0.44444, 0, 0, 0.43472],
        "126": [0.35, 0.32659, 0, 0, 0.5],
        "160": [0, 0, 0, 0, 0.25],
        "168": [0, 0.67937, 0, 0, 0.5],
        "176": [0, 0.69444, 0, 0, 0.66667],
        "184": [0.17014, 0, 0, 0, 0.44445],
        "305": [0, 0.44444, 0, 0, 0.23889],
        "567": [0.19444, 0.44444, 0, 0, 0.26667],
        "710": [0, 0.69444, 0, 0, 0.5],
        "711": [0, 0.63194, 0, 0, 0.5],
        "713": [0, 0.60889, 0, 0, 0.5],
        "714": [0, 0.69444, 0, 0, 0.5],
        "715": [0, 0.69444, 0, 0, 0.5],
        "728": [0, 0.69444, 0, 0, 0.5],
        "729": [0, 0.67937, 0, 0, 0.27778],
        "730": [0, 0.69444, 0, 0, 0.66667],
        "732": [0, 0.67659, 0, 0, 0.5],
        "733": [0, 0.69444, 0, 0, 0.5],
        "915": [0, 0.69444, 0, 0, 0.54167],
        "916": [0, 0.69444, 0, 0, 0.83334],
        "920": [0, 0.69444, 0, 0, 0.77778],
        "923": [0, 0.69444, 0, 0, 0.61111],
        "926": [0, 0.69444, 0, 0, 0.66667],
        "928": [0, 0.69444, 0, 0, 0.70834],
        "931": [0, 0.69444, 0, 0, 0.72222],
        "933": [0, 0.69444, 0, 0, 0.77778],
        "934": [0, 0.69444, 0, 0, 0.72222],
        "936": [0, 0.69444, 0, 0, 0.77778],
        "937": [0, 0.69444, 0, 0, 0.72222],
        "8211": [0, 0.44444, 0.02778, 0, 0.5],
        "8212": [0, 0.44444, 0.02778, 0, 1],
        "8216": [0, 0.69444, 0, 0, 0.27778],
        "8217": [0, 0.69444, 0, 0, 0.27778],
        "8220": [0, 0.69444, 0, 0, 0.5],
        "8221": [0, 0.69444, 0, 0, 0.5]
      },
      "Script-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "65": [0, 0.7, 0.22925, 0, 0.80253],
        "66": [0, 0.7, 0.04087, 0, 0.90757],
        "67": [0, 0.7, 0.1689, 0, 0.66619],
        "68": [0, 0.7, 0.09371, 0, 0.77443],
        "69": [0, 0.7, 0.18583, 0, 0.56162],
        "70": [0, 0.7, 0.13634, 0, 0.89544],
        "71": [0, 0.7, 0.17322, 0, 0.60961],
        "72": [0, 0.7, 0.29694, 0, 0.96919],
        "73": [0, 0.7, 0.19189, 0, 0.80907],
        "74": [0.27778, 0.7, 0.19189, 0, 1.05159],
        "75": [0, 0.7, 0.31259, 0, 0.91364],
        "76": [0, 0.7, 0.19189, 0, 0.87373],
        "77": [0, 0.7, 0.15981, 0, 1.08031],
        "78": [0, 0.7, 0.3525, 0, 0.9015],
        "79": [0, 0.7, 0.08078, 0, 0.73787],
        "80": [0, 0.7, 0.08078, 0, 1.01262],
        "81": [0, 0.7, 0.03305, 0, 0.88282],
        "82": [0, 0.7, 0.06259, 0, 0.85],
        "83": [0, 0.7, 0.19189, 0, 0.86767],
        "84": [0, 0.7, 0.29087, 0, 0.74697],
        "85": [0, 0.7, 0.25815, 0, 0.79996],
        "86": [0, 0.7, 0.27523, 0, 0.62204],
        "87": [0, 0.7, 0.27523, 0, 0.80532],
        "88": [0, 0.7, 0.26006, 0, 0.94445],
        "89": [0, 0.7, 0.2939, 0, 0.70961],
        "90": [0, 0.7, 0.24037, 0, 0.8212],
        "160": [0, 0, 0, 0, 0.25]
      },
      "Size1-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "40": [0.35001, 0.85, 0, 0, 0.45834],
        "41": [0.35001, 0.85, 0, 0, 0.45834],
        "47": [0.35001, 0.85, 0, 0, 0.57778],
        "91": [0.35001, 0.85, 0, 0, 0.41667],
        "92": [0.35001, 0.85, 0, 0, 0.57778],
        "93": [0.35001, 0.85, 0, 0, 0.41667],
        "123": [0.35001, 0.85, 0, 0, 0.58334],
        "125": [0.35001, 0.85, 0, 0, 0.58334],
        "160": [0, 0, 0, 0, 0.25],
        "710": [0, 0.72222, 0, 0, 0.55556],
        "732": [0, 0.72222, 0, 0, 0.55556],
        "770": [0, 0.72222, 0, 0, 0.55556],
        "771": [0, 0.72222, 0, 0, 0.55556],
        "8214": [-99e-5, 0.601, 0, 0, 0.77778],
        "8593": [1e-5, 0.6, 0, 0, 0.66667],
        "8595": [1e-5, 0.6, 0, 0, 0.66667],
        "8657": [1e-5, 0.6, 0, 0, 0.77778],
        "8659": [1e-5, 0.6, 0, 0, 0.77778],
        "8719": [0.25001, 0.75, 0, 0, 0.94445],
        "8720": [0.25001, 0.75, 0, 0, 0.94445],
        "8721": [0.25001, 0.75, 0, 0, 1.05556],
        "8730": [0.35001, 0.85, 0, 0, 1],
        "8739": [-599e-5, 0.606, 0, 0, 0.33333],
        "8741": [-599e-5, 0.606, 0, 0, 0.55556],
        "8747": [0.30612, 0.805, 0.19445, 0, 0.47222],
        "8748": [0.306, 0.805, 0.19445, 0, 0.47222],
        "8749": [0.306, 0.805, 0.19445, 0, 0.47222],
        "8750": [0.30612, 0.805, 0.19445, 0, 0.47222],
        "8896": [0.25001, 0.75, 0, 0, 0.83334],
        "8897": [0.25001, 0.75, 0, 0, 0.83334],
        "8898": [0.25001, 0.75, 0, 0, 0.83334],
        "8899": [0.25001, 0.75, 0, 0, 0.83334],
        "8968": [0.35001, 0.85, 0, 0, 0.47222],
        "8969": [0.35001, 0.85, 0, 0, 0.47222],
        "8970": [0.35001, 0.85, 0, 0, 0.47222],
        "8971": [0.35001, 0.85, 0, 0, 0.47222],
        "9168": [-99e-5, 0.601, 0, 0, 0.66667],
        "10216": [0.35001, 0.85, 0, 0, 0.47222],
        "10217": [0.35001, 0.85, 0, 0, 0.47222],
        "10752": [0.25001, 0.75, 0, 0, 1.11111],
        "10753": [0.25001, 0.75, 0, 0, 1.11111],
        "10754": [0.25001, 0.75, 0, 0, 1.11111],
        "10756": [0.25001, 0.75, 0, 0, 0.83334],
        "10758": [0.25001, 0.75, 0, 0, 0.83334]
      },
      "Size2-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "40": [0.65002, 1.15, 0, 0, 0.59722],
        "41": [0.65002, 1.15, 0, 0, 0.59722],
        "47": [0.65002, 1.15, 0, 0, 0.81111],
        "91": [0.65002, 1.15, 0, 0, 0.47222],
        "92": [0.65002, 1.15, 0, 0, 0.81111],
        "93": [0.65002, 1.15, 0, 0, 0.47222],
        "123": [0.65002, 1.15, 0, 0, 0.66667],
        "125": [0.65002, 1.15, 0, 0, 0.66667],
        "160": [0, 0, 0, 0, 0.25],
        "710": [0, 0.75, 0, 0, 1],
        "732": [0, 0.75, 0, 0, 1],
        "770": [0, 0.75, 0, 0, 1],
        "771": [0, 0.75, 0, 0, 1],
        "8719": [0.55001, 1.05, 0, 0, 1.27778],
        "8720": [0.55001, 1.05, 0, 0, 1.27778],
        "8721": [0.55001, 1.05, 0, 0, 1.44445],
        "8730": [0.65002, 1.15, 0, 0, 1],
        "8747": [0.86225, 1.36, 0.44445, 0, 0.55556],
        "8748": [0.862, 1.36, 0.44445, 0, 0.55556],
        "8749": [0.862, 1.36, 0.44445, 0, 0.55556],
        "8750": [0.86225, 1.36, 0.44445, 0, 0.55556],
        "8896": [0.55001, 1.05, 0, 0, 1.11111],
        "8897": [0.55001, 1.05, 0, 0, 1.11111],
        "8898": [0.55001, 1.05, 0, 0, 1.11111],
        "8899": [0.55001, 1.05, 0, 0, 1.11111],
        "8968": [0.65002, 1.15, 0, 0, 0.52778],
        "8969": [0.65002, 1.15, 0, 0, 0.52778],
        "8970": [0.65002, 1.15, 0, 0, 0.52778],
        "8971": [0.65002, 1.15, 0, 0, 0.52778],
        "10216": [0.65002, 1.15, 0, 0, 0.61111],
        "10217": [0.65002, 1.15, 0, 0, 0.61111],
        "10752": [0.55001, 1.05, 0, 0, 1.51112],
        "10753": [0.55001, 1.05, 0, 0, 1.51112],
        "10754": [0.55001, 1.05, 0, 0, 1.51112],
        "10756": [0.55001, 1.05, 0, 0, 1.11111],
        "10758": [0.55001, 1.05, 0, 0, 1.11111]
      },
      "Size3-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "40": [0.95003, 1.45, 0, 0, 0.73611],
        "41": [0.95003, 1.45, 0, 0, 0.73611],
        "47": [0.95003, 1.45, 0, 0, 1.04445],
        "91": [0.95003, 1.45, 0, 0, 0.52778],
        "92": [0.95003, 1.45, 0, 0, 1.04445],
        "93": [0.95003, 1.45, 0, 0, 0.52778],
        "123": [0.95003, 1.45, 0, 0, 0.75],
        "125": [0.95003, 1.45, 0, 0, 0.75],
        "160": [0, 0, 0, 0, 0.25],
        "710": [0, 0.75, 0, 0, 1.44445],
        "732": [0, 0.75, 0, 0, 1.44445],
        "770": [0, 0.75, 0, 0, 1.44445],
        "771": [0, 0.75, 0, 0, 1.44445],
        "8730": [0.95003, 1.45, 0, 0, 1],
        "8968": [0.95003, 1.45, 0, 0, 0.58334],
        "8969": [0.95003, 1.45, 0, 0, 0.58334],
        "8970": [0.95003, 1.45, 0, 0, 0.58334],
        "8971": [0.95003, 1.45, 0, 0, 0.58334],
        "10216": [0.95003, 1.45, 0, 0, 0.75],
        "10217": [0.95003, 1.45, 0, 0, 0.75]
      },
      "Size4-Regular": {
        "32": [0, 0, 0, 0, 0.25],
        "40": [1.25003, 1.75, 0, 0, 0.79167],
        "41": [1.25003, 1.75, 0, 0, 0.79167],
        "47": [1.25003, 1.75, 0, 0, 1.27778],
        "91": [1.25003, 1.75, 0, 0, 0.58334],
        "92": [1.25003, 1.75, 0, 0, 1.27778],
        "93": [1.25003, 1.75, 0, 0, 0.58334],
        "123": [1.25003, 1.75, 0, 0, 0.80556],
        "125": [1.25003, 1.75, 0, 0, 0.80556],
        "160": [0, 0, 0, 0, 0.25],
        "710": [0, 0.825, 0, 0, 1.8889],
        "732": [0, 0.825, 0, 0, 1.8889],
        "770": [0, 0.825, 0, 0, 1.8889],
        "771": [0, 0.825, 0, 0, 1.8889],
        "8730": [1.25003, 1.75, 0, 0, 1],
        "8968": [1.25003, 1.75, 0, 0, 0.63889],
        "8969": [1.25003, 1.75, 0, 0, 0.63889],
        "8970": [1.25003, 1.75, 0, 0, 0.63889],
        "8971": [1.25003, 1.75, 0, 0, 0.63889],
        "9115": [0.64502, 1.155, 0, 0, 0.875],
        "9116": [1e-5, 0.6, 0, 0, 0.875],
        "9117": [0.64502, 1.155, 0, 0, 0.875],
        "9118": [0.64502, 1.155, 0, 0, 0.875],
        "9119": [1e-5, 0.6, 0, 0, 0.875],
        "9120": [0.64502, 1.155, 0, 0, 0.875],
        "9121": [0.64502, 1.155, 0, 0, 0.66667],
        "9122": [-99e-5, 0.601, 0, 0, 0.66667],
        "9123": [0.64502, 1.155, 0, 0, 0.66667],
        "9124": [0.64502, 1.155, 0, 0, 0.66667],
        "9125": [-99e-5, 0.601, 0, 0, 0.66667],
        "9126": [0.64502, 1.155, 0, 0, 0.66667],
        "9127": [1e-5, 0.9, 0, 0, 0.88889],
        "9128": [0.65002, 1.15, 0, 0, 0.88889],
        "9129": [0.90001, 0, 0, 0, 0.88889],
        "9130": [0, 0.3, 0, 0, 0.88889],
        "9131": [1e-5, 0.9, 0, 0, 0.88889],
        "9132": [0.65002, 1.15, 0, 0, 0.88889],
        "9133": [0.90001, 0, 0, 0, 0.88889],
        "9143": [0.88502, 0.915, 0, 0, 1.05556],
        "10216": [1.25003, 1.75, 0, 0, 0.80556],
        "10217": [1.25003, 1.75, 0, 0, 0.80556],
        "57344": [-499e-5, 0.605, 0, 0, 1.05556],
        "57345": [-499e-5, 0.605, 0, 0, 1.05556],
        "57680": [0, 0.12, 0, 0, 0.45],
        "57681": [0, 0.12, 0, 0, 0.45],
        "57682": [0, 0.12, 0, 0, 0.45],
        "57683": [0, 0.12, 0, 0, 0.45]
      },
      "Typewriter-Regular": {
        "32": [0, 0, 0, 0, 0.525],
        "33": [0, 0.61111, 0, 0, 0.525],
        "34": [0, 0.61111, 0, 0, 0.525],
        "35": [0, 0.61111, 0, 0, 0.525],
        "36": [0.08333, 0.69444, 0, 0, 0.525],
        "37": [0.08333, 0.69444, 0, 0, 0.525],
        "38": [0, 0.61111, 0, 0, 0.525],
        "39": [0, 0.61111, 0, 0, 0.525],
        "40": [0.08333, 0.69444, 0, 0, 0.525],
        "41": [0.08333, 0.69444, 0, 0, 0.525],
        "42": [0, 0.52083, 0, 0, 0.525],
        "43": [-0.08056, 0.53055, 0, 0, 0.525],
        "44": [0.13889, 0.125, 0, 0, 0.525],
        "45": [-0.08056, 0.53055, 0, 0, 0.525],
        "46": [0, 0.125, 0, 0, 0.525],
        "47": [0.08333, 0.69444, 0, 0, 0.525],
        "48": [0, 0.61111, 0, 0, 0.525],
        "49": [0, 0.61111, 0, 0, 0.525],
        "50": [0, 0.61111, 0, 0, 0.525],
        "51": [0, 0.61111, 0, 0, 0.525],
        "52": [0, 0.61111, 0, 0, 0.525],
        "53": [0, 0.61111, 0, 0, 0.525],
        "54": [0, 0.61111, 0, 0, 0.525],
        "55": [0, 0.61111, 0, 0, 0.525],
        "56": [0, 0.61111, 0, 0, 0.525],
        "57": [0, 0.61111, 0, 0, 0.525],
        "58": [0, 0.43056, 0, 0, 0.525],
        "59": [0.13889, 0.43056, 0, 0, 0.525],
        "60": [-0.05556, 0.55556, 0, 0, 0.525],
        "61": [-0.19549, 0.41562, 0, 0, 0.525],
        "62": [-0.05556, 0.55556, 0, 0, 0.525],
        "63": [0, 0.61111, 0, 0, 0.525],
        "64": [0, 0.61111, 0, 0, 0.525],
        "65": [0, 0.61111, 0, 0, 0.525],
        "66": [0, 0.61111, 0, 0, 0.525],
        "67": [0, 0.61111, 0, 0, 0.525],
        "68": [0, 0.61111, 0, 0, 0.525],
        "69": [0, 0.61111, 0, 0, 0.525],
        "70": [0, 0.61111, 0, 0, 0.525],
        "71": [0, 0.61111, 0, 0, 0.525],
        "72": [0, 0.61111, 0, 0, 0.525],
        "73": [0, 0.61111, 0, 0, 0.525],
        "74": [0, 0.61111, 0, 0, 0.525],
        "75": [0, 0.61111, 0, 0, 0.525],
        "76": [0, 0.61111, 0, 0, 0.525],
        "77": [0, 0.61111, 0, 0, 0.525],
        "78": [0, 0.61111, 0, 0, 0.525],
        "79": [0, 0.61111, 0, 0, 0.525],
        "80": [0, 0.61111, 0, 0, 0.525],
        "81": [0.13889, 0.61111, 0, 0, 0.525],
        "82": [0, 0.61111, 0, 0, 0.525],
        "83": [0, 0.61111, 0, 0, 0.525],
        "84": [0, 0.61111, 0, 0, 0.525],
        "85": [0, 0.61111, 0, 0, 0.525],
        "86": [0, 0.61111, 0, 0, 0.525],
        "87": [0, 0.61111, 0, 0, 0.525],
        "88": [0, 0.61111, 0, 0, 0.525],
        "89": [0, 0.61111, 0, 0, 0.525],
        "90": [0, 0.61111, 0, 0, 0.525],
        "91": [0.08333, 0.69444, 0, 0, 0.525],
        "92": [0.08333, 0.69444, 0, 0, 0.525],
        "93": [0.08333, 0.69444, 0, 0, 0.525],
        "94": [0, 0.61111, 0, 0, 0.525],
        "95": [0.09514, 0, 0, 0, 0.525],
        "96": [0, 0.61111, 0, 0, 0.525],
        "97": [0, 0.43056, 0, 0, 0.525],
        "98": [0, 0.61111, 0, 0, 0.525],
        "99": [0, 0.43056, 0, 0, 0.525],
        "100": [0, 0.61111, 0, 0, 0.525],
        "101": [0, 0.43056, 0, 0, 0.525],
        "102": [0, 0.61111, 0, 0, 0.525],
        "103": [0.22222, 0.43056, 0, 0, 0.525],
        "104": [0, 0.61111, 0, 0, 0.525],
        "105": [0, 0.61111, 0, 0, 0.525],
        "106": [0.22222, 0.61111, 0, 0, 0.525],
        "107": [0, 0.61111, 0, 0, 0.525],
        "108": [0, 0.61111, 0, 0, 0.525],
        "109": [0, 0.43056, 0, 0, 0.525],
        "110": [0, 0.43056, 0, 0, 0.525],
        "111": [0, 0.43056, 0, 0, 0.525],
        "112": [0.22222, 0.43056, 0, 0, 0.525],
        "113": [0.22222, 0.43056, 0, 0, 0.525],
        "114": [0, 0.43056, 0, 0, 0.525],
        "115": [0, 0.43056, 0, 0, 0.525],
        "116": [0, 0.55358, 0, 0, 0.525],
        "117": [0, 0.43056, 0, 0, 0.525],
        "118": [0, 0.43056, 0, 0, 0.525],
        "119": [0, 0.43056, 0, 0, 0.525],
        "120": [0, 0.43056, 0, 0, 0.525],
        "121": [0.22222, 0.43056, 0, 0, 0.525],
        "122": [0, 0.43056, 0, 0, 0.525],
        "123": [0.08333, 0.69444, 0, 0, 0.525],
        "124": [0.08333, 0.69444, 0, 0, 0.525],
        "125": [0.08333, 0.69444, 0, 0, 0.525],
        "126": [0, 0.61111, 0, 0, 0.525],
        "127": [0, 0.61111, 0, 0, 0.525],
        "160": [0, 0, 0, 0, 0.525],
        "176": [0, 0.61111, 0, 0, 0.525],
        "184": [0.19445, 0, 0, 0, 0.525],
        "305": [0, 0.43056, 0, 0, 0.525],
        "567": [0.22222, 0.43056, 0, 0, 0.525],
        "711": [0, 0.56597, 0, 0, 0.525],
        "713": [0, 0.56555, 0, 0, 0.525],
        "714": [0, 0.61111, 0, 0, 0.525],
        "715": [0, 0.61111, 0, 0, 0.525],
        "728": [0, 0.61111, 0, 0, 0.525],
        "730": [0, 0.61111, 0, 0, 0.525],
        "770": [0, 0.61111, 0, 0, 0.525],
        "771": [0, 0.61111, 0, 0, 0.525],
        "776": [0, 0.61111, 0, 0, 0.525],
        "915": [0, 0.61111, 0, 0, 0.525],
        "916": [0, 0.61111, 0, 0, 0.525],
        "920": [0, 0.61111, 0, 0, 0.525],
        "923": [0, 0.61111, 0, 0, 0.525],
        "926": [0, 0.61111, 0, 0, 0.525],
        "928": [0, 0.61111, 0, 0, 0.525],
        "931": [0, 0.61111, 0, 0, 0.525],
        "933": [0, 0.61111, 0, 0, 0.525],
        "934": [0, 0.61111, 0, 0, 0.525],
        "936": [0, 0.61111, 0, 0, 0.525],
        "937": [0, 0.61111, 0, 0, 0.525],
        "8216": [0, 0.61111, 0, 0, 0.525],
        "8217": [0, 0.61111, 0, 0, 0.525],
        "8242": [0, 0.61111, 0, 0, 0.525],
        "9251": [0.11111, 0.21944, 0, 0, 0.525]
      }
    };
    sigmasAndXis = {
      slant: [0.25, 0.25, 0.25],
      space: [0, 0, 0],
      stretch: [0, 0, 0],
      shrink: [0, 0, 0],
      xHeight: [0.431, 0.431, 0.431],
      quad: [1, 1.171, 1.472],
      extraSpace: [0, 0, 0],
      num1: [0.677, 0.732, 0.925],
      num2: [0.394, 0.384, 0.387],
      num3: [0.444, 0.471, 0.504],
      denom1: [0.686, 0.752, 1.025],
      denom2: [0.345, 0.344, 0.532],
      sup1: [0.413, 0.503, 0.504],
      sup2: [0.363, 0.431, 0.404],
      sup3: [0.289, 0.286, 0.294],
      sub1: [0.15, 0.143, 0.2],
      sub2: [0.247, 0.286, 0.4],
      supDrop: [0.386, 0.353, 0.494],
      subDrop: [0.05, 0.071, 0.1],
      delim1: [2.39, 1.7, 1.98],
      delim2: [1.01, 1.157, 1.42],
      axisHeight: [0.25, 0.25, 0.25],
      defaultRuleThickness: [0.04, 0.049, 0.049],
      bigOpSpacing1: [0.111, 0.111, 0.111],
      bigOpSpacing2: [0.166, 0.166, 0.166],
      bigOpSpacing3: [0.2, 0.2, 0.2],
      bigOpSpacing4: [0.6, 0.611, 0.611],
      bigOpSpacing5: [0.1, 0.143, 0.143],
      sqrtRuleThickness: [0.04, 0.04, 0.04],
      ptPerEm: [10, 10, 10],
      doubleRuleSep: [0.2, 0.2, 0.2],
      arrayRuleWidth: [0.04, 0.04, 0.04],
      fboxsep: [0.3, 0.3, 0.3],
      fboxrule: [0.04, 0.04, 0.04]
    };
    extraCharacterMap = {
      "\xC5": "A",
      "\xD0": "D",
      "\xDE": "o",
      "\xE5": "a",
      "\xF0": "d",
      "\xFE": "o",
      "\u0410": "A",
      "\u0411": "B",
      "\u0412": "B",
      "\u0413": "F",
      "\u0414": "A",
      "\u0415": "E",
      "\u0416": "K",
      "\u0417": "3",
      "\u0418": "N",
      "\u0419": "N",
      "\u041A": "K",
      "\u041B": "N",
      "\u041C": "M",
      "\u041D": "H",
      "\u041E": "O",
      "\u041F": "N",
      "\u0420": "P",
      "\u0421": "C",
      "\u0422": "T",
      "\u0423": "y",
      "\u0424": "O",
      "\u0425": "X",
      "\u0426": "U",
      "\u0427": "h",
      "\u0428": "W",
      "\u0429": "W",
      "\u042A": "B",
      "\u042B": "X",
      "\u042C": "B",
      "\u042D": "3",
      "\u042E": "X",
      "\u042F": "R",
      "\u0430": "a",
      "\u0431": "b",
      "\u0432": "a",
      "\u0433": "r",
      "\u0434": "y",
      "\u0435": "e",
      "\u0436": "m",
      "\u0437": "e",
      "\u0438": "n",
      "\u0439": "n",
      "\u043A": "n",
      "\u043B": "n",
      "\u043C": "m",
      "\u043D": "n",
      "\u043E": "o",
      "\u043F": "n",
      "\u0440": "p",
      "\u0441": "c",
      "\u0442": "o",
      "\u0443": "y",
      "\u0444": "b",
      "\u0445": "x",
      "\u0446": "n",
      "\u0447": "n",
      "\u0448": "w",
      "\u0449": "w",
      "\u044A": "a",
      "\u044B": "m",
      "\u044C": "a",
      "\u044D": "e",
      "\u044E": "m",
      "\u044F": "r"
    };
    fontMetricsBySizeIndex = {};
    sizeStyleMap = [
      [1, 1, 1],
      [2, 1, 1],
      [3, 1, 1],
      [4, 2, 1],
      [5, 2, 1],
      [6, 3, 1],
      [7, 4, 2],
      [8, 6, 3],
      [9, 7, 6],
      [10, 8, 7],
      [11, 10, 9]
    ];
    sizeMultipliers = [
      0.5,
      0.6,
      0.7,
      0.8,
      0.9,
      1,
      1.2,
      1.44,
      1.728,
      2.074,
      2.488
    ];
    sizeAtStyle = function sizeAtStyle2(size, style) {
      return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];
    };
    Options = class {
      constructor(data) {
        this.style = void 0;
        this.color = void 0;
        this.size = void 0;
        this.textSize = void 0;
        this.phantom = void 0;
        this.font = void 0;
        this.fontFamily = void 0;
        this.fontWeight = void 0;
        this.fontShape = void 0;
        this.sizeMultiplier = void 0;
        this.maxSize = void 0;
        this.minRuleThickness = void 0;
        this._fontMetrics = void 0;
        this.style = data.style;
        this.color = data.color;
        this.size = data.size || Options.BASESIZE;
        this.textSize = data.textSize || this.size;
        this.phantom = !!data.phantom;
        this.font = data.font || "";
        this.fontFamily = data.fontFamily || "";
        this.fontWeight = data.fontWeight || "";
        this.fontShape = data.fontShape || "";
        this.sizeMultiplier = sizeMultipliers[this.size - 1];
        this.maxSize = data.maxSize;
        this.minRuleThickness = data.minRuleThickness;
        this._fontMetrics = void 0;
      }
      extend(extension) {
        var data = {
          style: this.style,
          size: this.size,
          textSize: this.textSize,
          color: this.color,
          phantom: this.phantom,
          font: this.font,
          fontFamily: this.fontFamily,
          fontWeight: this.fontWeight,
          fontShape: this.fontShape,
          maxSize: this.maxSize,
          minRuleThickness: this.minRuleThickness
        };
        for (var key in extension) {
          if (extension.hasOwnProperty(key)) {
            data[key] = extension[key];
          }
        }
        return new Options(data);
      }
      havingStyle(style) {
        if (this.style === style) {
          return this;
        } else {
          return this.extend({
            style,
            size: sizeAtStyle(this.textSize, style)
          });
        }
      }
      havingCrampedStyle() {
        return this.havingStyle(this.style.cramp());
      }
      havingSize(size) {
        if (this.size === size && this.textSize === size) {
          return this;
        } else {
          return this.extend({
            style: this.style.text(),
            size,
            textSize: size,
            sizeMultiplier: sizeMultipliers[size - 1]
          });
        }
      }
      havingBaseStyle(style) {
        style = style || this.style.text();
        var wantSize = sizeAtStyle(Options.BASESIZE, style);
        if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {
          return this;
        } else {
          return this.extend({
            style,
            size: wantSize
          });
        }
      }
      havingBaseSizing() {
        var size;
        switch (this.style.id) {
          case 4:
          case 5:
            size = 3;
            break;
          case 6:
          case 7:
            size = 1;
            break;
          default:
            size = 6;
        }
        return this.extend({
          style: this.style.text(),
          size
        });
      }
      withColor(color) {
        return this.extend({
          color
        });
      }
      withPhantom() {
        return this.extend({
          phantom: true
        });
      }
      withFont(font) {
        return this.extend({
          font
        });
      }
      withTextFontFamily(fontFamily) {
        return this.extend({
          fontFamily,
          font: ""
        });
      }
      withTextFontWeight(fontWeight) {
        return this.extend({
          fontWeight,
          font: ""
        });
      }
      withTextFontShape(fontShape) {
        return this.extend({
          fontShape,
          font: ""
        });
      }
      sizingClasses(oldOptions) {
        if (oldOptions.size !== this.size) {
          return ["sizing", "reset-size" + oldOptions.size, "size" + this.size];
        } else {
          return [];
        }
      }
      baseSizingClasses() {
        if (this.size !== Options.BASESIZE) {
          return ["sizing", "reset-size" + this.size, "size" + Options.BASESIZE];
        } else {
          return [];
        }
      }
      fontMetrics() {
        if (!this._fontMetrics) {
          this._fontMetrics = getGlobalMetrics(this.size);
        }
        return this._fontMetrics;
      }
      getColor() {
        if (this.phantom) {
          return "transparent";
        } else {
          return this.color;
        }
      }
    };
    Options.BASESIZE = 6;
    ptPerUnit = {
      "pt": 1,
      "mm": 7227 / 2540,
      "cm": 7227 / 254,
      "in": 72.27,
      "bp": 803 / 800,
      "pc": 12,
      "dd": 1238 / 1157,
      "cc": 14856 / 1157,
      "nd": 685 / 642,
      "nc": 1370 / 107,
      "sp": 1 / 65536,
      "px": 803 / 800
    };
    relativeUnit = {
      "ex": true,
      "em": true,
      "mu": true
    };
    validUnit = function validUnit2(unit) {
      if (typeof unit !== "string") {
        unit = unit.unit;
      }
      return unit in ptPerUnit || unit in relativeUnit || unit === "ex";
    };
    calculateSize = function calculateSize2(sizeValue, options) {
      var scale;
      if (sizeValue.unit in ptPerUnit) {
        scale = ptPerUnit[sizeValue.unit] / options.fontMetrics().ptPerEm / options.sizeMultiplier;
      } else if (sizeValue.unit === "mu") {
        scale = options.fontMetrics().cssEmPerMu;
      } else {
        var unitOptions;
        if (options.style.isTight()) {
          unitOptions = options.havingStyle(options.style.text());
        } else {
          unitOptions = options;
        }
        if (sizeValue.unit === "ex") {
          scale = unitOptions.fontMetrics().xHeight;
        } else if (sizeValue.unit === "em") {
          scale = unitOptions.fontMetrics().quad;
        } else {
          throw new ParseError("Invalid unit: '" + sizeValue.unit + "'");
        }
        if (unitOptions !== options) {
          scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;
        }
      }
      return Math.min(sizeValue.number * scale, options.maxSize);
    };
    makeEm = function makeEm2(n3) {
      return +n3.toFixed(4) + "em";
    };
    createClass = function createClass2(classes) {
      return classes.filter((cls) => cls).join(" ");
    };
    initNode = function initNode2(classes, options, style) {
      this.classes = classes || [];
      this.attributes = {};
      this.height = 0;
      this.depth = 0;
      this.maxFontSize = 0;
      this.style = style || {};
      if (options) {
        if (options.style.isTight()) {
          this.classes.push("mtight");
        }
        var color = options.getColor();
        if (color) {
          this.style.color = color;
        }
      }
    };
    toNode = function toNode2(tagName) {
      var node = document.createElement(tagName);
      node.className = createClass(this.classes);
      for (var style in this.style) {
        if (this.style.hasOwnProperty(style)) {
          node.style[style] = this.style[style];
        }
      }
      for (var attr in this.attributes) {
        if (this.attributes.hasOwnProperty(attr)) {
          node.setAttribute(attr, this.attributes[attr]);
        }
      }
      for (var i4 = 0; i4 < this.children.length; i4++) {
        node.appendChild(this.children[i4].toNode());
      }
      return node;
    };
    toMarkup = function toMarkup2(tagName) {
      var markup = "<" + tagName;
      if (this.classes.length) {
        markup += ' class="' + utils.escape(createClass(this.classes)) + '"';
      }
      var styles2 = "";
      for (var style in this.style) {
        if (this.style.hasOwnProperty(style)) {
          styles2 += utils.hyphenate(style) + ":" + this.style[style] + ";";
        }
      }
      if (styles2) {
        markup += ' style="' + utils.escape(styles2) + '"';
      }
      for (var attr in this.attributes) {
        if (this.attributes.hasOwnProperty(attr)) {
          markup += " " + attr + '="' + utils.escape(this.attributes[attr]) + '"';
        }
      }
      markup += ">";
      for (var i4 = 0; i4 < this.children.length; i4++) {
        markup += this.children[i4].toMarkup();
      }
      markup += "</" + tagName + ">";
      return markup;
    };
    Span = class {
      constructor(classes, children, options, style) {
        this.children = void 0;
        this.attributes = void 0;
        this.classes = void 0;
        this.height = void 0;
        this.depth = void 0;
        this.width = void 0;
        this.maxFontSize = void 0;
        this.style = void 0;
        initNode.call(this, classes, options, style);
        this.children = children || [];
      }
      setAttribute(attribute, value) {
        this.attributes[attribute] = value;
      }
      hasClass(className) {
        return utils.contains(this.classes, className);
      }
      toNode() {
        return toNode.call(this, "span");
      }
      toMarkup() {
        return toMarkup.call(this, "span");
      }
    };
    Anchor = class {
      constructor(href, classes, children, options) {
        this.children = void 0;
        this.attributes = void 0;
        this.classes = void 0;
        this.height = void 0;
        this.depth = void 0;
        this.maxFontSize = void 0;
        this.style = void 0;
        initNode.call(this, classes, options);
        this.children = children || [];
        this.setAttribute("href", href);
      }
      setAttribute(attribute, value) {
        this.attributes[attribute] = value;
      }
      hasClass(className) {
        return utils.contains(this.classes, className);
      }
      toNode() {
        return toNode.call(this, "a");
      }
      toMarkup() {
        return toMarkup.call(this, "a");
      }
    };
    Img = class {
      constructor(src, alt, style) {
        this.src = void 0;
        this.alt = void 0;
        this.classes = void 0;
        this.height = void 0;
        this.depth = void 0;
        this.maxFontSize = void 0;
        this.style = void 0;
        this.alt = alt;
        this.src = src;
        this.classes = ["mord"];
        this.style = style;
      }
      hasClass(className) {
        return utils.contains(this.classes, className);
      }
      toNode() {
        var node = document.createElement("img");
        node.src = this.src;
        node.alt = this.alt;
        node.className = "mord";
        for (var style in this.style) {
          if (this.style.hasOwnProperty(style)) {
            node.style[style] = this.style[style];
          }
        }
        return node;
      }
      toMarkup() {
        var markup = "<img  src='" + this.src + " 'alt='" + this.alt + "' ";
        var styles2 = "";
        for (var style in this.style) {
          if (this.style.hasOwnProperty(style)) {
            styles2 += utils.hyphenate(style) + ":" + this.style[style] + ";";
          }
        }
        if (styles2) {
          markup += ' style="' + utils.escape(styles2) + '"';
        }
        markup += "'/>";
        return markup;
      }
    };
    iCombinations = {
      "\xEE": "\u0131\u0302",
      "\xEF": "\u0131\u0308",
      "\xED": "\u0131\u0301",
      "\xEC": "\u0131\u0300"
    };
    SymbolNode = class {
      constructor(text2, height, depth, italic, skew, width, classes, style) {
        this.text = void 0;
        this.height = void 0;
        this.depth = void 0;
        this.italic = void 0;
        this.skew = void 0;
        this.width = void 0;
        this.maxFontSize = void 0;
        this.classes = void 0;
        this.style = void 0;
        this.text = text2;
        this.height = height || 0;
        this.depth = depth || 0;
        this.italic = italic || 0;
        this.skew = skew || 0;
        this.width = width || 0;
        this.classes = classes || [];
        this.style = style || {};
        this.maxFontSize = 0;
        var script = scriptFromCodepoint(this.text.charCodeAt(0));
        if (script) {
          this.classes.push(script + "_fallback");
        }
        if (/[îïíì]/.test(this.text)) {
          this.text = iCombinations[this.text];
        }
      }
      hasClass(className) {
        return utils.contains(this.classes, className);
      }
      toNode() {
        var node = document.createTextNode(this.text);
        var span = null;
        if (this.italic > 0) {
          span = document.createElement("span");
          span.style.marginRight = makeEm(this.italic);
        }
        if (this.classes.length > 0) {
          span = span || document.createElement("span");
          span.className = createClass(this.classes);
        }
        for (var style in this.style) {
          if (this.style.hasOwnProperty(style)) {
            span = span || document.createElement("span");
            span.style[style] = this.style[style];
          }
        }
        if (span) {
          span.appendChild(node);
          return span;
        } else {
          return node;
        }
      }
      toMarkup() {
        var needsSpan = false;
        var markup = "<span";
        if (this.classes.length) {
          needsSpan = true;
          markup += ' class="';
          markup += utils.escape(createClass(this.classes));
          markup += '"';
        }
        var styles2 = "";
        if (this.italic > 0) {
          styles2 += "margin-right:" + this.italic + "em;";
        }
        for (var style in this.style) {
          if (this.style.hasOwnProperty(style)) {
            styles2 += utils.hyphenate(style) + ":" + this.style[style] + ";";
          }
        }
        if (styles2) {
          needsSpan = true;
          markup += ' style="' + utils.escape(styles2) + '"';
        }
        var escaped2 = utils.escape(this.text);
        if (needsSpan) {
          markup += ">";
          markup += escaped2;
          markup += "</span>";
          return markup;
        } else {
          return escaped2;
        }
      }
    };
    SvgNode = class {
      constructor(children, attributes) {
        this.children = void 0;
        this.attributes = void 0;
        this.children = children || [];
        this.attributes = attributes || {};
      }
      toNode() {
        var svgNS = "http://www.w3.org/2000/svg";
        var node = document.createElementNS(svgNS, "svg");
        for (var attr in this.attributes) {
          if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
            node.setAttribute(attr, this.attributes[attr]);
          }
        }
        for (var i4 = 0; i4 < this.children.length; i4++) {
          node.appendChild(this.children[i4].toNode());
        }
        return node;
      }
      toMarkup() {
        var markup = '<svg xmlns="http://www.w3.org/2000/svg"';
        for (var attr in this.attributes) {
          if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
            markup += " " + attr + "='" + this.attributes[attr] + "'";
          }
        }
        markup += ">";
        for (var i4 = 0; i4 < this.children.length; i4++) {
          markup += this.children[i4].toMarkup();
        }
        markup += "</svg>";
        return markup;
      }
    };
    PathNode = class {
      constructor(pathName, alternate) {
        this.pathName = void 0;
        this.alternate = void 0;
        this.pathName = pathName;
        this.alternate = alternate;
      }
      toNode() {
        var svgNS = "http://www.w3.org/2000/svg";
        var node = document.createElementNS(svgNS, "path");
        if (this.alternate) {
          node.setAttribute("d", this.alternate);
        } else {
          node.setAttribute("d", path[this.pathName]);
        }
        return node;
      }
      toMarkup() {
        if (this.alternate) {
          return "<path d='" + this.alternate + "'/>";
        } else {
          return "<path d='" + path[this.pathName] + "'/>";
        }
      }
    };
    LineNode = class {
      constructor(attributes) {
        this.attributes = void 0;
        this.attributes = attributes || {};
      }
      toNode() {
        var svgNS = "http://www.w3.org/2000/svg";
        var node = document.createElementNS(svgNS, "line");
        for (var attr in this.attributes) {
          if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
            node.setAttribute(attr, this.attributes[attr]);
          }
        }
        return node;
      }
      toMarkup() {
        var markup = "<line";
        for (var attr in this.attributes) {
          if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
            markup += " " + attr + "='" + this.attributes[attr] + "'";
          }
        }
        markup += "/>";
        return markup;
      }
    };
    ATOMS = {
      "bin": 1,
      "close": 1,
      "inner": 1,
      "open": 1,
      "punct": 1,
      "rel": 1
    };
    NON_ATOMS = {
      "accent-token": 1,
      "mathord": 1,
      "op-token": 1,
      "spacing": 1,
      "textord": 1
    };
    symbols = {
      "math": {},
      "text": {}
    };
    math = "math";
    text = "text";
    main = "main";
    ams = "ams";
    accent = "accent-token";
    bin = "bin";
    close = "close";
    inner = "inner";
    mathord = "mathord";
    op = "op-token";
    open = "open";
    punct = "punct";
    rel = "rel";
    spacing = "spacing";
    textord = "textord";
    defineSymbol(math, main, rel, "\u2261", "\\equiv", true);
    defineSymbol(math, main, rel, "\u227A", "\\prec", true);
    defineSymbol(math, main, rel, "\u227B", "\\succ", true);
    defineSymbol(math, main, rel, "\u223C", "\\sim", true);
    defineSymbol(math, main, rel, "\u22A5", "\\perp");
    defineSymbol(math, main, rel, "\u2AAF", "\\preceq", true);
    defineSymbol(math, main, rel, "\u2AB0", "\\succeq", true);
    defineSymbol(math, main, rel, "\u2243", "\\simeq", true);
    defineSymbol(math, main, rel, "\u2223", "\\mid", true);
    defineSymbol(math, main, rel, "\u226A", "\\ll", true);
    defineSymbol(math, main, rel, "\u226B", "\\gg", true);
    defineSymbol(math, main, rel, "\u224D", "\\asymp", true);
    defineSymbol(math, main, rel, "\u2225", "\\parallel");
    defineSymbol(math, main, rel, "\u22C8", "\\bowtie", true);
    defineSymbol(math, main, rel, "\u2323", "\\smile", true);
    defineSymbol(math, main, rel, "\u2291", "\\sqsubseteq", true);
    defineSymbol(math, main, rel, "\u2292", "\\sqsupseteq", true);
    defineSymbol(math, main, rel, "\u2250", "\\doteq", true);
    defineSymbol(math, main, rel, "\u2322", "\\frown", true);
    defineSymbol(math, main, rel, "\u220B", "\\ni", true);
    defineSymbol(math, main, rel, "\u221D", "\\propto", true);
    defineSymbol(math, main, rel, "\u22A2", "\\vdash", true);
    defineSymbol(math, main, rel, "\u22A3", "\\dashv", true);
    defineSymbol(math, main, rel, "\u220B", "\\owns");
    defineSymbol(math, main, punct, ".", "\\ldotp");
    defineSymbol(math, main, punct, "\u22C5", "\\cdotp");
    defineSymbol(math, main, textord, "#", "\\#");
    defineSymbol(text, main, textord, "#", "\\#");
    defineSymbol(math, main, textord, "&", "\\&");
    defineSymbol(text, main, textord, "&", "\\&");
    defineSymbol(math, main, textord, "\u2135", "\\aleph", true);
    defineSymbol(math, main, textord, "\u2200", "\\forall", true);
    defineSymbol(math, main, textord, "\u210F", "\\hbar", true);
    defineSymbol(math, main, textord, "\u2203", "\\exists", true);
    defineSymbol(math, main, textord, "\u2207", "\\nabla", true);
    defineSymbol(math, main, textord, "\u266D", "\\flat", true);
    defineSymbol(math, main, textord, "\u2113", "\\ell", true);
    defineSymbol(math, main, textord, "\u266E", "\\natural", true);
    defineSymbol(math, main, textord, "\u2663", "\\clubsuit", true);
    defineSymbol(math, main, textord, "\u2118", "\\wp", true);
    defineSymbol(math, main, textord, "\u266F", "\\sharp", true);
    defineSymbol(math, main, textord, "\u2662", "\\diamondsuit", true);
    defineSymbol(math, main, textord, "\u211C", "\\Re", true);
    defineSymbol(math, main, textord, "\u2661", "\\heartsuit", true);
    defineSymbol(math, main, textord, "\u2111", "\\Im", true);
    defineSymbol(math, main, textord, "\u2660", "\\spadesuit", true);
    defineSymbol(math, main, textord, "\xA7", "\\S", true);
    defineSymbol(text, main, textord, "\xA7", "\\S");
    defineSymbol(math, main, textord, "\xB6", "\\P", true);
    defineSymbol(text, main, textord, "\xB6", "\\P");
    defineSymbol(math, main, textord, "\u2020", "\\dag");
    defineSymbol(text, main, textord, "\u2020", "\\dag");
    defineSymbol(text, main, textord, "\u2020", "\\textdagger");
    defineSymbol(math, main, textord, "\u2021", "\\ddag");
    defineSymbol(text, main, textord, "\u2021", "\\ddag");
    defineSymbol(text, main, textord, "\u2021", "\\textdaggerdbl");
    defineSymbol(math, main, close, "\u23B1", "\\rmoustache", true);
    defineSymbol(math, main, open, "\u23B0", "\\lmoustache", true);
    defineSymbol(math, main, close, "\u27EF", "\\rgroup", true);
    defineSymbol(math, main, open, "\u27EE", "\\lgroup", true);
    defineSymbol(math, main, bin, "\u2213", "\\mp", true);
    defineSymbol(math, main, bin, "\u2296", "\\ominus", true);
    defineSymbol(math, main, bin, "\u228E", "\\uplus", true);
    defineSymbol(math, main, bin, "\u2293", "\\sqcap", true);
    defineSymbol(math, main, bin, "\u2217", "\\ast");
    defineSymbol(math, main, bin, "\u2294", "\\sqcup", true);
    defineSymbol(math, main, bin, "\u25EF", "\\bigcirc", true);
    defineSymbol(math, main, bin, "\u2219", "\\bullet", true);
    defineSymbol(math, main, bin, "\u2021", "\\ddagger");
    defineSymbol(math, main, bin, "\u2240", "\\wr", true);
    defineSymbol(math, main, bin, "\u2A3F", "\\amalg");
    defineSymbol(math, main, bin, "&", "\\And");
    defineSymbol(math, main, rel, "\u27F5", "\\longleftarrow", true);
    defineSymbol(math, main, rel, "\u21D0", "\\Leftarrow", true);
    defineSymbol(math, main, rel, "\u27F8", "\\Longleftarrow", true);
    defineSymbol(math, main, rel, "\u27F6", "\\longrightarrow", true);
    defineSymbol(math, main, rel, "\u21D2", "\\Rightarrow", true);
    defineSymbol(math, main, rel, "\u27F9", "\\Longrightarrow", true);
    defineSymbol(math, main, rel, "\u2194", "\\leftrightarrow", true);
    defineSymbol(math, main, rel, "\u27F7", "\\longleftrightarrow", true);
    defineSymbol(math, main, rel, "\u21D4", "\\Leftrightarrow", true);
    defineSymbol(math, main, rel, "\u27FA", "\\Longleftrightarrow", true);
    defineSymbol(math, main, rel, "\u21A6", "\\mapsto", true);
    defineSymbol(math, main, rel, "\u27FC", "\\longmapsto", true);
    defineSymbol(math, main, rel, "\u2197", "\\nearrow", true);
    defineSymbol(math, main, rel, "\u21A9", "\\hookleftarrow", true);
    defineSymbol(math, main, rel, "\u21AA", "\\hookrightarrow", true);
    defineSymbol(math, main, rel, "\u2198", "\\searrow", true);
    defineSymbol(math, main, rel, "\u21BC", "\\leftharpoonup", true);
    defineSymbol(math, main, rel, "\u21C0", "\\rightharpoonup", true);
    defineSymbol(math, main, rel, "\u2199", "\\swarrow", true);
    defineSymbol(math, main, rel, "\u21BD", "\\leftharpoondown", true);
    defineSymbol(math, main, rel, "\u21C1", "\\rightharpoondown", true);
    defineSymbol(math, main, rel, "\u2196", "\\nwarrow", true);
    defineSymbol(math, main, rel, "\u21CC", "\\rightleftharpoons", true);
    defineSymbol(math, ams, rel, "\u226E", "\\nless", true);
    defineSymbol(math, ams, rel, "\uE010", "\\@nleqslant");
    defineSymbol(math, ams, rel, "\uE011", "\\@nleqq");
    defineSymbol(math, ams, rel, "\u2A87", "\\lneq", true);
    defineSymbol(math, ams, rel, "\u2268", "\\lneqq", true);
    defineSymbol(math, ams, rel, "\uE00C", "\\@lvertneqq");
    defineSymbol(math, ams, rel, "\u22E6", "\\lnsim", true);
    defineSymbol(math, ams, rel, "\u2A89", "\\lnapprox", true);
    defineSymbol(math, ams, rel, "\u2280", "\\nprec", true);
    defineSymbol(math, ams, rel, "\u22E0", "\\npreceq", true);
    defineSymbol(math, ams, rel, "\u22E8", "\\precnsim", true);
    defineSymbol(math, ams, rel, "\u2AB9", "\\precnapprox", true);
    defineSymbol(math, ams, rel, "\u2241", "\\nsim", true);
    defineSymbol(math, ams, rel, "\uE006", "\\@nshortmid");
    defineSymbol(math, ams, rel, "\u2224", "\\nmid", true);
    defineSymbol(math, ams, rel, "\u22AC", "\\nvdash", true);
    defineSymbol(math, ams, rel, "\u22AD", "\\nvDash", true);
    defineSymbol(math, ams, rel, "\u22EA", "\\ntriangleleft");
    defineSymbol(math, ams, rel, "\u22EC", "\\ntrianglelefteq", true);
    defineSymbol(math, ams, rel, "\u228A", "\\subsetneq", true);
    defineSymbol(math, ams, rel, "\uE01A", "\\@varsubsetneq");
    defineSymbol(math, ams, rel, "\u2ACB", "\\subsetneqq", true);
    defineSymbol(math, ams, rel, "\uE017", "\\@varsubsetneqq");
    defineSymbol(math, ams, rel, "\u226F", "\\ngtr", true);
    defineSymbol(math, ams, rel, "\uE00F", "\\@ngeqslant");
    defineSymbol(math, ams, rel, "\uE00E", "\\@ngeqq");
    defineSymbol(math, ams, rel, "\u2A88", "\\gneq", true);
    defineSymbol(math, ams, rel, "\u2269", "\\gneqq", true);
    defineSymbol(math, ams, rel, "\uE00D", "\\@gvertneqq");
    defineSymbol(math, ams, rel, "\u22E7", "\\gnsim", true);
    defineSymbol(math, ams, rel, "\u2A8A", "\\gnapprox", true);
    defineSymbol(math, ams, rel, "\u2281", "\\nsucc", true);
    defineSymbol(math, ams, rel, "\u22E1", "\\nsucceq", true);
    defineSymbol(math, ams, rel, "\u22E9", "\\succnsim", true);
    defineSymbol(math, ams, rel, "\u2ABA", "\\succnapprox", true);
    defineSymbol(math, ams, rel, "\u2246", "\\ncong", true);
    defineSymbol(math, ams, rel, "\uE007", "\\@nshortparallel");
    defineSymbol(math, ams, rel, "\u2226", "\\nparallel", true);
    defineSymbol(math, ams, rel, "\u22AF", "\\nVDash", true);
    defineSymbol(math, ams, rel, "\u22EB", "\\ntriangleright");
    defineSymbol(math, ams, rel, "\u22ED", "\\ntrianglerighteq", true);
    defineSymbol(math, ams, rel, "\uE018", "\\@nsupseteqq");
    defineSymbol(math, ams, rel, "\u228B", "\\supsetneq", true);
    defineSymbol(math, ams, rel, "\uE01B", "\\@varsupsetneq");
    defineSymbol(math, ams, rel, "\u2ACC", "\\supsetneqq", true);
    defineSymbol(math, ams, rel, "\uE019", "\\@varsupsetneqq");
    defineSymbol(math, ams, rel, "\u22AE", "\\nVdash", true);
    defineSymbol(math, ams, rel, "\u2AB5", "\\precneqq", true);
    defineSymbol(math, ams, rel, "\u2AB6", "\\succneqq", true);
    defineSymbol(math, ams, rel, "\uE016", "\\@nsubseteqq");
    defineSymbol(math, ams, bin, "\u22B4", "\\unlhd");
    defineSymbol(math, ams, bin, "\u22B5", "\\unrhd");
    defineSymbol(math, ams, rel, "\u219A", "\\nleftarrow", true);
    defineSymbol(math, ams, rel, "\u219B", "\\nrightarrow", true);
    defineSymbol(math, ams, rel, "\u21CD", "\\nLeftarrow", true);
    defineSymbol(math, ams, rel, "\u21CF", "\\nRightarrow", true);
    defineSymbol(math, ams, rel, "\u21AE", "\\nleftrightarrow", true);
    defineSymbol(math, ams, rel, "\u21CE", "\\nLeftrightarrow", true);
    defineSymbol(math, ams, rel, "\u25B3", "\\vartriangle");
    defineSymbol(math, ams, textord, "\u210F", "\\hslash");
    defineSymbol(math, ams, textord, "\u25BD", "\\triangledown");
    defineSymbol(math, ams, textord, "\u25CA", "\\lozenge");
    defineSymbol(math, ams, textord, "\u24C8", "\\circledS");
    defineSymbol(math, ams, textord, "\xAE", "\\circledR");
    defineSymbol(text, ams, textord, "\xAE", "\\circledR");
    defineSymbol(math, ams, textord, "\u2221", "\\measuredangle", true);
    defineSymbol(math, ams, textord, "\u2204", "\\nexists");
    defineSymbol(math, ams, textord, "\u2127", "\\mho");
    defineSymbol(math, ams, textord, "\u2132", "\\Finv", true);
    defineSymbol(math, ams, textord, "\u2141", "\\Game", true);
    defineSymbol(math, ams, textord, "\u2035", "\\backprime");
    defineSymbol(math, ams, textord, "\u25B2", "\\blacktriangle");
    defineSymbol(math, ams, textord, "\u25BC", "\\blacktriangledown");
    defineSymbol(math, ams, textord, "\u25A0", "\\blacksquare");
    defineSymbol(math, ams, textord, "\u29EB", "\\blacklozenge");
    defineSymbol(math, ams, textord, "\u2605", "\\bigstar");
    defineSymbol(math, ams, textord, "\u2222", "\\sphericalangle", true);
    defineSymbol(math, ams, textord, "\u2201", "\\complement", true);
    defineSymbol(math, ams, textord, "\xF0", "\\eth", true);
    defineSymbol(text, main, textord, "\xF0", "\xF0");
    defineSymbol(math, ams, textord, "\u2571", "\\diagup");
    defineSymbol(math, ams, textord, "\u2572", "\\diagdown");
    defineSymbol(math, ams, textord, "\u25A1", "\\square");
    defineSymbol(math, ams, textord, "\u25A1", "\\Box");
    defineSymbol(math, ams, textord, "\u25CA", "\\Diamond");
    defineSymbol(math, ams, textord, "\xA5", "\\yen", true);
    defineSymbol(text, ams, textord, "\xA5", "\\yen", true);
    defineSymbol(math, ams, textord, "\u2713", "\\checkmark", true);
    defineSymbol(text, ams, textord, "\u2713", "\\checkmark");
    defineSymbol(math, ams, textord, "\u2136", "\\beth", true);
    defineSymbol(math, ams, textord, "\u2138", "\\daleth", true);
    defineSymbol(math, ams, textord, "\u2137", "\\gimel", true);
    defineSymbol(math, ams, textord, "\u03DD", "\\digamma", true);
    defineSymbol(math, ams, textord, "\u03F0", "\\varkappa");
    defineSymbol(math, ams, open, "\u250C", "\\@ulcorner", true);
    defineSymbol(math, ams, close, "\u2510", "\\@urcorner", true);
    defineSymbol(math, ams, open, "\u2514", "\\@llcorner", true);
    defineSymbol(math, ams, close, "\u2518", "\\@lrcorner", true);
    defineSymbol(math, ams, rel, "\u2266", "\\leqq", true);
    defineSymbol(math, ams, rel, "\u2A7D", "\\leqslant", true);
    defineSymbol(math, ams, rel, "\u2A95", "\\eqslantless", true);
    defineSymbol(math, ams, rel, "\u2272", "\\lesssim", true);
    defineSymbol(math, ams, rel, "\u2A85", "\\lessapprox", true);
    defineSymbol(math, ams, rel, "\u224A", "\\approxeq", true);
    defineSymbol(math, ams, bin, "\u22D6", "\\lessdot");
    defineSymbol(math, ams, rel, "\u22D8", "\\lll", true);
    defineSymbol(math, ams, rel, "\u2276", "\\lessgtr", true);
    defineSymbol(math, ams, rel, "\u22DA", "\\lesseqgtr", true);
    defineSymbol(math, ams, rel, "\u2A8B", "\\lesseqqgtr", true);
    defineSymbol(math, ams, rel, "\u2251", "\\doteqdot");
    defineSymbol(math, ams, rel, "\u2253", "\\risingdotseq", true);
    defineSymbol(math, ams, rel, "\u2252", "\\fallingdotseq", true);
    defineSymbol(math, ams, rel, "\u223D", "\\backsim", true);
    defineSymbol(math, ams, rel, "\u22CD", "\\backsimeq", true);
    defineSymbol(math, ams, rel, "\u2AC5", "\\subseteqq", true);
    defineSymbol(math, ams, rel, "\u22D0", "\\Subset", true);
    defineSymbol(math, ams, rel, "\u228F", "\\sqsubset", true);
    defineSymbol(math, ams, rel, "\u227C", "\\preccurlyeq", true);
    defineSymbol(math, ams, rel, "\u22DE", "\\curlyeqprec", true);
    defineSymbol(math, ams, rel, "\u227E", "\\precsim", true);
    defineSymbol(math, ams, rel, "\u2AB7", "\\precapprox", true);
    defineSymbol(math, ams, rel, "\u22B2", "\\vartriangleleft");
    defineSymbol(math, ams, rel, "\u22B4", "\\trianglelefteq");
    defineSymbol(math, ams, rel, "\u22A8", "\\vDash", true);
    defineSymbol(math, ams, rel, "\u22AA", "\\Vvdash", true);
    defineSymbol(math, ams, rel, "\u2323", "\\smallsmile");
    defineSymbol(math, ams, rel, "\u2322", "\\smallfrown");
    defineSymbol(math, ams, rel, "\u224F", "\\bumpeq", true);
    defineSymbol(math, ams, rel, "\u224E", "\\Bumpeq", true);
    defineSymbol(math, ams, rel, "\u2267", "\\geqq", true);
    defineSymbol(math, ams, rel, "\u2A7E", "\\geqslant", true);
    defineSymbol(math, ams, rel, "\u2A96", "\\eqslantgtr", true);
    defineSymbol(math, ams, rel, "\u2273", "\\gtrsim", true);
    defineSymbol(math, ams, rel, "\u2A86", "\\gtrapprox", true);
    defineSymbol(math, ams, bin, "\u22D7", "\\gtrdot");
    defineSymbol(math, ams, rel, "\u22D9", "\\ggg", true);
    defineSymbol(math, ams, rel, "\u2277", "\\gtrless", true);
    defineSymbol(math, ams, rel, "\u22DB", "\\gtreqless", true);
    defineSymbol(math, ams, rel, "\u2A8C", "\\gtreqqless", true);
    defineSymbol(math, ams, rel, "\u2256", "\\eqcirc", true);
    defineSymbol(math, ams, rel, "\u2257", "\\circeq", true);
    defineSymbol(math, ams, rel, "\u225C", "\\triangleq", true);
    defineSymbol(math, ams, rel, "\u223C", "\\thicksim");
    defineSymbol(math, ams, rel, "\u2248", "\\thickapprox");
    defineSymbol(math, ams, rel, "\u2AC6", "\\supseteqq", true);
    defineSymbol(math, ams, rel, "\u22D1", "\\Supset", true);
    defineSymbol(math, ams, rel, "\u2290", "\\sqsupset", true);
    defineSymbol(math, ams, rel, "\u227D", "\\succcurlyeq", true);
    defineSymbol(math, ams, rel, "\u22DF", "\\curlyeqsucc", true);
    defineSymbol(math, ams, rel, "\u227F", "\\succsim", true);
    defineSymbol(math, ams, rel, "\u2AB8", "\\succapprox", true);
    defineSymbol(math, ams, rel, "\u22B3", "\\vartriangleright");
    defineSymbol(math, ams, rel, "\u22B5", "\\trianglerighteq");
    defineSymbol(math, ams, rel, "\u22A9", "\\Vdash", true);
    defineSymbol(math, ams, rel, "\u2223", "\\shortmid");
    defineSymbol(math, ams, rel, "\u2225", "\\shortparallel");
    defineSymbol(math, ams, rel, "\u226C", "\\between", true);
    defineSymbol(math, ams, rel, "\u22D4", "\\pitchfork", true);
    defineSymbol(math, ams, rel, "\u221D", "\\varpropto");
    defineSymbol(math, ams, rel, "\u25C0", "\\blacktriangleleft");
    defineSymbol(math, ams, rel, "\u2234", "\\therefore", true);
    defineSymbol(math, ams, rel, "\u220D", "\\backepsilon");
    defineSymbol(math, ams, rel, "\u25B6", "\\blacktriangleright");
    defineSymbol(math, ams, rel, "\u2235", "\\because", true);
    defineSymbol(math, ams, rel, "\u22D8", "\\llless");
    defineSymbol(math, ams, rel, "\u22D9", "\\gggtr");
    defineSymbol(math, ams, bin, "\u22B2", "\\lhd");
    defineSymbol(math, ams, bin, "\u22B3", "\\rhd");
    defineSymbol(math, ams, rel, "\u2242", "\\eqsim", true);
    defineSymbol(math, main, rel, "\u22C8", "\\Join");
    defineSymbol(math, ams, rel, "\u2251", "\\Doteq", true);
    defineSymbol(math, ams, bin, "\u2214", "\\dotplus", true);
    defineSymbol(math, ams, bin, "\u2216", "\\smallsetminus");
    defineSymbol(math, ams, bin, "\u22D2", "\\Cap", true);
    defineSymbol(math, ams, bin, "\u22D3", "\\Cup", true);
    defineSymbol(math, ams, bin, "\u2A5E", "\\doublebarwedge", true);
    defineSymbol(math, ams, bin, "\u229F", "\\boxminus", true);
    defineSymbol(math, ams, bin, "\u229E", "\\boxplus", true);
    defineSymbol(math, ams, bin, "\u22C7", "\\divideontimes", true);
    defineSymbol(math, ams, bin, "\u22C9", "\\ltimes", true);
    defineSymbol(math, ams, bin, "\u22CA", "\\rtimes", true);
    defineSymbol(math, ams, bin, "\u22CB", "\\leftthreetimes", true);
    defineSymbol(math, ams, bin, "\u22CC", "\\rightthreetimes", true);
    defineSymbol(math, ams, bin, "\u22CF", "\\curlywedge", true);
    defineSymbol(math, ams, bin, "\u22CE", "\\curlyvee", true);
    defineSymbol(math, ams, bin, "\u229D", "\\circleddash", true);
    defineSymbol(math, ams, bin, "\u229B", "\\circledast", true);
    defineSymbol(math, ams, bin, "\u22C5", "\\centerdot");
    defineSymbol(math, ams, bin, "\u22BA", "\\intercal", true);
    defineSymbol(math, ams, bin, "\u22D2", "\\doublecap");
    defineSymbol(math, ams, bin, "\u22D3", "\\doublecup");
    defineSymbol(math, ams, bin, "\u22A0", "\\boxtimes", true);
    defineSymbol(math, ams, rel, "\u21E2", "\\dashrightarrow", true);
    defineSymbol(math, ams, rel, "\u21E0", "\\dashleftarrow", true);
    defineSymbol(math, ams, rel, "\u21C7", "\\leftleftarrows", true);
    defineSymbol(math, ams, rel, "\u21C6", "\\leftrightarrows", true);
    defineSymbol(math, ams, rel, "\u21DA", "\\Lleftarrow", true);
    defineSymbol(math, ams, rel, "\u219E", "\\twoheadleftarrow", true);
    defineSymbol(math, ams, rel, "\u21A2", "\\leftarrowtail", true);
    defineSymbol(math, ams, rel, "\u21AB", "\\looparrowleft", true);
    defineSymbol(math, ams, rel, "\u21CB", "\\leftrightharpoons", true);
    defineSymbol(math, ams, rel, "\u21B6", "\\curvearrowleft", true);
    defineSymbol(math, ams, rel, "\u21BA", "\\circlearrowleft", true);
    defineSymbol(math, ams, rel, "\u21B0", "\\Lsh", true);
    defineSymbol(math, ams, rel, "\u21C8", "\\upuparrows", true);
    defineSymbol(math, ams, rel, "\u21BF", "\\upharpoonleft", true);
    defineSymbol(math, ams, rel, "\u21C3", "\\downharpoonleft", true);
    defineSymbol(math, main, rel, "\u22B6", "\\origof", true);
    defineSymbol(math, main, rel, "\u22B7", "\\imageof", true);
    defineSymbol(math, ams, rel, "\u22B8", "\\multimap", true);
    defineSymbol(math, ams, rel, "\u21AD", "\\leftrightsquigarrow", true);
    defineSymbol(math, ams, rel, "\u21C9", "\\rightrightarrows", true);
    defineSymbol(math, ams, rel, "\u21C4", "\\rightleftarrows", true);
    defineSymbol(math, ams, rel, "\u21A0", "\\twoheadrightarrow", true);
    defineSymbol(math, ams, rel, "\u21A3", "\\rightarrowtail", true);
    defineSymbol(math, ams, rel, "\u21AC", "\\looparrowright", true);
    defineSymbol(math, ams, rel, "\u21B7", "\\curvearrowright", true);
    defineSymbol(math, ams, rel, "\u21BB", "\\circlearrowright", true);
    defineSymbol(math, ams, rel, "\u21B1", "\\Rsh", true);
    defineSymbol(math, ams, rel, "\u21CA", "\\downdownarrows", true);
    defineSymbol(math, ams, rel, "\u21BE", "\\upharpoonright", true);
    defineSymbol(math, ams, rel, "\u21C2", "\\downharpoonright", true);
    defineSymbol(math, ams, rel, "\u21DD", "\\rightsquigarrow", true);
    defineSymbol(math, ams, rel, "\u21DD", "\\leadsto");
    defineSymbol(math, ams, rel, "\u21DB", "\\Rrightarrow", true);
    defineSymbol(math, ams, rel, "\u21BE", "\\restriction");
    defineSymbol(math, main, textord, "\u2018", "`");
    defineSymbol(math, main, textord, "$", "\\$");
    defineSymbol(text, main, textord, "$", "\\$");
    defineSymbol(text, main, textord, "$", "\\textdollar");
    defineSymbol(math, main, textord, "%", "\\%");
    defineSymbol(text, main, textord, "%", "\\%");
    defineSymbol(math, main, textord, "_", "\\_");
    defineSymbol(text, main, textord, "_", "\\_");
    defineSymbol(text, main, textord, "_", "\\textunderscore");
    defineSymbol(math, main, textord, "\u2220", "\\angle", true);
    defineSymbol(math, main, textord, "\u221E", "\\infty", true);
    defineSymbol(math, main, textord, "\u2032", "\\prime");
    defineSymbol(math, main, textord, "\u25B3", "\\triangle");
    defineSymbol(math, main, textord, "\u0393", "\\Gamma", true);
    defineSymbol(math, main, textord, "\u0394", "\\Delta", true);
    defineSymbol(math, main, textord, "\u0398", "\\Theta", true);
    defineSymbol(math, main, textord, "\u039B", "\\Lambda", true);
    defineSymbol(math, main, textord, "\u039E", "\\Xi", true);
    defineSymbol(math, main, textord, "\u03A0", "\\Pi", true);
    defineSymbol(math, main, textord, "\u03A3", "\\Sigma", true);
    defineSymbol(math, main, textord, "\u03A5", "\\Upsilon", true);
    defineSymbol(math, main, textord, "\u03A6", "\\Phi", true);
    defineSymbol(math, main, textord, "\u03A8", "\\Psi", true);
    defineSymbol(math, main, textord, "\u03A9", "\\Omega", true);
    defineSymbol(math, main, textord, "A", "\u0391");
    defineSymbol(math, main, textord, "B", "\u0392");
    defineSymbol(math, main, textord, "E", "\u0395");
    defineSymbol(math, main, textord, "Z", "\u0396");
    defineSymbol(math, main, textord, "H", "\u0397");
    defineSymbol(math, main, textord, "I", "\u0399");
    defineSymbol(math, main, textord, "K", "\u039A");
    defineSymbol(math, main, textord, "M", "\u039C");
    defineSymbol(math, main, textord, "N", "\u039D");
    defineSymbol(math, main, textord, "O", "\u039F");
    defineSymbol(math, main, textord, "P", "\u03A1");
    defineSymbol(math, main, textord, "T", "\u03A4");
    defineSymbol(math, main, textord, "X", "\u03A7");
    defineSymbol(math, main, textord, "\xAC", "\\neg", true);
    defineSymbol(math, main, textord, "\xAC", "\\lnot");
    defineSymbol(math, main, textord, "\u22A4", "\\top");
    defineSymbol(math, main, textord, "\u22A5", "\\bot");
    defineSymbol(math, main, textord, "\u2205", "\\emptyset");
    defineSymbol(math, ams, textord, "\u2205", "\\varnothing");
    defineSymbol(math, main, mathord, "\u03B1", "\\alpha", true);
    defineSymbol(math, main, mathord, "\u03B2", "\\beta", true);
    defineSymbol(math, main, mathord, "\u03B3", "\\gamma", true);
    defineSymbol(math, main, mathord, "\u03B4", "\\delta", true);
    defineSymbol(math, main, mathord, "\u03F5", "\\epsilon", true);
    defineSymbol(math, main, mathord, "\u03B6", "\\zeta", true);
    defineSymbol(math, main, mathord, "\u03B7", "\\eta", true);
    defineSymbol(math, main, mathord, "\u03B8", "\\theta", true);
    defineSymbol(math, main, mathord, "\u03B9", "\\iota", true);
    defineSymbol(math, main, mathord, "\u03BA", "\\kappa", true);
    defineSymbol(math, main, mathord, "\u03BB", "\\lambda", true);
    defineSymbol(math, main, mathord, "\u03BC", "\\mu", true);
    defineSymbol(math, main, mathord, "\u03BD", "\\nu", true);
    defineSymbol(math, main, mathord, "\u03BE", "\\xi", true);
    defineSymbol(math, main, mathord, "\u03BF", "\\omicron", true);
    defineSymbol(math, main, mathord, "\u03C0", "\\pi", true);
    defineSymbol(math, main, mathord, "\u03C1", "\\rho", true);
    defineSymbol(math, main, mathord, "\u03C3", "\\sigma", true);
    defineSymbol(math, main, mathord, "\u03C4", "\\tau", true);
    defineSymbol(math, main, mathord, "\u03C5", "\\upsilon", true);
    defineSymbol(math, main, mathord, "\u03D5", "\\phi", true);
    defineSymbol(math, main, mathord, "\u03C7", "\\chi", true);
    defineSymbol(math, main, mathord, "\u03C8", "\\psi", true);
    defineSymbol(math, main, mathord, "\u03C9", "\\omega", true);
    defineSymbol(math, main, mathord, "\u03B5", "\\varepsilon", true);
    defineSymbol(math, main, mathord, "\u03D1", "\\vartheta", true);
    defineSymbol(math, main, mathord, "\u03D6", "\\varpi", true);
    defineSymbol(math, main, mathord, "\u03F1", "\\varrho", true);
    defineSymbol(math, main, mathord, "\u03C2", "\\varsigma", true);
    defineSymbol(math, main, mathord, "\u03C6", "\\varphi", true);
    defineSymbol(math, main, bin, "\u2217", "*", true);
    defineSymbol(math, main, bin, "+", "+");
    defineSymbol(math, main, bin, "\u2212", "-", true);
    defineSymbol(math, main, bin, "\u22C5", "\\cdot", true);
    defineSymbol(math, main, bin, "\u2218", "\\circ", true);
    defineSymbol(math, main, bin, "\xF7", "\\div", true);
    defineSymbol(math, main, bin, "\xB1", "\\pm", true);
    defineSymbol(math, main, bin, "\xD7", "\\times", true);
    defineSymbol(math, main, bin, "\u2229", "\\cap", true);
    defineSymbol(math, main, bin, "\u222A", "\\cup", true);
    defineSymbol(math, main, bin, "\u2216", "\\setminus", true);
    defineSymbol(math, main, bin, "\u2227", "\\land");
    defineSymbol(math, main, bin, "\u2228", "\\lor");
    defineSymbol(math, main, bin, "\u2227", "\\wedge", true);
    defineSymbol(math, main, bin, "\u2228", "\\vee", true);
    defineSymbol(math, main, textord, "\u221A", "\\surd");
    defineSymbol(math, main, open, "\u27E8", "\\langle", true);
    defineSymbol(math, main, open, "\u2223", "\\lvert");
    defineSymbol(math, main, open, "\u2225", "\\lVert");
    defineSymbol(math, main, close, "?", "?");
    defineSymbol(math, main, close, "!", "!");
    defineSymbol(math, main, close, "\u27E9", "\\rangle", true);
    defineSymbol(math, main, close, "\u2223", "\\rvert");
    defineSymbol(math, main, close, "\u2225", "\\rVert");
    defineSymbol(math, main, rel, "=", "=");
    defineSymbol(math, main, rel, ":", ":");
    defineSymbol(math, main, rel, "\u2248", "\\approx", true);
    defineSymbol(math, main, rel, "\u2245", "\\cong", true);
    defineSymbol(math, main, rel, "\u2265", "\\ge");
    defineSymbol(math, main, rel, "\u2265", "\\geq", true);
    defineSymbol(math, main, rel, "\u2190", "\\gets");
    defineSymbol(math, main, rel, ">", "\\gt", true);
    defineSymbol(math, main, rel, "\u2208", "\\in", true);
    defineSymbol(math, main, rel, "\uE020", "\\@not");
    defineSymbol(math, main, rel, "\u2282", "\\subset", true);
    defineSymbol(math, main, rel, "\u2283", "\\supset", true);
    defineSymbol(math, main, rel, "\u2286", "\\subseteq", true);
    defineSymbol(math, main, rel, "\u2287", "\\supseteq", true);
    defineSymbol(math, ams, rel, "\u2288", "\\nsubseteq", true);
    defineSymbol(math, ams, rel, "\u2289", "\\nsupseteq", true);
    defineSymbol(math, main, rel, "\u22A8", "\\models");
    defineSymbol(math, main, rel, "\u2190", "\\leftarrow", true);
    defineSymbol(math, main, rel, "\u2264", "\\le");
    defineSymbol(math, main, rel, "\u2264", "\\leq", true);
    defineSymbol(math, main, rel, "<", "\\lt", true);
    defineSymbol(math, main, rel, "\u2192", "\\rightarrow", true);
    defineSymbol(math, main, rel, "\u2192", "\\to");
    defineSymbol(math, ams, rel, "\u2271", "\\ngeq", true);
    defineSymbol(math, ams, rel, "\u2270", "\\nleq", true);
    defineSymbol(math, main, spacing, "\xA0", "\\ ");
    defineSymbol(math, main, spacing, "\xA0", "\\space");
    defineSymbol(math, main, spacing, "\xA0", "\\nobreakspace");
    defineSymbol(text, main, spacing, "\xA0", "\\ ");
    defineSymbol(text, main, spacing, "\xA0", " ");
    defineSymbol(text, main, spacing, "\xA0", "\\space");
    defineSymbol(text, main, spacing, "\xA0", "\\nobreakspace");
    defineSymbol(math, main, spacing, null, "\\nobreak");
    defineSymbol(math, main, spacing, null, "\\allowbreak");
    defineSymbol(math, main, punct, ",", ",");
    defineSymbol(math, main, punct, ";", ";");
    defineSymbol(math, ams, bin, "\u22BC", "\\barwedge", true);
    defineSymbol(math, ams, bin, "\u22BB", "\\veebar", true);
    defineSymbol(math, main, bin, "\u2299", "\\odot", true);
    defineSymbol(math, main, bin, "\u2295", "\\oplus", true);
    defineSymbol(math, main, bin, "\u2297", "\\otimes", true);
    defineSymbol(math, main, textord, "\u2202", "\\partial", true);
    defineSymbol(math, main, bin, "\u2298", "\\oslash", true);
    defineSymbol(math, ams, bin, "\u229A", "\\circledcirc", true);
    defineSymbol(math, ams, bin, "\u22A1", "\\boxdot", true);
    defineSymbol(math, main, bin, "\u25B3", "\\bigtriangleup");
    defineSymbol(math, main, bin, "\u25BD", "\\bigtriangledown");
    defineSymbol(math, main, bin, "\u2020", "\\dagger");
    defineSymbol(math, main, bin, "\u22C4", "\\diamond");
    defineSymbol(math, main, bin, "\u22C6", "\\star");
    defineSymbol(math, main, bin, "\u25C3", "\\triangleleft");
    defineSymbol(math, main, bin, "\u25B9", "\\triangleright");
    defineSymbol(math, main, open, "{", "\\{");
    defineSymbol(text, main, textord, "{", "\\{");
    defineSymbol(text, main, textord, "{", "\\textbraceleft");
    defineSymbol(math, main, close, "}", "\\}");
    defineSymbol(text, main, textord, "}", "\\}");
    defineSymbol(text, main, textord, "}", "\\textbraceright");
    defineSymbol(math, main, open, "{", "\\lbrace");
    defineSymbol(math, main, close, "}", "\\rbrace");
    defineSymbol(math, main, open, "[", "\\lbrack", true);
    defineSymbol(text, main, textord, "[", "\\lbrack", true);
    defineSymbol(math, main, close, "]", "\\rbrack", true);
    defineSymbol(text, main, textord, "]", "\\rbrack", true);
    defineSymbol(math, main, open, "(", "\\lparen", true);
    defineSymbol(math, main, close, ")", "\\rparen", true);
    defineSymbol(text, main, textord, "<", "\\textless", true);
    defineSymbol(text, main, textord, ">", "\\textgreater", true);
    defineSymbol(math, main, open, "\u230A", "\\lfloor", true);
    defineSymbol(math, main, close, "\u230B", "\\rfloor", true);
    defineSymbol(math, main, open, "\u2308", "\\lceil", true);
    defineSymbol(math, main, close, "\u2309", "\\rceil", true);
    defineSymbol(math, main, textord, "\\", "\\backslash");
    defineSymbol(math, main, textord, "\u2223", "|");
    defineSymbol(math, main, textord, "\u2223", "\\vert");
    defineSymbol(text, main, textord, "|", "\\textbar", true);
    defineSymbol(math, main, textord, "\u2225", "\\|");
    defineSymbol(math, main, textord, "\u2225", "\\Vert");
    defineSymbol(text, main, textord, "\u2225", "\\textbardbl");
    defineSymbol(text, main, textord, "~", "\\textasciitilde");
    defineSymbol(text, main, textord, "\\", "\\textbackslash");
    defineSymbol(text, main, textord, "^", "\\textasciicircum");
    defineSymbol(math, main, rel, "\u2191", "\\uparrow", true);
    defineSymbol(math, main, rel, "\u21D1", "\\Uparrow", true);
    defineSymbol(math, main, rel, "\u2193", "\\downarrow", true);
    defineSymbol(math, main, rel, "\u21D3", "\\Downarrow", true);
    defineSymbol(math, main, rel, "\u2195", "\\updownarrow", true);
    defineSymbol(math, main, rel, "\u21D5", "\\Updownarrow", true);
    defineSymbol(math, main, op, "\u2210", "\\coprod");
    defineSymbol(math, main, op, "\u22C1", "\\bigvee");
    defineSymbol(math, main, op, "\u22C0", "\\bigwedge");
    defineSymbol(math, main, op, "\u2A04", "\\biguplus");
    defineSymbol(math, main, op, "\u22C2", "\\bigcap");
    defineSymbol(math, main, op, "\u22C3", "\\bigcup");
    defineSymbol(math, main, op, "\u222B", "\\int");
    defineSymbol(math, main, op, "\u222B", "\\intop");
    defineSymbol(math, main, op, "\u222C", "\\iint");
    defineSymbol(math, main, op, "\u222D", "\\iiint");
    defineSymbol(math, main, op, "\u220F", "\\prod");
    defineSymbol(math, main, op, "\u2211", "\\sum");
    defineSymbol(math, main, op, "\u2A02", "\\bigotimes");
    defineSymbol(math, main, op, "\u2A01", "\\bigoplus");
    defineSymbol(math, main, op, "\u2A00", "\\bigodot");
    defineSymbol(math, main, op, "\u222E", "\\oint");
    defineSymbol(math, main, op, "\u222F", "\\oiint");
    defineSymbol(math, main, op, "\u2230", "\\oiiint");
    defineSymbol(math, main, op, "\u2A06", "\\bigsqcup");
    defineSymbol(math, main, op, "\u222B", "\\smallint");
    defineSymbol(text, main, inner, "\u2026", "\\textellipsis");
    defineSymbol(math, main, inner, "\u2026", "\\mathellipsis");
    defineSymbol(text, main, inner, "\u2026", "\\ldots", true);
    defineSymbol(math, main, inner, "\u2026", "\\ldots", true);
    defineSymbol(math, main, inner, "\u22EF", "\\@cdots", true);
    defineSymbol(math, main, inner, "\u22F1", "\\ddots", true);
    defineSymbol(math, main, textord, "\u22EE", "\\varvdots");
    defineSymbol(math, main, accent, "\u02CA", "\\acute");
    defineSymbol(math, main, accent, "\u02CB", "\\grave");
    defineSymbol(math, main, accent, "\xA8", "\\ddot");
    defineSymbol(math, main, accent, "~", "\\tilde");
    defineSymbol(math, main, accent, "\u02C9", "\\bar");
    defineSymbol(math, main, accent, "\u02D8", "\\breve");
    defineSymbol(math, main, accent, "\u02C7", "\\check");
    defineSymbol(math, main, accent, "^", "\\hat");
    defineSymbol(math, main, accent, "\u20D7", "\\vec");
    defineSymbol(math, main, accent, "\u02D9", "\\dot");
    defineSymbol(math, main, accent, "\u02DA", "\\mathring");
    defineSymbol(math, main, mathord, "\uE131", "\\@imath");
    defineSymbol(math, main, mathord, "\uE237", "\\@jmath");
    defineSymbol(math, main, textord, "\u0131", "\u0131");
    defineSymbol(math, main, textord, "\u0237", "\u0237");
    defineSymbol(text, main, textord, "\u0131", "\\i", true);
    defineSymbol(text, main, textord, "\u0237", "\\j", true);
    defineSymbol(text, main, textord, "\xDF", "\\ss", true);
    defineSymbol(text, main, textord, "\xE6", "\\ae", true);
    defineSymbol(text, main, textord, "\u0153", "\\oe", true);
    defineSymbol(text, main, textord, "\xF8", "\\o", true);
    defineSymbol(text, main, textord, "\xC6", "\\AE", true);
    defineSymbol(text, main, textord, "\u0152", "\\OE", true);
    defineSymbol(text, main, textord, "\xD8", "\\O", true);
    defineSymbol(text, main, accent, "\u02CA", "\\'");
    defineSymbol(text, main, accent, "\u02CB", "\\`");
    defineSymbol(text, main, accent, "\u02C6", "\\^");
    defineSymbol(text, main, accent, "\u02DC", "\\~");
    defineSymbol(text, main, accent, "\u02C9", "\\=");
    defineSymbol(text, main, accent, "\u02D8", "\\u");
    defineSymbol(text, main, accent, "\u02D9", "\\.");
    defineSymbol(text, main, accent, "\xB8", "\\c");
    defineSymbol(text, main, accent, "\u02DA", "\\r");
    defineSymbol(text, main, accent, "\u02C7", "\\v");
    defineSymbol(text, main, accent, "\xA8", '\\"');
    defineSymbol(text, main, accent, "\u02DD", "\\H");
    defineSymbol(text, main, accent, "\u25EF", "\\textcircled");
    ligatures = {
      "--": true,
      "---": true,
      "``": true,
      "''": true
    };
    defineSymbol(text, main, textord, "\u2013", "--", true);
    defineSymbol(text, main, textord, "\u2013", "\\textendash");
    defineSymbol(text, main, textord, "\u2014", "---", true);
    defineSymbol(text, main, textord, "\u2014", "\\textemdash");
    defineSymbol(text, main, textord, "\u2018", "`", true);
    defineSymbol(text, main, textord, "\u2018", "\\textquoteleft");
    defineSymbol(text, main, textord, "\u2019", "'", true);
    defineSymbol(text, main, textord, "\u2019", "\\textquoteright");
    defineSymbol(text, main, textord, "\u201C", "``", true);
    defineSymbol(text, main, textord, "\u201C", "\\textquotedblleft");
    defineSymbol(text, main, textord, "\u201D", "''", true);
    defineSymbol(text, main, textord, "\u201D", "\\textquotedblright");
    defineSymbol(math, main, textord, "\xB0", "\\degree", true);
    defineSymbol(text, main, textord, "\xB0", "\\degree");
    defineSymbol(text, main, textord, "\xB0", "\\textdegree", true);
    defineSymbol(math, main, textord, "\xA3", "\\pounds");
    defineSymbol(math, main, textord, "\xA3", "\\mathsterling", true);
    defineSymbol(text, main, textord, "\xA3", "\\pounds");
    defineSymbol(text, main, textord, "\xA3", "\\textsterling", true);
    defineSymbol(math, ams, textord, "\u2720", "\\maltese");
    defineSymbol(text, ams, textord, "\u2720", "\\maltese");
    mathTextSymbols = '0123456789/@."';
    for (i4 = 0; i4 < mathTextSymbols.length; i4++) {
      ch = mathTextSymbols.charAt(i4);
      defineSymbol(math, main, textord, ch, ch);
    }
    textSymbols = '0123456789!@*()-=+";:?/.,';
    for (_i = 0; _i < textSymbols.length; _i++) {
      _ch = textSymbols.charAt(_i);
      defineSymbol(text, main, textord, _ch, _ch);
    }
    letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    for (_i2 = 0; _i2 < letters.length; _i2++) {
      _ch2 = letters.charAt(_i2);
      defineSymbol(math, main, mathord, _ch2, _ch2);
      defineSymbol(text, main, textord, _ch2, _ch2);
    }
    defineSymbol(math, ams, textord, "C", "\u2102");
    defineSymbol(text, ams, textord, "C", "\u2102");
    defineSymbol(math, ams, textord, "H", "\u210D");
    defineSymbol(text, ams, textord, "H", "\u210D");
    defineSymbol(math, ams, textord, "N", "\u2115");
    defineSymbol(text, ams, textord, "N", "\u2115");
    defineSymbol(math, ams, textord, "P", "\u2119");
    defineSymbol(text, ams, textord, "P", "\u2119");
    defineSymbol(math, ams, textord, "Q", "\u211A");
    defineSymbol(text, ams, textord, "Q", "\u211A");
    defineSymbol(math, ams, textord, "R", "\u211D");
    defineSymbol(text, ams, textord, "R", "\u211D");
    defineSymbol(math, ams, textord, "Z", "\u2124");
    defineSymbol(text, ams, textord, "Z", "\u2124");
    defineSymbol(math, main, mathord, "h", "\u210E");
    defineSymbol(text, main, mathord, "h", "\u210E");
    wideChar = "";
    for (_i3 = 0; _i3 < letters.length; _i3++) {
      _ch3 = letters.charAt(_i3);
      wideChar = String.fromCharCode(55349, 56320 + _i3);
      defineSymbol(math, main, mathord, _ch3, wideChar);
      defineSymbol(text, main, textord, _ch3, wideChar);
      wideChar = String.fromCharCode(55349, 56372 + _i3);
      defineSymbol(math, main, mathord, _ch3, wideChar);
      defineSymbol(text, main, textord, _ch3, wideChar);
      wideChar = String.fromCharCode(55349, 56424 + _i3);
      defineSymbol(math, main, mathord, _ch3, wideChar);
      defineSymbol(text, main, textord, _ch3, wideChar);
      wideChar = String.fromCharCode(55349, 56580 + _i3);
      defineSymbol(math, main, mathord, _ch3, wideChar);
      defineSymbol(text, main, textord, _ch3, wideChar);
      wideChar = String.fromCharCode(55349, 56736 + _i3);
      defineSymbol(math, main, mathord, _ch3, wideChar);
      defineSymbol(text, main, textord, _ch3, wideChar);
      wideChar = String.fromCharCode(55349, 56788 + _i3);
      defineSymbol(math, main, mathord, _ch3, wideChar);
      defineSymbol(text, main, textord, _ch3, wideChar);
      wideChar = String.fromCharCode(55349, 56840 + _i3);
      defineSymbol(math, main, mathord, _ch3, wideChar);
      defineSymbol(text, main, textord, _ch3, wideChar);
      wideChar = String.fromCharCode(55349, 56944 + _i3);
      defineSymbol(math, main, mathord, _ch3, wideChar);
      defineSymbol(text, main, textord, _ch3, wideChar);
      if (_i3 < 26) {
        wideChar = String.fromCharCode(55349, 56632 + _i3);
        defineSymbol(math, main, mathord, _ch3, wideChar);
        defineSymbol(text, main, textord, _ch3, wideChar);
        wideChar = String.fromCharCode(55349, 56476 + _i3);
        defineSymbol(math, main, mathord, _ch3, wideChar);
        defineSymbol(text, main, textord, _ch3, wideChar);
      }
    }
    wideChar = String.fromCharCode(55349, 56668);
    defineSymbol(math, main, mathord, "k", wideChar);
    defineSymbol(text, main, textord, "k", wideChar);
    for (_i4 = 0; _i4 < 10; _i4++) {
      _ch4 = _i4.toString();
      wideChar = String.fromCharCode(55349, 57294 + _i4);
      defineSymbol(math, main, mathord, _ch4, wideChar);
      defineSymbol(text, main, textord, _ch4, wideChar);
      wideChar = String.fromCharCode(55349, 57314 + _i4);
      defineSymbol(math, main, mathord, _ch4, wideChar);
      defineSymbol(text, main, textord, _ch4, wideChar);
      wideChar = String.fromCharCode(55349, 57324 + _i4);
      defineSymbol(math, main, mathord, _ch4, wideChar);
      defineSymbol(text, main, textord, _ch4, wideChar);
      wideChar = String.fromCharCode(55349, 57334 + _i4);
      defineSymbol(math, main, mathord, _ch4, wideChar);
      defineSymbol(text, main, textord, _ch4, wideChar);
    }
    extraLatin = "\xD0\xDE\xFE";
    for (_i5 = 0; _i5 < extraLatin.length; _i5++) {
      _ch5 = extraLatin.charAt(_i5);
      defineSymbol(math, main, mathord, _ch5, _ch5);
      defineSymbol(text, main, textord, _ch5, _ch5);
    }
    wideLatinLetterData = [
      ["mathbf", "textbf", "Main-Bold"],
      ["mathbf", "textbf", "Main-Bold"],
      ["mathnormal", "textit", "Math-Italic"],
      ["mathnormal", "textit", "Math-Italic"],
      ["boldsymbol", "boldsymbol", "Main-BoldItalic"],
      ["boldsymbol", "boldsymbol", "Main-BoldItalic"],
      ["mathscr", "textscr", "Script-Regular"],
      ["", "", ""],
      ["", "", ""],
      ["", "", ""],
      ["mathfrak", "textfrak", "Fraktur-Regular"],
      ["mathfrak", "textfrak", "Fraktur-Regular"],
      ["mathbb", "textbb", "AMS-Regular"],
      ["mathbb", "textbb", "AMS-Regular"],
      ["", "", ""],
      ["", "", ""],
      ["mathsf", "textsf", "SansSerif-Regular"],
      ["mathsf", "textsf", "SansSerif-Regular"],
      ["mathboldsf", "textboldsf", "SansSerif-Bold"],
      ["mathboldsf", "textboldsf", "SansSerif-Bold"],
      ["mathitsf", "textitsf", "SansSerif-Italic"],
      ["mathitsf", "textitsf", "SansSerif-Italic"],
      ["", "", ""],
      ["", "", ""],
      ["mathtt", "texttt", "Typewriter-Regular"],
      ["mathtt", "texttt", "Typewriter-Regular"]
    ];
    wideNumeralData = [
      ["mathbf", "textbf", "Main-Bold"],
      ["", "", ""],
      ["mathsf", "textsf", "SansSerif-Regular"],
      ["mathboldsf", "textboldsf", "SansSerif-Bold"],
      ["mathtt", "texttt", "Typewriter-Regular"]
    ];
    wideCharacterFont = function wideCharacterFont2(wideChar2, mode) {
      var H5 = wideChar2.charCodeAt(0);
      var L5 = wideChar2.charCodeAt(1);
      var codePoint = (H5 - 55296) * 1024 + (L5 - 56320) + 65536;
      var j3 = mode === "math" ? 0 : 1;
      if (119808 <= codePoint && codePoint < 120484) {
        var i4 = Math.floor((codePoint - 119808) / 26);
        return [wideLatinLetterData[i4][2], wideLatinLetterData[i4][j3]];
      } else if (120782 <= codePoint && codePoint <= 120831) {
        var _i = Math.floor((codePoint - 120782) / 10);
        return [wideNumeralData[_i][2], wideNumeralData[_i][j3]];
      } else if (codePoint === 120485 || codePoint === 120486) {
        return [wideLatinLetterData[0][2], wideLatinLetterData[0][j3]];
      } else if (120486 < codePoint && codePoint < 120782) {
        return ["", ""];
      } else {
        throw new ParseError("Unsupported character: " + wideChar2);
      }
    };
    lookupSymbol = function lookupSymbol2(value, fontName, mode) {
      if (symbols[mode][value] && symbols[mode][value].replace) {
        value = symbols[mode][value].replace;
      }
      return {
        value,
        metrics: getCharacterMetrics(value, fontName, mode)
      };
    };
    makeSymbol = function makeSymbol2(value, fontName, mode, options, classes) {
      var lookup = lookupSymbol(value, fontName, mode);
      var metrics = lookup.metrics;
      value = lookup.value;
      var symbolNode;
      if (metrics) {
        var italic = metrics.italic;
        if (mode === "text" || options && options.font === "mathit") {
          italic = 0;
        }
        symbolNode = new SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);
      } else {
        typeof console !== "undefined" && console.warn("No character metrics " + ("for '" + value + "' in style '" + fontName + "' and mode '" + mode + "'"));
        symbolNode = new SymbolNode(value, 0, 0, 0, 0, 0, classes);
      }
      if (options) {
        symbolNode.maxFontSize = options.sizeMultiplier;
        if (options.style.isTight()) {
          symbolNode.classes.push("mtight");
        }
        var color = options.getColor();
        if (color) {
          symbolNode.style.color = color;
        }
      }
      return symbolNode;
    };
    mathsym = function mathsym2(value, mode, options, classes) {
      if (classes === void 0) {
        classes = [];
      }
      if (options.font === "boldsymbol" && lookupSymbol(value, "Main-Bold", mode).metrics) {
        return makeSymbol(value, "Main-Bold", mode, options, classes.concat(["mathbf"]));
      } else if (value === "\\" || symbols[mode][value].font === "main") {
        return makeSymbol(value, "Main-Regular", mode, options, classes);
      } else {
        return makeSymbol(value, "AMS-Regular", mode, options, classes.concat(["amsrm"]));
      }
    };
    boldsymbol = function boldsymbol2(value, mode, options, classes, type) {
      if (type !== "textord" && lookupSymbol(value, "Math-BoldItalic", mode).metrics) {
        return {
          fontName: "Math-BoldItalic",
          fontClass: "boldsymbol"
        };
      } else {
        return {
          fontName: "Main-Bold",
          fontClass: "mathbf"
        };
      }
    };
    makeOrd = function makeOrd2(group, options, type) {
      var mode = group.mode;
      var text2 = group.text;
      var classes = ["mord"];
      var isFont = mode === "math" || mode === "text" && options.font;
      var fontOrFamily = isFont ? options.font : options.fontFamily;
      if (text2.charCodeAt(0) === 55349) {
        var [wideFontName, wideFontClass] = wideCharacterFont(text2, mode);
        return makeSymbol(text2, wideFontName, mode, options, classes.concat(wideFontClass));
      } else if (fontOrFamily) {
        var fontName;
        var fontClasses;
        if (fontOrFamily === "boldsymbol") {
          var fontData = boldsymbol(text2, mode, options, classes, type);
          fontName = fontData.fontName;
          fontClasses = [fontData.fontClass];
        } else if (isFont) {
          fontName = fontMap[fontOrFamily].fontName;
          fontClasses = [fontOrFamily];
        } else {
          fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);
          fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];
        }
        if (lookupSymbol(text2, fontName, mode).metrics) {
          return makeSymbol(text2, fontName, mode, options, classes.concat(fontClasses));
        } else if (ligatures.hasOwnProperty(text2) && fontName.slice(0, 10) === "Typewriter") {
          var parts = [];
          for (var i4 = 0; i4 < text2.length; i4++) {
            parts.push(makeSymbol(text2[i4], fontName, mode, options, classes.concat(fontClasses)));
          }
          return makeFragment(parts);
        }
      }
      if (type === "mathord") {
        return makeSymbol(text2, "Math-Italic", mode, options, classes.concat(["mathnormal"]));
      } else if (type === "textord") {
        var font = symbols[mode][text2] && symbols[mode][text2].font;
        if (font === "ams") {
          var _fontName = retrieveTextFontName("amsrm", options.fontWeight, options.fontShape);
          return makeSymbol(text2, _fontName, mode, options, classes.concat("amsrm", options.fontWeight, options.fontShape));
        } else if (font === "main" || !font) {
          var _fontName2 = retrieveTextFontName("textrm", options.fontWeight, options.fontShape);
          return makeSymbol(text2, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));
        } else {
          var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape);
          return makeSymbol(text2, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));
        }
      } else {
        throw new Error("unexpected type: " + type + " in makeOrd");
      }
    };
    canCombine = (prev, next) => {
      if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {
        return false;
      }
      if (prev.classes.length === 1) {
        var cls = prev.classes[0];
        if (cls === "mbin" || cls === "mord") {
          return false;
        }
      }
      for (var style in prev.style) {
        if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {
          return false;
        }
      }
      for (var _style in next.style) {
        if (next.style.hasOwnProperty(_style) && prev.style[_style] !== next.style[_style]) {
          return false;
        }
      }
      return true;
    };
    tryCombineChars = (chars2) => {
      for (var i4 = 0; i4 < chars2.length - 1; i4++) {
        var prev = chars2[i4];
        var next = chars2[i4 + 1];
        if (prev instanceof SymbolNode && next instanceof SymbolNode && canCombine(prev, next)) {
          prev.text += next.text;
          prev.height = Math.max(prev.height, next.height);
          prev.depth = Math.max(prev.depth, next.depth);
          prev.italic = next.italic;
          chars2.splice(i4 + 1, 1);
          i4--;
        }
      }
      return chars2;
    };
    sizeElementFromChildren = function sizeElementFromChildren2(elem) {
      var height = 0;
      var depth = 0;
      var maxFontSize = 0;
      for (var i4 = 0; i4 < elem.children.length; i4++) {
        var child = elem.children[i4];
        if (child.height > height) {
          height = child.height;
        }
        if (child.depth > depth) {
          depth = child.depth;
        }
        if (child.maxFontSize > maxFontSize) {
          maxFontSize = child.maxFontSize;
        }
      }
      elem.height = height;
      elem.depth = depth;
      elem.maxFontSize = maxFontSize;
    };
    makeSpan$2 = function makeSpan(classes, children, options, style) {
      var span = new Span(classes, children, options, style);
      sizeElementFromChildren(span);
      return span;
    };
    makeSvgSpan = (classes, children, options, style) => new Span(classes, children, options, style);
    makeLineSpan = function makeLineSpan2(className, options, thickness) {
      var line = makeSpan$2([className], [], options);
      line.height = Math.max(thickness || options.fontMetrics().defaultRuleThickness, options.minRuleThickness);
      line.style.borderBottomWidth = makeEm(line.height);
      line.maxFontSize = 1;
      return line;
    };
    makeAnchor = function makeAnchor2(href, classes, children, options) {
      var anchor = new Anchor(href, classes, children, options);
      sizeElementFromChildren(anchor);
      return anchor;
    };
    makeFragment = function makeFragment2(children) {
      var fragment = new DocumentFragment(children);
      sizeElementFromChildren(fragment);
      return fragment;
    };
    wrapFragment = function wrapFragment2(group, options) {
      if (group instanceof DocumentFragment) {
        return makeSpan$2([], [group], options);
      }
      return group;
    };
    getVListChildrenAndDepth = function getVListChildrenAndDepth2(params) {
      if (params.positionType === "individualShift") {
        var oldChildren = params.children;
        var children = [oldChildren[0]];
        var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;
        var currPos = _depth;
        for (var i4 = 1; i4 < oldChildren.length; i4++) {
          var diff = -oldChildren[i4].shift - currPos - oldChildren[i4].elem.depth;
          var size = diff - (oldChildren[i4 - 1].elem.height + oldChildren[i4 - 1].elem.depth);
          currPos = currPos + diff;
          children.push({
            type: "kern",
            size
          });
          children.push(oldChildren[i4]);
        }
        return {
          children,
          depth: _depth
        };
      }
      var depth;
      if (params.positionType === "top") {
        var bottom = params.positionData;
        for (var _i = 0; _i < params.children.length; _i++) {
          var child = params.children[_i];
          bottom -= child.type === "kern" ? child.size : child.elem.height + child.elem.depth;
        }
        depth = bottom;
      } else if (params.positionType === "bottom") {
        depth = -params.positionData;
      } else {
        var firstChild = params.children[0];
        if (firstChild.type !== "elem") {
          throw new Error('First child must have type "elem".');
        }
        if (params.positionType === "shift") {
          depth = -firstChild.elem.depth - params.positionData;
        } else if (params.positionType === "firstBaseline") {
          depth = -firstChild.elem.depth;
        } else {
          throw new Error("Invalid positionType " + params.positionType + ".");
        }
      }
      return {
        children: params.children,
        depth
      };
    };
    makeVList = function makeVList2(params, options) {
      var {
        children,
        depth
      } = getVListChildrenAndDepth(params);
      var pstrutSize = 0;
      for (var i4 = 0; i4 < children.length; i4++) {
        var child = children[i4];
        if (child.type === "elem") {
          var elem = child.elem;
          pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);
        }
      }
      pstrutSize += 2;
      var pstrut = makeSpan$2(["pstrut"], []);
      pstrut.style.height = makeEm(pstrutSize);
      var realChildren = [];
      var minPos = depth;
      var maxPos = depth;
      var currPos = depth;
      for (var _i2 = 0; _i2 < children.length; _i2++) {
        var _child = children[_i2];
        if (_child.type === "kern") {
          currPos += _child.size;
        } else {
          var _elem = _child.elem;
          var classes = _child.wrapperClasses || [];
          var style = _child.wrapperStyle || {};
          var childWrap = makeSpan$2(classes, [pstrut, _elem], void 0, style);
          childWrap.style.top = makeEm(-pstrutSize - currPos - _elem.depth);
          if (_child.marginLeft) {
            childWrap.style.marginLeft = _child.marginLeft;
          }
          if (_child.marginRight) {
            childWrap.style.marginRight = _child.marginRight;
          }
          realChildren.push(childWrap);
          currPos += _elem.height + _elem.depth;
        }
        minPos = Math.min(minPos, currPos);
        maxPos = Math.max(maxPos, currPos);
      }
      var vlist = makeSpan$2(["vlist"], realChildren);
      vlist.style.height = makeEm(maxPos);
      var rows;
      if (minPos < 0) {
        var emptySpan = makeSpan$2([], []);
        var depthStrut = makeSpan$2(["vlist"], [emptySpan]);
        depthStrut.style.height = makeEm(-minPos);
        var topStrut = makeSpan$2(["vlist-s"], [new SymbolNode("\u200B")]);
        rows = [makeSpan$2(["vlist-r"], [vlist, topStrut]), makeSpan$2(["vlist-r"], [depthStrut])];
      } else {
        rows = [makeSpan$2(["vlist-r"], [vlist])];
      }
      var vtable = makeSpan$2(["vlist-t"], rows);
      if (rows.length === 2) {
        vtable.classes.push("vlist-t2");
      }
      vtable.height = maxPos;
      vtable.depth = -minPos;
      return vtable;
    };
    makeGlue = (measurement, options) => {
      var rule = makeSpan$2(["mspace"], [], options);
      var size = calculateSize(measurement, options);
      rule.style.marginRight = makeEm(size);
      return rule;
    };
    retrieveTextFontName = function retrieveTextFontName2(fontFamily, fontWeight, fontShape) {
      var baseFontName = "";
      switch (fontFamily) {
        case "amsrm":
          baseFontName = "AMS";
          break;
        case "textrm":
          baseFontName = "Main";
          break;
        case "textsf":
          baseFontName = "SansSerif";
          break;
        case "texttt":
          baseFontName = "Typewriter";
          break;
        default:
          baseFontName = fontFamily;
      }
      var fontStylesName;
      if (fontWeight === "textbf" && fontShape === "textit") {
        fontStylesName = "BoldItalic";
      } else if (fontWeight === "textbf") {
        fontStylesName = "Bold";
      } else if (fontWeight === "textit") {
        fontStylesName = "Italic";
      } else {
        fontStylesName = "Regular";
      }
      return baseFontName + "-" + fontStylesName;
    };
    fontMap = {
      "mathbf": {
        variant: "bold",
        fontName: "Main-Bold"
      },
      "mathrm": {
        variant: "normal",
        fontName: "Main-Regular"
      },
      "textit": {
        variant: "italic",
        fontName: "Main-Italic"
      },
      "mathit": {
        variant: "italic",
        fontName: "Main-Italic"
      },
      "mathnormal": {
        variant: "italic",
        fontName: "Math-Italic"
      },
      "mathbb": {
        variant: "double-struck",
        fontName: "AMS-Regular"
      },
      "mathcal": {
        variant: "script",
        fontName: "Caligraphic-Regular"
      },
      "mathfrak": {
        variant: "fraktur",
        fontName: "Fraktur-Regular"
      },
      "mathscr": {
        variant: "script",
        fontName: "Script-Regular"
      },
      "mathsf": {
        variant: "sans-serif",
        fontName: "SansSerif-Regular"
      },
      "mathtt": {
        variant: "monospace",
        fontName: "Typewriter-Regular"
      }
    };
    svgData = {
      vec: ["vec", 0.471, 0.714],
      oiintSize1: ["oiintSize1", 0.957, 0.499],
      oiintSize2: ["oiintSize2", 1.472, 0.659],
      oiiintSize1: ["oiiintSize1", 1.304, 0.499],
      oiiintSize2: ["oiiintSize2", 1.98, 0.659]
    };
    staticSvg = function staticSvg2(value, options) {
      var [pathName, width, height] = svgData[value];
      var path2 = new PathNode(pathName);
      var svgNode = new SvgNode([path2], {
        "width": makeEm(width),
        "height": makeEm(height),
        "style": "width:" + makeEm(width),
        "viewBox": "0 0 " + 1e3 * width + " " + 1e3 * height,
        "preserveAspectRatio": "xMinYMin"
      });
      var span = makeSvgSpan(["overlay"], [svgNode], options);
      span.height = height;
      span.style.height = makeEm(height);
      span.style.width = makeEm(width);
      return span;
    };
    buildCommon = {
      fontMap,
      makeSymbol,
      mathsym,
      makeSpan: makeSpan$2,
      makeSvgSpan,
      makeLineSpan,
      makeAnchor,
      makeFragment,
      wrapFragment,
      makeVList,
      makeOrd,
      makeGlue,
      staticSvg,
      svgData,
      tryCombineChars
    };
    thinspace = {
      number: 3,
      unit: "mu"
    };
    mediumspace = {
      number: 4,
      unit: "mu"
    };
    thickspace = {
      number: 5,
      unit: "mu"
    };
    spacings = {
      mord: {
        mop: thinspace,
        mbin: mediumspace,
        mrel: thickspace,
        minner: thinspace
      },
      mop: {
        mord: thinspace,
        mop: thinspace,
        mrel: thickspace,
        minner: thinspace
      },
      mbin: {
        mord: mediumspace,
        mop: mediumspace,
        mopen: mediumspace,
        minner: mediumspace
      },
      mrel: {
        mord: thickspace,
        mop: thickspace,
        mopen: thickspace,
        minner: thickspace
      },
      mopen: {},
      mclose: {
        mop: thinspace,
        mbin: mediumspace,
        mrel: thickspace,
        minner: thinspace
      },
      mpunct: {
        mord: thinspace,
        mop: thinspace,
        mrel: thickspace,
        mopen: thinspace,
        mclose: thinspace,
        mpunct: thinspace,
        minner: thinspace
      },
      minner: {
        mord: thinspace,
        mop: thinspace,
        mbin: mediumspace,
        mrel: thickspace,
        mopen: thinspace,
        mpunct: thinspace,
        minner: thinspace
      }
    };
    tightSpacings = {
      mord: {
        mop: thinspace
      },
      mop: {
        mord: thinspace,
        mop: thinspace
      },
      mbin: {},
      mrel: {},
      mopen: {},
      mclose: {
        mop: thinspace
      },
      mpunct: {},
      minner: {
        mop: thinspace
      }
    };
    _functions = {};
    _htmlGroupBuilders = {};
    _mathmlGroupBuilders = {};
    normalizeArgument = function normalizeArgument2(arg) {
      return arg.type === "ordgroup" && arg.body.length === 1 ? arg.body[0] : arg;
    };
    ordargument = function ordargument2(arg) {
      return arg.type === "ordgroup" ? arg.body : [arg];
    };
    makeSpan$1 = buildCommon.makeSpan;
    binLeftCanceller = ["leftmost", "mbin", "mopen", "mrel", "mop", "mpunct"];
    binRightCanceller = ["rightmost", "mrel", "mclose", "mpunct"];
    styleMap$1 = {
      "display": Style$1.DISPLAY,
      "text": Style$1.TEXT,
      "script": Style$1.SCRIPT,
      "scriptscript": Style$1.SCRIPTSCRIPT
    };
    DomEnum = {
      mord: "mord",
      mop: "mop",
      mbin: "mbin",
      mrel: "mrel",
      mopen: "mopen",
      mclose: "mclose",
      mpunct: "mpunct",
      minner: "minner"
    };
    buildExpression$1 = function buildExpression(expression, options, isRealGroup, surrounding) {
      if (surrounding === void 0) {
        surrounding = [null, null];
      }
      var groups = [];
      for (var i4 = 0; i4 < expression.length; i4++) {
        var output = buildGroup$1(expression[i4], options);
        if (output instanceof DocumentFragment) {
          var children = output.children;
          groups.push(...children);
        } else {
          groups.push(output);
        }
      }
      buildCommon.tryCombineChars(groups);
      if (!isRealGroup) {
        return groups;
      }
      var glueOptions = options;
      if (expression.length === 1) {
        var node = expression[0];
        if (node.type === "sizing") {
          glueOptions = options.havingSize(node.size);
        } else if (node.type === "styling") {
          glueOptions = options.havingStyle(styleMap$1[node.style]);
        }
      }
      var dummyPrev = makeSpan$1([surrounding[0] || "leftmost"], [], options);
      var dummyNext = makeSpan$1([surrounding[1] || "rightmost"], [], options);
      var isRoot = isRealGroup === "root";
      traverseNonSpaceNodes(groups, (node2, prev) => {
        var prevType = prev.classes[0];
        var type = node2.classes[0];
        if (prevType === "mbin" && utils.contains(binRightCanceller, type)) {
          prev.classes[0] = "mord";
        } else if (type === "mbin" && utils.contains(binLeftCanceller, prevType)) {
          node2.classes[0] = "mord";
        }
      }, {
        node: dummyPrev
      }, dummyNext, isRoot);
      traverseNonSpaceNodes(groups, (node2, prev) => {
        var prevType = getTypeOfDomTree(prev);
        var type = getTypeOfDomTree(node2);
        var space = prevType && type ? node2.hasClass("mtight") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;
        if (space) {
          return buildCommon.makeGlue(space, glueOptions);
        }
      }, {
        node: dummyPrev
      }, dummyNext, isRoot);
      return groups;
    };
    traverseNonSpaceNodes = function traverseNonSpaceNodes2(nodes, callback, prev, next, isRoot) {
      if (next) {
        nodes.push(next);
      }
      var i4 = 0;
      for (; i4 < nodes.length; i4++) {
        var node = nodes[i4];
        var partialGroup = checkPartialGroup(node);
        if (partialGroup) {
          traverseNonSpaceNodes2(partialGroup.children, callback, prev, null, isRoot);
          continue;
        }
        var nonspace = !node.hasClass("mspace");
        if (nonspace) {
          var result = callback(node, prev.node);
          if (result) {
            if (prev.insertAfter) {
              prev.insertAfter(result);
            } else {
              nodes.unshift(result);
              i4++;
            }
          }
        }
        if (nonspace) {
          prev.node = node;
        } else if (isRoot && node.hasClass("newline")) {
          prev.node = makeSpan$1(["leftmost"]);
        }
        prev.insertAfter = ((index16) => (n3) => {
          nodes.splice(index16 + 1, 0, n3);
          i4++;
        })(i4);
      }
      if (next) {
        nodes.pop();
      }
    };
    checkPartialGroup = function checkPartialGroup2(node) {
      if (node instanceof DocumentFragment || node instanceof Anchor || node instanceof Span && node.hasClass("enclosing")) {
        return node;
      }
      return null;
    };
    getOutermostNode = function getOutermostNode2(node, side) {
      var partialGroup = checkPartialGroup(node);
      if (partialGroup) {
        var children = partialGroup.children;
        if (children.length) {
          if (side === "right") {
            return getOutermostNode2(children[children.length - 1], "right");
          } else if (side === "left") {
            return getOutermostNode2(children[0], "left");
          }
        }
      }
      return node;
    };
    getTypeOfDomTree = function getTypeOfDomTree2(node, side) {
      if (!node) {
        return null;
      }
      if (side) {
        node = getOutermostNode(node, side);
      }
      return DomEnum[node.classes[0]] || null;
    };
    makeNullDelimiter = function makeNullDelimiter2(options, classes) {
      var moreClasses = ["nulldelimiter"].concat(options.baseSizingClasses());
      return makeSpan$1(classes.concat(moreClasses));
    };
    buildGroup$1 = function buildGroup(group, options, baseOptions) {
      if (!group) {
        return makeSpan$1();
      }
      if (_htmlGroupBuilders[group.type]) {
        var groupNode = _htmlGroupBuilders[group.type](group, options);
        if (baseOptions && options.size !== baseOptions.size) {
          groupNode = makeSpan$1(options.sizingClasses(baseOptions), [groupNode], options);
          var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;
          groupNode.height *= multiplier;
          groupNode.depth *= multiplier;
        }
        return groupNode;
      } else {
        throw new ParseError("Got group of unknown type: '" + group.type + "'");
      }
    };
    MathNode = class {
      constructor(type, children, classes) {
        this.type = void 0;
        this.attributes = void 0;
        this.children = void 0;
        this.classes = void 0;
        this.type = type;
        this.attributes = {};
        this.children = children || [];
        this.classes = classes || [];
      }
      setAttribute(name5, value) {
        this.attributes[name5] = value;
      }
      getAttribute(name5) {
        return this.attributes[name5];
      }
      toNode() {
        var node = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);
        for (var attr in this.attributes) {
          if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
            node.setAttribute(attr, this.attributes[attr]);
          }
        }
        if (this.classes.length > 0) {
          node.className = createClass(this.classes);
        }
        for (var i4 = 0; i4 < this.children.length; i4++) {
          node.appendChild(this.children[i4].toNode());
        }
        return node;
      }
      toMarkup() {
        var markup = "<" + this.type;
        for (var attr in this.attributes) {
          if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {
            markup += " " + attr + '="';
            markup += utils.escape(this.attributes[attr]);
            markup += '"';
          }
        }
        if (this.classes.length > 0) {
          markup += ' class ="' + utils.escape(createClass(this.classes)) + '"';
        }
        markup += ">";
        for (var i4 = 0; i4 < this.children.length; i4++) {
          markup += this.children[i4].toMarkup();
        }
        markup += "</" + this.type + ">";
        return markup;
      }
      toText() {
        return this.children.map((child) => child.toText()).join("");
      }
    };
    TextNode = class {
      constructor(text2) {
        this.text = void 0;
        this.text = text2;
      }
      toNode() {
        return document.createTextNode(this.text);
      }
      toMarkup() {
        return utils.escape(this.toText());
      }
      toText() {
        return this.text;
      }
    };
    SpaceNode = class {
      constructor(width) {
        this.width = void 0;
        this.character = void 0;
        this.width = width;
        if (width >= 0.05555 && width <= 0.05556) {
          this.character = "\u200A";
        } else if (width >= 0.1666 && width <= 0.1667) {
          this.character = "\u2009";
        } else if (width >= 0.2222 && width <= 0.2223) {
          this.character = "\u2005";
        } else if (width >= 0.2777 && width <= 0.2778) {
          this.character = "\u2005\u200A";
        } else if (width >= -0.05556 && width <= -0.05555) {
          this.character = "\u200A\u2063";
        } else if (width >= -0.1667 && width <= -0.1666) {
          this.character = "\u2009\u2063";
        } else if (width >= -0.2223 && width <= -0.2222) {
          this.character = "\u205F\u2063";
        } else if (width >= -0.2778 && width <= -0.2777) {
          this.character = "\u2005\u2063";
        } else {
          this.character = null;
        }
      }
      toNode() {
        if (this.character) {
          return document.createTextNode(this.character);
        } else {
          var node = document.createElementNS("http://www.w3.org/1998/Math/MathML", "mspace");
          node.setAttribute("width", makeEm(this.width));
          return node;
        }
      }
      toMarkup() {
        if (this.character) {
          return "<mtext>" + this.character + "</mtext>";
        } else {
          return '<mspace width="' + makeEm(this.width) + '"/>';
        }
      }
      toText() {
        if (this.character) {
          return this.character;
        } else {
          return " ";
        }
      }
    };
    mathMLTree = {
      MathNode,
      TextNode,
      SpaceNode,
      newDocumentFragment
    };
    makeText = function makeText2(text2, mode, options) {
      if (symbols[mode][text2] && symbols[mode][text2].replace && text2.charCodeAt(0) !== 55349 && !(ligatures.hasOwnProperty(text2) && options && (options.fontFamily && options.fontFamily.slice(4, 6) === "tt" || options.font && options.font.slice(4, 6) === "tt"))) {
        text2 = symbols[mode][text2].replace;
      }
      return new mathMLTree.TextNode(text2);
    };
    makeRow = function makeRow2(body) {
      if (body.length === 1) {
        return body[0];
      } else {
        return new mathMLTree.MathNode("mrow", body);
      }
    };
    getVariant = function getVariant2(group, options) {
      if (options.fontFamily === "texttt") {
        return "monospace";
      } else if (options.fontFamily === "textsf") {
        if (options.fontShape === "textit" && options.fontWeight === "textbf") {
          return "sans-serif-bold-italic";
        } else if (options.fontShape === "textit") {
          return "sans-serif-italic";
        } else if (options.fontWeight === "textbf") {
          return "bold-sans-serif";
        } else {
          return "sans-serif";
        }
      } else if (options.fontShape === "textit" && options.fontWeight === "textbf") {
        return "bold-italic";
      } else if (options.fontShape === "textit") {
        return "italic";
      } else if (options.fontWeight === "textbf") {
        return "bold";
      }
      var font = options.font;
      if (!font || font === "mathnormal") {
        return null;
      }
      var mode = group.mode;
      if (font === "mathit") {
        return "italic";
      } else if (font === "boldsymbol") {
        return group.type === "textord" ? "bold" : "bold-italic";
      } else if (font === "mathbf") {
        return "bold";
      } else if (font === "mathbb") {
        return "double-struck";
      } else if (font === "mathfrak") {
        return "fraktur";
      } else if (font === "mathscr" || font === "mathcal") {
        return "script";
      } else if (font === "mathsf") {
        return "sans-serif";
      } else if (font === "mathtt") {
        return "monospace";
      }
      var text2 = group.text;
      if (utils.contains(["\\imath", "\\jmath"], text2)) {
        return null;
      }
      if (symbols[mode][text2] && symbols[mode][text2].replace) {
        text2 = symbols[mode][text2].replace;
      }
      var fontName = buildCommon.fontMap[font].fontName;
      if (getCharacterMetrics(text2, fontName, mode)) {
        return buildCommon.fontMap[font].variant;
      }
      return null;
    };
    buildExpression2 = function buildExpression3(expression, options, isOrdgroup) {
      if (expression.length === 1) {
        var group = buildGroup2(expression[0], options);
        if (isOrdgroup && group instanceof MathNode && group.type === "mo") {
          group.setAttribute("lspace", "0em");
          group.setAttribute("rspace", "0em");
        }
        return [group];
      }
      var groups = [];
      var lastGroup;
      for (var i4 = 0; i4 < expression.length; i4++) {
        var _group = buildGroup2(expression[i4], options);
        if (_group instanceof MathNode && lastGroup instanceof MathNode) {
          if (_group.type === "mtext" && lastGroup.type === "mtext" && _group.getAttribute("mathvariant") === lastGroup.getAttribute("mathvariant")) {
            lastGroup.children.push(..._group.children);
            continue;
          } else if (_group.type === "mn" && lastGroup.type === "mn") {
            lastGroup.children.push(..._group.children);
            continue;
          } else if (_group.type === "mi" && _group.children.length === 1 && lastGroup.type === "mn") {
            var child = _group.children[0];
            if (child instanceof TextNode && child.text === ".") {
              lastGroup.children.push(..._group.children);
              continue;
            }
          } else if (lastGroup.type === "mi" && lastGroup.children.length === 1) {
            var lastChild = lastGroup.children[0];
            if (lastChild instanceof TextNode && lastChild.text === "\u0338" && (_group.type === "mo" || _group.type === "mi" || _group.type === "mn")) {
              var _child = _group.children[0];
              if (_child instanceof TextNode && _child.text.length > 0) {
                _child.text = _child.text.slice(0, 1) + "\u0338" + _child.text.slice(1);
                groups.pop();
              }
            }
          }
        }
        groups.push(_group);
        lastGroup = _group;
      }
      return groups;
    };
    buildExpressionRow = function buildExpressionRow2(expression, options, isOrdgroup) {
      return makeRow(buildExpression2(expression, options, isOrdgroup));
    };
    buildGroup2 = function buildGroup3(group, options) {
      if (!group) {
        return new mathMLTree.MathNode("mrow");
      }
      if (_mathmlGroupBuilders[group.type]) {
        var result = _mathmlGroupBuilders[group.type](group, options);
        return result;
      } else {
        throw new ParseError("Got group of unknown type: '" + group.type + "'");
      }
    };
    optionsFromSettings = function optionsFromSettings2(settings) {
      return new Options({
        style: settings.displayMode ? Style$1.DISPLAY : Style$1.TEXT,
        maxSize: settings.maxSize,
        minRuleThickness: settings.minRuleThickness
      });
    };
    displayWrap = function displayWrap2(node, settings) {
      if (settings.displayMode) {
        var classes = ["katex-display"];
        if (settings.leqno) {
          classes.push("leqno");
        }
        if (settings.fleqn) {
          classes.push("fleqn");
        }
        node = buildCommon.makeSpan(classes, [node]);
      }
      return node;
    };
    buildTree = function buildTree2(tree, expression, settings) {
      var options = optionsFromSettings(settings);
      var katexNode;
      if (settings.output === "mathml") {
        return buildMathML(tree, expression, options, settings.displayMode, true);
      } else if (settings.output === "html") {
        var htmlNode = buildHTML(tree, options);
        katexNode = buildCommon.makeSpan(["katex"], [htmlNode]);
      } else {
        var mathMLNode = buildMathML(tree, expression, options, settings.displayMode, false);
        var _htmlNode = buildHTML(tree, options);
        katexNode = buildCommon.makeSpan(["katex"], [mathMLNode, _htmlNode]);
      }
      return displayWrap(katexNode, settings);
    };
    buildHTMLTree = function buildHTMLTree2(tree, expression, settings) {
      var options = optionsFromSettings(settings);
      var htmlNode = buildHTML(tree, options);
      var katexNode = buildCommon.makeSpan(["katex"], [htmlNode]);
      return displayWrap(katexNode, settings);
    };
    stretchyCodePoint = {
      widehat: "^",
      widecheck: "\u02C7",
      widetilde: "~",
      utilde: "~",
      overleftarrow: "\u2190",
      underleftarrow: "\u2190",
      xleftarrow: "\u2190",
      overrightarrow: "\u2192",
      underrightarrow: "\u2192",
      xrightarrow: "\u2192",
      underbrace: "\u23DF",
      overbrace: "\u23DE",
      overgroup: "\u23E0",
      undergroup: "\u23E1",
      overleftrightarrow: "\u2194",
      underleftrightarrow: "\u2194",
      xleftrightarrow: "\u2194",
      Overrightarrow: "\u21D2",
      xRightarrow: "\u21D2",
      overleftharpoon: "\u21BC",
      xleftharpoonup: "\u21BC",
      overrightharpoon: "\u21C0",
      xrightharpoonup: "\u21C0",
      xLeftarrow: "\u21D0",
      xLeftrightarrow: "\u21D4",
      xhookleftarrow: "\u21A9",
      xhookrightarrow: "\u21AA",
      xmapsto: "\u21A6",
      xrightharpoondown: "\u21C1",
      xleftharpoondown: "\u21BD",
      xrightleftharpoons: "\u21CC",
      xleftrightharpoons: "\u21CB",
      xtwoheadleftarrow: "\u219E",
      xtwoheadrightarrow: "\u21A0",
      xlongequal: "=",
      xtofrom: "\u21C4",
      xrightleftarrows: "\u21C4",
      xrightequilibrium: "\u21CC",
      xleftequilibrium: "\u21CB",
      "\\cdrightarrow": "\u2192",
      "\\cdleftarrow": "\u2190",
      "\\cdlongequal": "="
    };
    mathMLnode = function mathMLnode2(label) {
      var node = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode(stretchyCodePoint[label.replace(/^\\/, "")])]);
      node.setAttribute("stretchy", "true");
      return node;
    };
    katexImagesData = {
      overrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],
      overleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],
      underrightarrow: [["rightarrow"], 0.888, 522, "xMaxYMin"],
      underleftarrow: [["leftarrow"], 0.888, 522, "xMinYMin"],
      xrightarrow: [["rightarrow"], 1.469, 522, "xMaxYMin"],
      "\\cdrightarrow": [["rightarrow"], 3, 522, "xMaxYMin"],
      xleftarrow: [["leftarrow"], 1.469, 522, "xMinYMin"],
      "\\cdleftarrow": [["leftarrow"], 3, 522, "xMinYMin"],
      Overrightarrow: [["doublerightarrow"], 0.888, 560, "xMaxYMin"],
      xRightarrow: [["doublerightarrow"], 1.526, 560, "xMaxYMin"],
      xLeftarrow: [["doubleleftarrow"], 1.526, 560, "xMinYMin"],
      overleftharpoon: [["leftharpoon"], 0.888, 522, "xMinYMin"],
      xleftharpoonup: [["leftharpoon"], 0.888, 522, "xMinYMin"],
      xleftharpoondown: [["leftharpoondown"], 0.888, 522, "xMinYMin"],
      overrightharpoon: [["rightharpoon"], 0.888, 522, "xMaxYMin"],
      xrightharpoonup: [["rightharpoon"], 0.888, 522, "xMaxYMin"],
      xrightharpoondown: [["rightharpoondown"], 0.888, 522, "xMaxYMin"],
      xlongequal: [["longequal"], 0.888, 334, "xMinYMin"],
      "\\cdlongequal": [["longequal"], 3, 334, "xMinYMin"],
      xtwoheadleftarrow: [["twoheadleftarrow"], 0.888, 334, "xMinYMin"],
      xtwoheadrightarrow: [["twoheadrightarrow"], 0.888, 334, "xMaxYMin"],
      overleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],
      overbrace: [["leftbrace", "midbrace", "rightbrace"], 1.6, 548],
      underbrace: [["leftbraceunder", "midbraceunder", "rightbraceunder"], 1.6, 548],
      underleftrightarrow: [["leftarrow", "rightarrow"], 0.888, 522],
      xleftrightarrow: [["leftarrow", "rightarrow"], 1.75, 522],
      xLeftrightarrow: [["doubleleftarrow", "doublerightarrow"], 1.75, 560],
      xrightleftharpoons: [["leftharpoondownplus", "rightharpoonplus"], 1.75, 716],
      xleftrightharpoons: [["leftharpoonplus", "rightharpoondownplus"], 1.75, 716],
      xhookleftarrow: [["leftarrow", "righthook"], 1.08, 522],
      xhookrightarrow: [["lefthook", "rightarrow"], 1.08, 522],
      overlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],
      underlinesegment: [["leftlinesegment", "rightlinesegment"], 0.888, 522],
      overgroup: [["leftgroup", "rightgroup"], 0.888, 342],
      undergroup: [["leftgroupunder", "rightgroupunder"], 0.888, 342],
      xmapsto: [["leftmapsto", "rightarrow"], 1.5, 522],
      xtofrom: [["leftToFrom", "rightToFrom"], 1.75, 528],
      xrightleftarrows: [["baraboveleftarrow", "rightarrowabovebar"], 1.75, 901],
      xrightequilibrium: [["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], 1.75, 716],
      xleftequilibrium: [["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], 1.75, 716]
    };
    groupLength = function groupLength2(arg) {
      if (arg.type === "ordgroup") {
        return arg.body.length;
      } else {
        return 1;
      }
    };
    svgSpan = function svgSpan2(group, options) {
      function buildSvgSpan_() {
        var viewBoxWidth = 4e5;
        var label = group.label.slice(1);
        if (utils.contains(["widehat", "widecheck", "widetilde", "utilde"], label)) {
          var grp = group;
          var numChars = groupLength(grp.base);
          var viewBoxHeight;
          var pathName;
          var _height;
          if (numChars > 5) {
            if (label === "widehat" || label === "widecheck") {
              viewBoxHeight = 420;
              viewBoxWidth = 2364;
              _height = 0.42;
              pathName = label + "4";
            } else {
              viewBoxHeight = 312;
              viewBoxWidth = 2340;
              _height = 0.34;
              pathName = "tilde4";
            }
          } else {
            var imgIndex = [1, 1, 2, 2, 3, 3][numChars];
            if (label === "widehat" || label === "widecheck") {
              viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];
              viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];
              _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];
              pathName = label + imgIndex;
            } else {
              viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];
              viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];
              _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];
              pathName = "tilde" + imgIndex;
            }
          }
          var path2 = new PathNode(pathName);
          var svgNode = new SvgNode([path2], {
            "width": "100%",
            "height": makeEm(_height),
            "viewBox": "0 0 " + viewBoxWidth + " " + viewBoxHeight,
            "preserveAspectRatio": "none"
          });
          return {
            span: buildCommon.makeSvgSpan([], [svgNode], options),
            minWidth: 0,
            height: _height
          };
        } else {
          var spans = [];
          var data = katexImagesData[label];
          var [paths, _minWidth, _viewBoxHeight] = data;
          var _height2 = _viewBoxHeight / 1e3;
          var numSvgChildren = paths.length;
          var widthClasses;
          var aligns;
          if (numSvgChildren === 1) {
            var align1 = data[3];
            widthClasses = ["hide-tail"];
            aligns = [align1];
          } else if (numSvgChildren === 2) {
            widthClasses = ["halfarrow-left", "halfarrow-right"];
            aligns = ["xMinYMin", "xMaxYMin"];
          } else if (numSvgChildren === 3) {
            widthClasses = ["brace-left", "brace-center", "brace-right"];
            aligns = ["xMinYMin", "xMidYMin", "xMaxYMin"];
          } else {
            throw new Error("Correct katexImagesData or update code here to support\n                    " + numSvgChildren + " children.");
          }
          for (var i4 = 0; i4 < numSvgChildren; i4++) {
            var _path = new PathNode(paths[i4]);
            var _svgNode = new SvgNode([_path], {
              "width": "400em",
              "height": makeEm(_height2),
              "viewBox": "0 0 " + viewBoxWidth + " " + _viewBoxHeight,
              "preserveAspectRatio": aligns[i4] + " slice"
            });
            var _span = buildCommon.makeSvgSpan([widthClasses[i4]], [_svgNode], options);
            if (numSvgChildren === 1) {
              return {
                span: _span,
                minWidth: _minWidth,
                height: _height2
              };
            } else {
              _span.style.height = makeEm(_height2);
              spans.push(_span);
            }
          }
          return {
            span: buildCommon.makeSpan(["stretchy"], spans, options),
            minWidth: _minWidth,
            height: _height2
          };
        }
      }
      var {
        span,
        minWidth,
        height
      } = buildSvgSpan_();
      span.height = height;
      span.style.height = makeEm(height);
      if (minWidth > 0) {
        span.style.minWidth = makeEm(minWidth);
      }
      return span;
    };
    encloseSpan = function encloseSpan2(inner2, label, topPad, bottomPad, options) {
      var img;
      var totalHeight = inner2.height + inner2.depth + topPad + bottomPad;
      if (/fbox|color|angl/.test(label)) {
        img = buildCommon.makeSpan(["stretchy", label], [], options);
        if (label === "fbox") {
          var color = options.color && options.getColor();
          if (color) {
            img.style.borderColor = color;
          }
        }
      } else {
        var lines = [];
        if (/^[bx]cancel$/.test(label)) {
          lines.push(new LineNode({
            "x1": "0",
            "y1": "0",
            "x2": "100%",
            "y2": "100%",
            "stroke-width": "0.046em"
          }));
        }
        if (/^x?cancel$/.test(label)) {
          lines.push(new LineNode({
            "x1": "0",
            "y1": "100%",
            "x2": "100%",
            "y2": "0",
            "stroke-width": "0.046em"
          }));
        }
        var svgNode = new SvgNode(lines, {
          "width": "100%",
          "height": makeEm(totalHeight)
        });
        img = buildCommon.makeSvgSpan([], [svgNode], options);
      }
      img.height = totalHeight;
      img.style.height = makeEm(totalHeight);
      return img;
    };
    stretchy = {
      encloseSpan,
      mathMLnode,
      svgSpan
    };
    htmlBuilder$a = (grp, options) => {
      var base;
      var group;
      var supSubGroup;
      if (grp && grp.type === "supsub") {
        group = assertNodeType(grp.base, "accent");
        base = group.base;
        grp.base = base;
        supSubGroup = assertSpan(buildGroup$1(grp, options));
        grp.base = group;
      } else {
        group = assertNodeType(grp, "accent");
        base = group.base;
      }
      var body = buildGroup$1(base, options.havingCrampedStyle());
      var mustShift = group.isShifty && utils.isCharacterBox(base);
      var skew = 0;
      if (mustShift) {
        var baseChar = utils.getBaseElem(base);
        var baseGroup = buildGroup$1(baseChar, options.havingCrampedStyle());
        skew = assertSymbolDomNode(baseGroup).skew;
      }
      var accentBelow = group.label === "\\c";
      var clearance = accentBelow ? body.height + body.depth : Math.min(body.height, options.fontMetrics().xHeight);
      var accentBody;
      if (!group.isStretchy) {
        var accent2;
        var width;
        if (group.label === "\\vec") {
          accent2 = buildCommon.staticSvg("vec", options);
          width = buildCommon.svgData.vec[1];
        } else {
          accent2 = buildCommon.makeOrd({
            mode: group.mode,
            text: group.label
          }, options, "textord");
          accent2 = assertSymbolDomNode(accent2);
          accent2.italic = 0;
          width = accent2.width;
          if (accentBelow) {
            clearance += accent2.depth;
          }
        }
        accentBody = buildCommon.makeSpan(["accent-body"], [accent2]);
        var accentFull = group.label === "\\textcircled";
        if (accentFull) {
          accentBody.classes.push("accent-full");
          clearance = body.height;
        }
        var left = skew;
        if (!accentFull) {
          left -= width / 2;
        }
        accentBody.style.left = makeEm(left);
        if (group.label === "\\textcircled") {
          accentBody.style.top = ".2em";
        }
        accentBody = buildCommon.makeVList({
          positionType: "firstBaseline",
          children: [{
            type: "elem",
            elem: body
          }, {
            type: "kern",
            size: -clearance
          }, {
            type: "elem",
            elem: accentBody
          }]
        }, options);
      } else {
        accentBody = stretchy.svgSpan(group, options);
        accentBody = buildCommon.makeVList({
          positionType: "firstBaseline",
          children: [{
            type: "elem",
            elem: body
          }, {
            type: "elem",
            elem: accentBody,
            wrapperClasses: ["svg-align"],
            wrapperStyle: skew > 0 ? {
              width: "calc(100% - " + makeEm(2 * skew) + ")",
              marginLeft: makeEm(2 * skew)
            } : void 0
          }]
        }, options);
      }
      var accentWrap = buildCommon.makeSpan(["mord", "accent"], [accentBody], options);
      if (supSubGroup) {
        supSubGroup.children[0] = accentWrap;
        supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height);
        supSubGroup.classes[0] = "mord";
        return supSubGroup;
      } else {
        return accentWrap;
      }
    };
    mathmlBuilder$9 = (group, options) => {
      var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode("mo", [makeText(group.label, group.mode)]);
      var node = new mathMLTree.MathNode("mover", [buildGroup2(group.base, options), accentNode]);
      node.setAttribute("accent", "true");
      return node;
    };
    NON_STRETCHY_ACCENT_REGEX = new RegExp(["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring"].map((accent2) => "\\" + accent2).join("|"));
    defineFunction({
      type: "accent",
      names: ["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring", "\\widecheck", "\\widehat", "\\widetilde", "\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftrightarrow", "\\overgroup", "\\overlinesegment", "\\overleftharpoon", "\\overrightharpoon"],
      props: {
        numArgs: 1
      },
      handler: (context, args) => {
        var base = normalizeArgument(args[0]);
        var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);
        var isShifty = !isStretchy || context.funcName === "\\widehat" || context.funcName === "\\widetilde" || context.funcName === "\\widecheck";
        return {
          type: "accent",
          mode: context.parser.mode,
          label: context.funcName,
          isStretchy,
          isShifty,
          base
        };
      },
      htmlBuilder: htmlBuilder$a,
      mathmlBuilder: mathmlBuilder$9
    });
    defineFunction({
      type: "accent",
      names: ["\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", '\\"', "\\c", "\\r", "\\H", "\\v", "\\textcircled"],
      props: {
        numArgs: 1,
        allowedInText: true,
        allowedInMath: true,
        argTypes: ["primitive"]
      },
      handler: (context, args) => {
        var base = args[0];
        var mode = context.parser.mode;
        if (mode === "math") {
          context.parser.settings.reportNonstrict("mathVsTextAccents", "LaTeX's accent " + context.funcName + " works only in text mode");
          mode = "text";
        }
        return {
          type: "accent",
          mode,
          label: context.funcName,
          isStretchy: false,
          isShifty: true,
          base
        };
      },
      htmlBuilder: htmlBuilder$a,
      mathmlBuilder: mathmlBuilder$9
    });
    defineFunction({
      type: "accentUnder",
      names: ["\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\underlinesegment", "\\utilde"],
      props: {
        numArgs: 1
      },
      handler: (_ref, args) => {
        var {
          parser,
          funcName
        } = _ref;
        var base = args[0];
        return {
          type: "accentUnder",
          mode: parser.mode,
          label: funcName,
          base
        };
      },
      htmlBuilder: (group, options) => {
        var innerGroup = buildGroup$1(group.base, options);
        var accentBody = stretchy.svgSpan(group, options);
        var kern = group.label === "\\utilde" ? 0.12 : 0;
        var vlist = buildCommon.makeVList({
          positionType: "top",
          positionData: innerGroup.height,
          children: [{
            type: "elem",
            elem: accentBody,
            wrapperClasses: ["svg-align"]
          }, {
            type: "kern",
            size: kern
          }, {
            type: "elem",
            elem: innerGroup
          }]
        }, options);
        return buildCommon.makeSpan(["mord", "accentunder"], [vlist], options);
      },
      mathmlBuilder: (group, options) => {
        var accentNode = stretchy.mathMLnode(group.label);
        var node = new mathMLTree.MathNode("munder", [buildGroup2(group.base, options), accentNode]);
        node.setAttribute("accentunder", "true");
        return node;
      }
    });
    paddedNode = (group) => {
      var node = new mathMLTree.MathNode("mpadded", group ? [group] : []);
      node.setAttribute("width", "+0.6em");
      node.setAttribute("lspace", "0.3em");
      return node;
    };
    defineFunction({
      type: "xArrow",
      names: [
        "\\xleftarrow",
        "\\xrightarrow",
        "\\xLeftarrow",
        "\\xRightarrow",
        "\\xleftrightarrow",
        "\\xLeftrightarrow",
        "\\xhookleftarrow",
        "\\xhookrightarrow",
        "\\xmapsto",
        "\\xrightharpoondown",
        "\\xrightharpoonup",
        "\\xleftharpoondown",
        "\\xleftharpoonup",
        "\\xrightleftharpoons",
        "\\xleftrightharpoons",
        "\\xlongequal",
        "\\xtwoheadrightarrow",
        "\\xtwoheadleftarrow",
        "\\xtofrom",
        "\\xrightleftarrows",
        "\\xrightequilibrium",
        "\\xleftequilibrium",
        "\\\\cdrightarrow",
        "\\\\cdleftarrow",
        "\\\\cdlongequal"
      ],
      props: {
        numArgs: 1,
        numOptionalArgs: 1
      },
      handler(_ref, args, optArgs) {
        var {
          parser,
          funcName
        } = _ref;
        return {
          type: "xArrow",
          mode: parser.mode,
          label: funcName,
          body: args[0],
          below: optArgs[0]
        };
      },
      htmlBuilder(group, options) {
        var style = options.style;
        var newOptions = options.havingStyle(style.sup());
        var upperGroup = buildCommon.wrapFragment(buildGroup$1(group.body, newOptions, options), options);
        var arrowPrefix = group.label.slice(0, 2) === "\\x" ? "x" : "cd";
        upperGroup.classes.push(arrowPrefix + "-arrow-pad");
        var lowerGroup;
        if (group.below) {
          newOptions = options.havingStyle(style.sub());
          lowerGroup = buildCommon.wrapFragment(buildGroup$1(group.below, newOptions, options), options);
          lowerGroup.classes.push(arrowPrefix + "-arrow-pad");
        }
        var arrowBody = stretchy.svgSpan(group, options);
        var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height;
        var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111;
        if (upperGroup.depth > 0.25 || group.label === "\\xleftequilibrium") {
          upperShift -= upperGroup.depth;
        }
        var vlist;
        if (lowerGroup) {
          var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;
          vlist = buildCommon.makeVList({
            positionType: "individualShift",
            children: [{
              type: "elem",
              elem: upperGroup,
              shift: upperShift
            }, {
              type: "elem",
              elem: arrowBody,
              shift: arrowShift
            }, {
              type: "elem",
              elem: lowerGroup,
              shift: lowerShift
            }]
          }, options);
        } else {
          vlist = buildCommon.makeVList({
            positionType: "individualShift",
            children: [{
              type: "elem",
              elem: upperGroup,
              shift: upperShift
            }, {
              type: "elem",
              elem: arrowBody,
              shift: arrowShift
            }]
          }, options);
        }
        vlist.children[0].children[0].children[1].classes.push("svg-align");
        return buildCommon.makeSpan(["mrel", "x-arrow"], [vlist], options);
      },
      mathmlBuilder(group, options) {
        var arrowNode = stretchy.mathMLnode(group.label);
        arrowNode.setAttribute("minsize", group.label.charAt(0) === "x" ? "1.75em" : "3.0em");
        var node;
        if (group.body) {
          var upperNode = paddedNode(buildGroup2(group.body, options));
          if (group.below) {
            var lowerNode = paddedNode(buildGroup2(group.below, options));
            node = new mathMLTree.MathNode("munderover", [arrowNode, lowerNode, upperNode]);
          } else {
            node = new mathMLTree.MathNode("mover", [arrowNode, upperNode]);
          }
        } else if (group.below) {
          var _lowerNode = paddedNode(buildGroup2(group.below, options));
          node = new mathMLTree.MathNode("munder", [arrowNode, _lowerNode]);
        } else {
          node = paddedNode();
          node = new mathMLTree.MathNode("mover", [arrowNode, node]);
        }
        return node;
      }
    });
    makeSpan2 = buildCommon.makeSpan;
    defineFunction({
      type: "mclass",
      names: ["\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner"],
      props: {
        numArgs: 1,
        primitive: true
      },
      handler(_ref, args) {
        var {
          parser,
          funcName
        } = _ref;
        var body = args[0];
        return {
          type: "mclass",
          mode: parser.mode,
          mclass: "m" + funcName.slice(5),
          body: ordargument(body),
          isCharacterBox: utils.isCharacterBox(body)
        };
      },
      htmlBuilder: htmlBuilder$9,
      mathmlBuilder: mathmlBuilder$8
    });
    binrelClass = (arg) => {
      var atom = arg.type === "ordgroup" && arg.body.length ? arg.body[0] : arg;
      if (atom.type === "atom" && (atom.family === "bin" || atom.family === "rel")) {
        return "m" + atom.family;
      } else {
        return "mord";
      }
    };
    defineFunction({
      type: "mclass",
      names: ["\\@binrel"],
      props: {
        numArgs: 2
      },
      handler(_ref2, args) {
        var {
          parser
        } = _ref2;
        return {
          type: "mclass",
          mode: parser.mode,
          mclass: binrelClass(args[0]),
          body: ordargument(args[1]),
          isCharacterBox: utils.isCharacterBox(args[1])
        };
      }
    });
    defineFunction({
      type: "mclass",
      names: ["\\stackrel", "\\overset", "\\underset"],
      props: {
        numArgs: 2
      },
      handler(_ref3, args) {
        var {
          parser,
          funcName
        } = _ref3;
        var baseArg = args[1];
        var shiftedArg = args[0];
        var mclass;
        if (funcName !== "\\stackrel") {
          mclass = binrelClass(baseArg);
        } else {
          mclass = "mrel";
        }
        var baseOp = {
          type: "op",
          mode: baseArg.mode,
          limits: true,
          alwaysHandleSupSub: true,
          parentIsSupSub: false,
          symbol: false,
          suppressBaseShift: funcName !== "\\stackrel",
          body: ordargument(baseArg)
        };
        var supsub = {
          type: "supsub",
          mode: shiftedArg.mode,
          base: baseOp,
          sup: funcName === "\\underset" ? null : shiftedArg,
          sub: funcName === "\\underset" ? shiftedArg : null
        };
        return {
          type: "mclass",
          mode: parser.mode,
          mclass,
          body: [supsub],
          isCharacterBox: utils.isCharacterBox(supsub)
        };
      },
      htmlBuilder: htmlBuilder$9,
      mathmlBuilder: mathmlBuilder$8
    });
    defineFunction({
      type: "pmb",
      names: ["\\pmb"],
      props: {
        numArgs: 1,
        allowedInText: true
      },
      handler(_ref, args) {
        var {
          parser
        } = _ref;
        return {
          type: "pmb",
          mode: parser.mode,
          mclass: binrelClass(args[0]),
          body: ordargument(args[0])
        };
      },
      htmlBuilder(group, options) {
        var elements = buildExpression$1(group.body, options, true);
        var node = buildCommon.makeSpan([group.mclass], elements, options);
        node.style.textShadow = "0.02em 0.01em 0.04px";
        return node;
      },
      mathmlBuilder(group, style) {
        var inner2 = buildExpression2(group.body, style);
        var node = new mathMLTree.MathNode("mstyle", inner2);
        node.setAttribute("style", "text-shadow: 0.02em 0.01em 0.04px");
        return node;
      }
    });
    cdArrowFunctionName = {
      ">": "\\\\cdrightarrow",
      "<": "\\\\cdleftarrow",
      "=": "\\\\cdlongequal",
      "A": "\\uparrow",
      "V": "\\downarrow",
      "|": "\\Vert",
      ".": "no arrow"
    };
    newCell = () => {
      return {
        type: "styling",
        body: [],
        mode: "math",
        style: "display"
      };
    };
    isStartOfArrow = (node) => {
      return node.type === "textord" && node.text === "@";
    };
    isLabelEnd = (node, endChar) => {
      return (node.type === "mathord" || node.type === "atom") && node.text === endChar;
    };
    defineFunction({
      type: "cdlabel",
      names: ["\\\\cdleft", "\\\\cdright"],
      props: {
        numArgs: 1
      },
      handler(_ref, args) {
        var {
          parser,
          funcName
        } = _ref;
        return {
          type: "cdlabel",
          mode: parser.mode,
          side: funcName.slice(4),
          label: args[0]
        };
      },
      htmlBuilder(group, options) {
        var newOptions = options.havingStyle(options.style.sup());
        var label = buildCommon.wrapFragment(buildGroup$1(group.label, newOptions, options), options);
        label.classes.push("cd-label-" + group.side);
        label.style.bottom = makeEm(0.8 - label.depth);
        label.height = 0;
        label.depth = 0;
        return label;
      },
      mathmlBuilder(group, options) {
        var label = new mathMLTree.MathNode("mrow", [buildGroup2(group.label, options)]);
        label = new mathMLTree.MathNode("mpadded", [label]);
        label.setAttribute("width", "0");
        if (group.side === "left") {
          label.setAttribute("lspace", "-1width");
        }
        label.setAttribute("voffset", "0.7em");
        label = new mathMLTree.MathNode("mstyle", [label]);
        label.setAttribute("displaystyle", "false");
        label.setAttribute("scriptlevel", "1");
        return label;
      }
    });
    defineFunction({
      type: "cdlabelparent",
      names: ["\\\\cdparent"],
      props: {
        numArgs: 1
      },
      handler(_ref2, args) {
        var {
          parser
        } = _ref2;
        return {
          type: "cdlabelparent",
          mode: parser.mode,
          fragment: args[0]
        };
      },
      htmlBuilder(group, options) {
        var parent = buildCommon.wrapFragment(buildGroup$1(group.fragment, options), options);
        parent.classes.push("cd-vert-arrow");
        return parent;
      },
      mathmlBuilder(group, options) {
        return new mathMLTree.MathNode("mrow", [buildGroup2(group.fragment, options)]);
      }
    });
    defineFunction({
      type: "textord",
      names: ["\\@char"],
      props: {
        numArgs: 1,
        allowedInText: true
      },
      handler(_ref, args) {
        var {
          parser
        } = _ref;
        var arg = assertNodeType(args[0], "ordgroup");
        var group = arg.body;
        var number = "";
        for (var i4 = 0; i4 < group.length; i4++) {
          var node = assertNodeType(group[i4], "textord");
          number += node.text;
        }
        var code = parseInt(number);
        var text2;
        if (isNaN(code)) {
          throw new ParseError("\\@char has non-numeric argument " + number);
        } else if (code < 0 || code >= 1114111) {
          throw new ParseError("\\@char with invalid code point " + number);
        } else if (code <= 65535) {
          text2 = String.fromCharCode(code);
        } else {
          code -= 65536;
          text2 = String.fromCharCode((code >> 10) + 55296, (code & 1023) + 56320);
        }
        return {
          type: "textord",
          mode: parser.mode,
          text: text2
        };
      }
    });
    htmlBuilder$8 = (group, options) => {
      var elements = buildExpression$1(group.body, options.withColor(group.color), false);
      return buildCommon.makeFragment(elements);
    };
    mathmlBuilder$7 = (group, options) => {
      var inner2 = buildExpression2(group.body, options.withColor(group.color));
      var node = new mathMLTree.MathNode("mstyle", inner2);
      node.setAttribute("mathcolor", group.color);
      return node;
    };
    defineFunction({
      type: "color",
      names: ["\\textcolor"],
      props: {
        numArgs: 2,
        allowedInText: true,
        argTypes: ["color", "original"]
      },
      handler(_ref, args) {
        var {
          parser
        } = _ref;
        var color = assertNodeType(args[0], "color-token").color;
        var body = args[1];
        return {
          type: "color",
          mode: parser.mode,
          color,
          body: ordargument(body)
        };
      },
      htmlBuilder: htmlBuilder$8,
      mathmlBuilder: mathmlBuilder$7
    });
    defineFunction({
      type: "color",
      names: ["\\color"],
      props: {
        numArgs: 1,
        allowedInText: true,
        argTypes: ["color"]
      },
      handler(_ref2, args) {
        var {
          parser,
          breakOnTokenText
        } = _ref2;
        var color = assertNodeType(args[0], "color-token").color;
        parser.gullet.macros.set("\\current@color", color);
        var body = parser.parseExpression(true, breakOnTokenText);
        return {
          type: "color",
          mode: parser.mode,
          color,
          body
        };
      },
      htmlBuilder: htmlBuilder$8,
      mathmlBuilder: mathmlBuilder$7
    });
    defineFunction({
      type: "cr",
      names: ["\\\\"],
      props: {
        numArgs: 0,
        numOptionalArgs: 0,
        allowedInText: true
      },
      handler(_ref, args, optArgs) {
        var {
          parser
        } = _ref;
        var size = parser.gullet.future().text === "[" ? parser.parseSizeGroup(true) : null;
        var newLine = !parser.settings.displayMode || !parser.settings.useStrictBehavior("newLineInDisplayMode", "In LaTeX, \\\\ or \\newline does nothing in display mode");
        return {
          type: "cr",
          mode: parser.mode,
          newLine,
          size: size && assertNodeType(size, "size").value
        };
      },
      htmlBuilder(group, options) {
        var span = buildCommon.makeSpan(["mspace"], [], options);
        if (group.newLine) {
          span.classes.push("newline");
          if (group.size) {
            span.style.marginTop = makeEm(calculateSize(group.size, options));
          }
        }
        return span;
      },
      mathmlBuilder(group, options) {
        var node = new mathMLTree.MathNode("mspace");
        if (group.newLine) {
          node.setAttribute("linebreak", "newline");
          if (group.size) {
            node.setAttribute("height", makeEm(calculateSize(group.size, options)));
          }
        }
        return node;
      }
    });
    globalMap = {
      "\\global": "\\global",
      "\\long": "\\\\globallong",
      "\\\\globallong": "\\\\globallong",
      "\\def": "\\gdef",
      "\\gdef": "\\gdef",
      "\\edef": "\\xdef",
      "\\xdef": "\\xdef",
      "\\let": "\\\\globallet",
      "\\futurelet": "\\\\globalfuture"
    };
    checkControlSequence = (tok) => {
      var name5 = tok.text;
      if (/^(?:[\\{}$&#^_]|EOF)$/.test(name5)) {
        throw new ParseError("Expected a control sequence", tok);
      }
      return name5;
    };
    getRHS = (parser) => {
      var tok = parser.gullet.popToken();
      if (tok.text === "=") {
        tok = parser.gullet.popToken();
        if (tok.text === " ") {
          tok = parser.gullet.popToken();
        }
      }
      return tok;
    };
    letCommand = (parser, name5, tok, global2) => {
      var macro = parser.gullet.macros.get(tok.text);
      if (macro == null) {
        tok.noexpand = true;
        macro = {
          tokens: [tok],
          numArgs: 0,
          unexpandable: !parser.gullet.isExpandable(tok.text)
        };
      }
      parser.gullet.macros.set(name5, macro, global2);
    };
    defineFunction({
      type: "internal",
      names: [
        "\\global",
        "\\long",
        "\\\\globallong"
      ],
      props: {
        numArgs: 0,
        allowedInText: true
      },
      handler(_ref) {
        var {
          parser,
          funcName
        } = _ref;
        parser.consumeSpaces();
        var token = parser.fetch();
        if (globalMap[token.text]) {
          if (funcName === "\\global" || funcName === "\\\\globallong") {
            token.text = globalMap[token.text];
          }
          return assertNodeType(parser.parseFunction(), "internal");
        }
        throw new ParseError("Invalid token after macro prefix", token);
      }
    });
    defineFunction({
      type: "internal",
      names: ["\\def", "\\gdef", "\\edef", "\\xdef"],
      props: {
        numArgs: 0,
        allowedInText: true,
        primitive: true
      },
      handler(_ref2) {
        var {
          parser,
          funcName
        } = _ref2;
        var tok = parser.gullet.popToken();
        var name5 = tok.text;
        if (/^(?:[\\{}$&#^_]|EOF)$/.test(name5)) {
          throw new ParseError("Expected a control sequence", tok);
        }
        var numArgs = 0;
        var insert;
        var delimiters2 = [[]];
        while (parser.gullet.future().text !== "{") {
          tok = parser.gullet.popToken();
          if (tok.text === "#") {
            if (parser.gullet.future().text === "{") {
              insert = parser.gullet.future();
              delimiters2[numArgs].push("{");
              break;
            }
            tok = parser.gullet.popToken();
            if (!/^[1-9]$/.test(tok.text)) {
              throw new ParseError('Invalid argument number "' + tok.text + '"');
            }
            if (parseInt(tok.text) !== numArgs + 1) {
              throw new ParseError('Argument number "' + tok.text + '" out of order');
            }
            numArgs++;
            delimiters2.push([]);
          } else if (tok.text === "EOF") {
            throw new ParseError("Expected a macro definition");
          } else {
            delimiters2[numArgs].push(tok.text);
          }
        }
        var {
          tokens
        } = parser.gullet.consumeArg();
        if (insert) {
          tokens.unshift(insert);
        }
        if (funcName === "\\edef" || funcName === "\\xdef") {
          tokens = parser.gullet.expandTokens(tokens);
          tokens.reverse();
        }
        parser.gullet.macros.set(name5, {
          tokens,
          numArgs,
          delimiters: delimiters2
        }, funcName === globalMap[funcName]);
        return {
          type: "internal",
          mode: parser.mode
        };
      }
    });
    defineFunction({
      type: "internal",
      names: [
        "\\let",
        "\\\\globallet"
      ],
      props: {
        numArgs: 0,
        allowedInText: true,
        primitive: true
      },
      handler(_ref3) {
        var {
          parser,
          funcName
        } = _ref3;
        var name5 = checkControlSequence(parser.gullet.popToken());
        parser.gullet.consumeSpaces();
        var tok = getRHS(parser);
        letCommand(parser, name5, tok, funcName === "\\\\globallet");
        return {
          type: "internal",
          mode: parser.mode
        };
      }
    });
    defineFunction({
      type: "internal",
      names: [
        "\\futurelet",
        "\\\\globalfuture"
      ],
      props: {
        numArgs: 0,
        allowedInText: true,
        primitive: true
      },
      handler(_ref4) {
        var {
          parser,
          funcName
        } = _ref4;
        var name5 = checkControlSequence(parser.gullet.popToken());
        var middle = parser.gullet.popToken();
        var tok = parser.gullet.popToken();
        letCommand(parser, name5, tok, funcName === "\\\\globalfuture");
        parser.gullet.pushToken(tok);
        parser.gullet.pushToken(middle);
        return {
          type: "internal",
          mode: parser.mode
        };
      }
    });
    getMetrics = function getMetrics2(symbol, font, mode) {
      var replace = symbols.math[symbol] && symbols.math[symbol].replace;
      var metrics = getCharacterMetrics(replace || symbol, font, mode);
      if (!metrics) {
        throw new Error("Unsupported symbol " + symbol + " and font size " + font + ".");
      }
      return metrics;
    };
    styleWrap = function styleWrap2(delim, toStyle, options, classes) {
      var newOptions = options.havingBaseStyle(toStyle);
      var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);
      var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;
      span.height *= delimSizeMultiplier;
      span.depth *= delimSizeMultiplier;
      span.maxFontSize = newOptions.sizeMultiplier;
      return span;
    };
    centerSpan = function centerSpan2(span, options, style) {
      var newOptions = options.havingBaseStyle(style);
      var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;
      span.classes.push("delimcenter");
      span.style.top = makeEm(shift);
      span.height -= shift;
      span.depth += shift;
    };
    makeSmallDelim = function makeSmallDelim2(delim, style, center, options, mode, classes) {
      var text2 = buildCommon.makeSymbol(delim, "Main-Regular", mode, options);
      var span = styleWrap(text2, style, options, classes);
      if (center) {
        centerSpan(span, options, style);
      }
      return span;
    };
    mathrmSize = function mathrmSize2(value, size, mode, options) {
      return buildCommon.makeSymbol(value, "Size" + size + "-Regular", mode, options);
    };
    makeLargeDelim = function makeLargeDelim2(delim, size, center, options, mode, classes) {
      var inner2 = mathrmSize(delim, size, mode, options);
      var span = styleWrap(buildCommon.makeSpan(["delimsizing", "size" + size], [inner2], options), Style$1.TEXT, options, classes);
      if (center) {
        centerSpan(span, options, Style$1.TEXT);
      }
      return span;
    };
    makeGlyphSpan = function makeGlyphSpan2(symbol, font, mode) {
      var sizeClass;
      if (font === "Size1-Regular") {
        sizeClass = "delim-size1";
      } else {
        sizeClass = "delim-size4";
      }
      var corner = buildCommon.makeSpan(["delimsizinginner", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]);
      return {
        type: "elem",
        elem: corner
      };
    };
    makeInner = function makeInner2(ch, height, options) {
      var width = fontMetricsData["Size4-Regular"][ch.charCodeAt(0)] ? fontMetricsData["Size4-Regular"][ch.charCodeAt(0)][4] : fontMetricsData["Size1-Regular"][ch.charCodeAt(0)][4];
      var path2 = new PathNode("inner", innerPath(ch, Math.round(1e3 * height)));
      var svgNode = new SvgNode([path2], {
        "width": makeEm(width),
        "height": makeEm(height),
        "style": "width:" + makeEm(width),
        "viewBox": "0 0 " + 1e3 * width + " " + Math.round(1e3 * height),
        "preserveAspectRatio": "xMinYMin"
      });
      var span = buildCommon.makeSvgSpan([], [svgNode], options);
      span.height = height;
      span.style.height = makeEm(height);
      span.style.width = makeEm(width);
      return {
        type: "elem",
        elem: span
      };
    };
    lapInEms = 8e-3;
    lap = {
      type: "kern",
      size: -1 * lapInEms
    };
    verts = ["|", "\\lvert", "\\rvert", "\\vert"];
    doubleVerts = ["\\|", "\\lVert", "\\rVert", "\\Vert"];
    makeStackedDelim = function makeStackedDelim2(delim, heightTotal, center, options, mode, classes) {
      var top;
      var middle;
      var repeat;
      var bottom;
      var svgLabel = "";
      var viewBoxWidth = 0;
      top = repeat = bottom = delim;
      middle = null;
      var font = "Size1-Regular";
      if (delim === "\\uparrow") {
        repeat = bottom = "\u23D0";
      } else if (delim === "\\Uparrow") {
        repeat = bottom = "\u2016";
      } else if (delim === "\\downarrow") {
        top = repeat = "\u23D0";
      } else if (delim === "\\Downarrow") {
        top = repeat = "\u2016";
      } else if (delim === "\\updownarrow") {
        top = "\\uparrow";
        repeat = "\u23D0";
        bottom = "\\downarrow";
      } else if (delim === "\\Updownarrow") {
        top = "\\Uparrow";
        repeat = "\u2016";
        bottom = "\\Downarrow";
      } else if (utils.contains(verts, delim)) {
        repeat = "\u2223";
        svgLabel = "vert";
        viewBoxWidth = 333;
      } else if (utils.contains(doubleVerts, delim)) {
        repeat = "\u2225";
        svgLabel = "doublevert";
        viewBoxWidth = 556;
      } else if (delim === "[" || delim === "\\lbrack") {
        top = "\u23A1";
        repeat = "\u23A2";
        bottom = "\u23A3";
        font = "Size4-Regular";
        svgLabel = "lbrack";
        viewBoxWidth = 667;
      } else if (delim === "]" || delim === "\\rbrack") {
        top = "\u23A4";
        repeat = "\u23A5";
        bottom = "\u23A6";
        font = "Size4-Regular";
        svgLabel = "rbrack";
        viewBoxWidth = 667;
      } else if (delim === "\\lfloor" || delim === "\u230A") {
        repeat = top = "\u23A2";
        bottom = "\u23A3";
        font = "Size4-Regular";
        svgLabel = "lfloor";
        viewBoxWidth = 667;
      } else if (delim === "\\lceil" || delim === "\u2308") {
        top = "\u23A1";
        repeat = bottom = "\u23A2";
        font = "Size4-Regular";
        svgLabel = "lceil";
        viewBoxWidth = 667;
      } else if (delim === "\\rfloor" || delim === "\u230B") {
        repeat = top = "\u23A5";
        bottom = "\u23A6";
        font = "Size4-Regular";
        svgLabel = "rfloor";
        viewBoxWidth = 667;
      } else if (delim === "\\rceil" || delim === "\u2309") {
        top = "\u23A4";
        repeat = bottom = "\u23A5";
        font = "Size4-Regular";
        svgLabel = "rceil";
        viewBoxWidth = 667;
      } else if (delim === "(" || delim === "\\lparen") {
        top = "\u239B";
        repeat = "\u239C";
        bottom = "\u239D";
        font = "Size4-Regular";
        svgLabel = "lparen";
        viewBoxWidth = 875;
      } else if (delim === ")" || delim === "\\rparen") {
        top = "\u239E";
        repeat = "\u239F";
        bottom = "\u23A0";
        font = "Size4-Regular";
        svgLabel = "rparen";
        viewBoxWidth = 875;
      } else if (delim === "\\{" || delim === "\\lbrace") {
        top = "\u23A7";
        middle = "\u23A8";
        bottom = "\u23A9";
        repeat = "\u23AA";
        font = "Size4-Regular";
      } else if (delim === "\\}" || delim === "\\rbrace") {
        top = "\u23AB";
        middle = "\u23AC";
        bottom = "\u23AD";
        repeat = "\u23AA";
        font = "Size4-Regular";
      } else if (delim === "\\lgroup" || delim === "\u27EE") {
        top = "\u23A7";
        bottom = "\u23A9";
        repeat = "\u23AA";
        font = "Size4-Regular";
      } else if (delim === "\\rgroup" || delim === "\u27EF") {
        top = "\u23AB";
        bottom = "\u23AD";
        repeat = "\u23AA";
        font = "Size4-Regular";
      } else if (delim === "\\lmoustache" || delim === "\u23B0") {
        top = "\u23A7";
        bottom = "\u23AD";
        repeat = "\u23AA";
        font = "Size4-Regular";
      } else if (delim === "\\rmoustache" || delim === "\u23B1") {
        top = "\u23AB";
        bottom = "\u23A9";
        repeat = "\u23AA";
        font = "Size4-Regular";
      }
      var topMetrics = getMetrics(top, font, mode);
      var topHeightTotal = topMetrics.height + topMetrics.depth;
      var repeatMetrics = getMetrics(repeat, font, mode);
      var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;
      var bottomMetrics = getMetrics(bottom, font, mode);
      var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;
      var middleHeightTotal = 0;
      var middleFactor = 1;
      if (middle !== null) {
        var middleMetrics = getMetrics(middle, font, mode);
        middleHeightTotal = middleMetrics.height + middleMetrics.depth;
        middleFactor = 2;
      }
      var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;
      var repeatCount = Math.max(0, Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal)));
      var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal;
      var axisHeight = options.fontMetrics().axisHeight;
      if (center) {
        axisHeight *= options.sizeMultiplier;
      }
      var depth = realHeightTotal / 2 - axisHeight;
      var stack = [];
      if (svgLabel.length > 0) {
        var midHeight = realHeightTotal - topHeightTotal - bottomHeightTotal;
        var viewBoxHeight = Math.round(realHeightTotal * 1e3);
        var pathStr = tallDelim(svgLabel, Math.round(midHeight * 1e3));
        var path2 = new PathNode(svgLabel, pathStr);
        var width = (viewBoxWidth / 1e3).toFixed(3) + "em";
        var height = (viewBoxHeight / 1e3).toFixed(3) + "em";
        var svg = new SvgNode([path2], {
          "width": width,
          "height": height,
          "viewBox": "0 0 " + viewBoxWidth + " " + viewBoxHeight
        });
        var wrapper = buildCommon.makeSvgSpan([], [svg], options);
        wrapper.height = viewBoxHeight / 1e3;
        wrapper.style.width = width;
        wrapper.style.height = height;
        stack.push({
          type: "elem",
          elem: wrapper
        });
      } else {
        stack.push(makeGlyphSpan(bottom, font, mode));
        stack.push(lap);
        if (middle === null) {
          var innerHeight = realHeightTotal - topHeightTotal - bottomHeightTotal + 2 * lapInEms;
          stack.push(makeInner(repeat, innerHeight, options));
        } else {
          var _innerHeight = (realHeightTotal - topHeightTotal - bottomHeightTotal - middleHeightTotal) / 2 + 2 * lapInEms;
          stack.push(makeInner(repeat, _innerHeight, options));
          stack.push(lap);
          stack.push(makeGlyphSpan(middle, font, mode));
          stack.push(lap);
          stack.push(makeInner(repeat, _innerHeight, options));
        }
        stack.push(lap);
        stack.push(makeGlyphSpan(top, font, mode));
      }
      var newOptions = options.havingBaseStyle(Style$1.TEXT);
      var inner2 = buildCommon.makeVList({
        positionType: "bottom",
        positionData: depth,
        children: stack
      }, newOptions);
      return styleWrap(buildCommon.makeSpan(["delimsizing", "mult"], [inner2], newOptions), Style$1.TEXT, options, classes);
    };
    vbPad = 80;
    emPad = 0.08;
    sqrtSvg = function sqrtSvg2(sqrtName, height, viewBoxHeight, extraViniculum, options) {
      var path2 = sqrtPath(sqrtName, extraViniculum, viewBoxHeight);
      var pathNode = new PathNode(sqrtName, path2);
      var svg = new SvgNode([pathNode], {
        "width": "400em",
        "height": makeEm(height),
        "viewBox": "0 0 400000 " + viewBoxHeight,
        "preserveAspectRatio": "xMinYMin slice"
      });
      return buildCommon.makeSvgSpan(["hide-tail"], [svg], options);
    };
    makeSqrtImage = function makeSqrtImage2(height, options) {
      var newOptions = options.havingBaseSizing();
      var delim = traverseSequence("\\surd", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);
      var sizeMultiplier = newOptions.sizeMultiplier;
      var extraViniculum = Math.max(0, options.minRuleThickness - options.fontMetrics().sqrtRuleThickness);
      var span;
      var spanHeight = 0;
      var texHeight = 0;
      var viewBoxHeight = 0;
      var advanceWidth;
      if (delim.type === "small") {
        viewBoxHeight = 1e3 + 1e3 * extraViniculum + vbPad;
        if (height < 1) {
          sizeMultiplier = 1;
        } else if (height < 1.4) {
          sizeMultiplier = 0.7;
        }
        spanHeight = (1 + extraViniculum + emPad) / sizeMultiplier;
        texHeight = (1 + extraViniculum) / sizeMultiplier;
        span = sqrtSvg("sqrtMain", spanHeight, viewBoxHeight, extraViniculum, options);
        span.style.minWidth = "0.853em";
        advanceWidth = 0.833 / sizeMultiplier;
      } else if (delim.type === "large") {
        viewBoxHeight = (1e3 + vbPad) * sizeToMaxHeight[delim.size];
        texHeight = (sizeToMaxHeight[delim.size] + extraViniculum) / sizeMultiplier;
        spanHeight = (sizeToMaxHeight[delim.size] + extraViniculum + emPad) / sizeMultiplier;
        span = sqrtSvg("sqrtSize" + delim.size, spanHeight, viewBoxHeight, extraViniculum, options);
        span.style.minWidth = "1.02em";
        advanceWidth = 1 / sizeMultiplier;
      } else {
        spanHeight = height + extraViniculum + emPad;
        texHeight = height + extraViniculum;
        viewBoxHeight = Math.floor(1e3 * height + extraViniculum) + vbPad;
        span = sqrtSvg("sqrtTall", spanHeight, viewBoxHeight, extraViniculum, options);
        span.style.minWidth = "0.742em";
        advanceWidth = 1.056;
      }
      span.height = texHeight;
      span.style.height = makeEm(spanHeight);
      return {
        span,
        advanceWidth,
        ruleWidth: (options.fontMetrics().sqrtRuleThickness + extraViniculum) * sizeMultiplier
      };
    };
    stackLargeDelimiters = ["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "\u230A", "\u230B", "\\lceil", "\\rceil", "\u2308", "\u2309", "\\surd"];
    stackAlwaysDelimiters = ["\\uparrow", "\\downarrow", "\\updownarrow", "\\Uparrow", "\\Downarrow", "\\Updownarrow", "|", "\\|", "\\vert", "\\Vert", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "\u27EE", "\u27EF", "\\lmoustache", "\\rmoustache", "\u23B0", "\u23B1"];
    stackNeverDelimiters = ["<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt"];
    sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3];
    makeSizedDelim = function makeSizedDelim2(delim, size, options, mode, classes) {
      if (delim === "<" || delim === "\\lt" || delim === "\u27E8") {
        delim = "\\langle";
      } else if (delim === ">" || delim === "\\gt" || delim === "\u27E9") {
        delim = "\\rangle";
      }
      if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {
        return makeLargeDelim(delim, size, false, options, mode, classes);
      } else if (utils.contains(stackAlwaysDelimiters, delim)) {
        return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);
      } else {
        throw new ParseError("Illegal delimiter: '" + delim + "'");
      }
    };
    stackNeverDelimiterSequence = [{
      type: "small",
      style: Style$1.SCRIPTSCRIPT
    }, {
      type: "small",
      style: Style$1.SCRIPT
    }, {
      type: "small",
      style: Style$1.TEXT
    }, {
      type: "large",
      size: 1
    }, {
      type: "large",
      size: 2
    }, {
      type: "large",
      size: 3
    }, {
      type: "large",
      size: 4
    }];
    stackAlwaysDelimiterSequence = [{
      type: "small",
      style: Style$1.SCRIPTSCRIPT
    }, {
      type: "small",
      style: Style$1.SCRIPT
    }, {
      type: "small",
      style: Style$1.TEXT
    }, {
      type: "stack"
    }];
    stackLargeDelimiterSequence = [{
      type: "small",
      style: Style$1.SCRIPTSCRIPT
    }, {
      type: "small",
      style: Style$1.SCRIPT
    }, {
      type: "small",
      style: Style$1.TEXT
    }, {
      type: "large",
      size: 1
    }, {
      type: "large",
      size: 2
    }, {
      type: "large",
      size: 3
    }, {
      type: "large",
      size: 4
    }, {
      type: "stack"
    }];
    delimTypeToFont = function delimTypeToFont2(type) {
      if (type.type === "small") {
        return "Main-Regular";
      } else if (type.type === "large") {
        return "Size" + type.size + "-Regular";
      } else if (type.type === "stack") {
        return "Size4-Regular";
      } else {
        throw new Error("Add support for delim type '" + type.type + "' here.");
      }
    };
    traverseSequence = function traverseSequence2(delim, height, sequence, options) {
      var start = Math.min(2, 3 - options.style.size);
      for (var i4 = start; i4 < sequence.length; i4++) {
        if (sequence[i4].type === "stack") {
          break;
        }
        var metrics = getMetrics(delim, delimTypeToFont(sequence[i4]), "math");
        var heightDepth = metrics.height + metrics.depth;
        if (sequence[i4].type === "small") {
          var newOptions = options.havingBaseStyle(sequence[i4].style);
          heightDepth *= newOptions.sizeMultiplier;
        }
        if (heightDepth > height) {
          return sequence[i4];
        }
      }
      return sequence[sequence.length - 1];
    };
    makeCustomSizedDelim = function makeCustomSizedDelim2(delim, height, center, options, mode, classes) {
      if (delim === "<" || delim === "\\lt" || delim === "\u27E8") {
        delim = "\\langle";
      } else if (delim === ">" || delim === "\\gt" || delim === "\u27E9") {
        delim = "\\rangle";
      }
      var sequence;
      if (utils.contains(stackNeverDelimiters, delim)) {
        sequence = stackNeverDelimiterSequence;
      } else if (utils.contains(stackLargeDelimiters, delim)) {
        sequence = stackLargeDelimiterSequence;
      } else {
        sequence = stackAlwaysDelimiterSequence;
      }
      var delimType = traverseSequence(delim, height, sequence, options);
      if (delimType.type === "small") {
        return makeSmallDelim(delim, delimType.style, center, options, mode, classes);
      } else if (delimType.type === "large") {
        return makeLargeDelim(delim, delimType.size, center, options, mode, classes);
      } else {
        return makeStackedDelim(delim, height, center, options, mode, classes);
      }
    };
    makeLeftRightDelim = function makeLeftRightDelim2(delim, height, depth, options, mode, classes) {
      var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier;
      var delimiterFactor = 901;
      var delimiterExtend = 5 / options.fontMetrics().ptPerEm;
      var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);
      var totalHeight = Math.max(
        maxDistFromAxis / 500 * delimiterFactor,
        2 * maxDistFromAxis - delimiterExtend
      );
      return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);
    };
    delimiter = {
      sqrtImage: makeSqrtImage,
      sizedDelim: makeSizedDelim,
      sizeToMaxHeight,
      customSizedDelim: makeCustomSizedDelim,
      leftRightDelim: makeLeftRightDelim
    };
    delimiterSizes = {
      "\\bigl": {
        mclass: "mopen",
        size: 1
      },
      "\\Bigl": {
        mclass: "mopen",
        size: 2
      },
      "\\biggl": {
        mclass: "mopen",
        size: 3
      },
      "\\Biggl": {
        mclass: "mopen",
        size: 4
      },
      "\\bigr": {
        mclass: "mclose",
        size: 1
      },
      "\\Bigr": {
        mclass: "mclose",
        size: 2
      },
      "\\biggr": {
        mclass: "mclose",
        size: 3
      },
      "\\Biggr": {
        mclass: "mclose",
        size: 4
      },
      "\\bigm": {
        mclass: "mrel",
        size: 1
      },
      "\\Bigm": {
        mclass: "mrel",
        size: 2
      },
      "\\biggm": {
        mclass: "mrel",
        size: 3
      },
      "\\Biggm": {
        mclass: "mrel",
        size: 4
      },
      "\\big": {
        mclass: "mord",
        size: 1
      },
      "\\Big": {
        mclass: "mord",
        size: 2
      },
      "\\bigg": {
        mclass: "mord",
        size: 3
      },
      "\\Bigg": {
        mclass: "mord",
        size: 4
      }
    };
    delimiters = ["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "\u230A", "\u230B", "\\lceil", "\\rceil", "\u2308", "\u2309", "<", ">", "\\langle", "\u27E8", "\\rangle", "\u27E9", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "\u27EE", "\u27EF", "\\lmoustache", "\\rmoustache", "\u23B0", "\u23B1", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "."];
    defineFunction({
      type: "delimsizing",
      names: ["\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg"],
      props: {
        numArgs: 1,
        argTypes: ["primitive"]
      },
      handler: (context, args) => {
        var delim = checkDelimiter(args[0], context);
        return {
          type: "delimsizing",
          mode: context.parser.mode,
          size: delimiterSizes[context.funcName].size,
          mclass: delimiterSizes[context.funcName].mclass,
          delim: delim.text
        };
      },
      htmlBuilder: (group, options) => {
        if (group.delim === ".") {
          return buildCommon.makeSpan([group.mclass]);
        }
        return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);
      },
      mathmlBuilder: (group) => {
        var children = [];
        if (group.delim !== ".") {
          children.push(makeText(group.delim, group.mode));
        }
        var node = new mathMLTree.MathNode("mo", children);
        if (group.mclass === "mopen" || group.mclass === "mclose") {
          node.setAttribute("fence", "true");
        } else {
          node.setAttribute("fence", "false");
        }
        node.setAttribute("stretchy", "true");
        var size = makeEm(delimiter.sizeToMaxHeight[group.size]);
        node.setAttribute("minsize", size);
        node.setAttribute("maxsize", size);
        return node;
      }
    });
    defineFunction({
      type: "leftright-right",
      names: ["\\right"],
      props: {
        numArgs: 1,
        primitive: true
      },
      handler: (context, args) => {
        var color = context.parser.gullet.macros.get("\\current@color");
        if (color && typeof color !== "string") {
          throw new ParseError("\\current@color set to non-string in \\right");
        }
        return {
          type: "leftright-right",
          mode: context.parser.mode,
          delim: checkDelimiter(args[0], context).text,
          color
        };
      }
    });
    defineFunction({
      type: "leftright",
      names: ["\\left"],
      props: {
        numArgs: 1,
        primitive: true
      },
      handler: (context, args) => {
        var delim = checkDelimiter(args[0], context);
        var parser = context.parser;
        ++parser.leftrightDepth;
        var body = parser.parseExpression(false);
        --parser.leftrightDepth;
        parser.expect("\\right", false);
        var right = assertNodeType(parser.parseFunction(), "leftright-right");
        return {
          type: "leftright",
          mode: parser.mode,
          body,
          left: delim.text,
          right: right.delim,
          rightColor: right.color
        };
      },
      htmlBuilder: (group, options) => {
        assertParsed(group);
        var inner2 = buildExpression$1(group.body, options, true, ["mopen", "mclose"]);
        var innerHeight = 0;
        var innerDepth = 0;
        var hadMiddle = false;
        for (var i4 = 0; i4 < inner2.length; i4++) {
          if (inner2[i4].isMiddle) {
            hadMiddle = true;
          } else {
            innerHeight = Math.max(inner2[i4].height, innerHeight);
            innerDepth = Math.max(inner2[i4].depth, innerDepth);
          }
        }
        innerHeight *= options.sizeMultiplier;
        innerDepth *= options.sizeMultiplier;
        var leftDelim;
        if (group.left === ".") {
          leftDelim = makeNullDelimiter(options, ["mopen"]);
        } else {
          leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, ["mopen"]);
        }
        inner2.unshift(leftDelim);
        if (hadMiddle) {
          for (var _i = 1; _i < inner2.length; _i++) {
            var middleDelim = inner2[_i];
            var isMiddle = middleDelim.isMiddle;
            if (isMiddle) {
              inner2[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);
            }
          }
        }
        var rightDelim;
        if (group.right === ".") {
          rightDelim = makeNullDelimiter(options, ["mclose"]);
        } else {
          var colorOptions = group.rightColor ? options.withColor(group.rightColor) : options;
          rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, colorOptions, group.mode, ["mclose"]);
        }
        inner2.push(rightDelim);
        return buildCommon.makeSpan(["minner"], inner2, options);
      },
      mathmlBuilder: (group, options) => {
        assertParsed(group);
        var inner2 = buildExpression2(group.body, options);
        if (group.left !== ".") {
          var leftNode = new mathMLTree.MathNode("mo", [makeText(group.left, group.mode)]);
          leftNode.setAttribute("fence", "true");
          inner2.unshift(leftNode);
        }
        if (group.right !== ".") {
          var rightNode = new mathMLTree.MathNode("mo", [makeText(group.right, group.mode)]);
          rightNode.setAttribute("fence", "true");
          if (group.rightColor) {
            rightNode.setAttribute("mathcolor", group.rightColor);
          }
          inner2.push(rightNode);
        }
        return makeRow(inner2);
      }
    });
    defineFunction({
      type: "middle",
      names: ["\\middle"],
      props: {
        numArgs: 1,
        primitive: true
      },
      handler: (context, args) => {
        var delim = checkDelimiter(args[0], context);
        if (!context.parser.leftrightDepth) {
          throw new ParseError("\\middle without preceding \\left", delim);
        }
        return {
          type: "middle",
          mode: context.parser.mode,
          delim: delim.text
        };
      },
      htmlBuilder: (group, options) => {
        var middleDelim;
        if (group.delim === ".") {
          middleDelim = makeNullDelimiter(options, []);
        } else {
          middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);
          var isMiddle = {
            delim: group.delim,
            options
          };
          middleDelim.isMiddle = isMiddle;
        }
        return middleDelim;
      },
      mathmlBuilder: (group, options) => {
        var textNode = group.delim === "\\vert" || group.delim === "|" ? makeText("|", "text") : makeText(group.delim, group.mode);
        var middleNode = new mathMLTree.MathNode("mo", [textNode]);
        middleNode.setAttribute("fence", "true");
        middleNode.setAttribute("lspace", "0.05em");
        middleNode.setAttribute("rspace", "0.05em");
        return middleNode;
      }
    });
    htmlBuilder$7 = (group, options) => {
      var inner2 = buildCommon.wrapFragment(buildGroup$1(group.body, options), options);
      var label = group.label.slice(1);
      var scale = options.sizeMultiplier;
      var img;
      var imgShift = 0;
      var isSingleChar = utils.isCharacterBox(group.body);
      if (label === "sout") {
        img = buildCommon.makeSpan(["stretchy", "sout"]);
        img.height = options.fontMetrics().defaultRuleThickness / scale;
        imgShift = -0.5 * options.fontMetrics().xHeight;
      } else if (label === "phase") {
        var lineWeight = calculateSize({
          number: 0.6,
          unit: "pt"
        }, options);
        var clearance = calculateSize({
          number: 0.35,
          unit: "ex"
        }, options);
        var newOptions = options.havingBaseSizing();
        scale = scale / newOptions.sizeMultiplier;
        var angleHeight = inner2.height + inner2.depth + lineWeight + clearance;
        inner2.style.paddingLeft = makeEm(angleHeight / 2 + lineWeight);
        var viewBoxHeight = Math.floor(1e3 * angleHeight * scale);
        var path2 = phasePath(viewBoxHeight);
        var svgNode = new SvgNode([new PathNode("phase", path2)], {
          "width": "400em",
          "height": makeEm(viewBoxHeight / 1e3),
          "viewBox": "0 0 400000 " + viewBoxHeight,
          "preserveAspectRatio": "xMinYMin slice"
        });
        img = buildCommon.makeSvgSpan(["hide-tail"], [svgNode], options);
        img.style.height = makeEm(angleHeight);
        imgShift = inner2.depth + lineWeight + clearance;
      } else {
        if (/cancel/.test(label)) {
          if (!isSingleChar) {
            inner2.classes.push("cancel-pad");
          }
        } else if (label === "angl") {
          inner2.classes.push("anglpad");
        } else {
          inner2.classes.push("boxpad");
        }
        var topPad = 0;
        var bottomPad = 0;
        var ruleThickness = 0;
        if (/box/.test(label)) {
          ruleThickness = Math.max(
            options.fontMetrics().fboxrule,
            options.minRuleThickness
          );
          topPad = options.fontMetrics().fboxsep + (label === "colorbox" ? 0 : ruleThickness);
          bottomPad = topPad;
        } else if (label === "angl") {
          ruleThickness = Math.max(options.fontMetrics().defaultRuleThickness, options.minRuleThickness);
          topPad = 4 * ruleThickness;
          bottomPad = Math.max(0, 0.25 - inner2.depth);
        } else {
          topPad = isSingleChar ? 0.2 : 0;
          bottomPad = topPad;
        }
        img = stretchy.encloseSpan(inner2, label, topPad, bottomPad, options);
        if (/fbox|boxed|fcolorbox/.test(label)) {
          img.style.borderStyle = "solid";
          img.style.borderWidth = makeEm(ruleThickness);
        } else if (label === "angl" && ruleThickness !== 0.049) {
          img.style.borderTopWidth = makeEm(ruleThickness);
          img.style.borderRightWidth = makeEm(ruleThickness);
        }
        imgShift = inner2.depth + bottomPad;
        if (group.backgroundColor) {
          img.style.backgroundColor = group.backgroundColor;
          if (group.borderColor) {
            img.style.borderColor = group.borderColor;
          }
        }
      }
      var vlist;
      if (group.backgroundColor) {
        vlist = buildCommon.makeVList({
          positionType: "individualShift",
          children: [
            {
              type: "elem",
              elem: img,
              shift: imgShift
            },
            {
              type: "elem",
              elem: inner2,
              shift: 0
            }
          ]
        }, options);
      } else {
        var classes = /cancel|phase/.test(label) ? ["svg-align"] : [];
        vlist = buildCommon.makeVList({
          positionType: "individualShift",
          children: [
            {
              type: "elem",
              elem: inner2,
              shift: 0
            },
            {
              type: "elem",
              elem: img,
              shift: imgShift,
              wrapperClasses: classes
            }
          ]
        }, options);
      }
      if (/cancel/.test(label)) {
        vlist.height = inner2.height;
        vlist.depth = inner2.depth;
      }
      if (/cancel/.test(label) && !isSingleChar) {
        return buildCommon.makeSpan(["mord", "cancel-lap"], [vlist], options);
      } else {
        return buildCommon.makeSpan(["mord"], [vlist], options);
      }
    };
    mathmlBuilder$6 = (group, options) => {
      var fboxsep = 0;
      var node = new mathMLTree.MathNode(group.label.indexOf("colorbox") > -1 ? "mpadded" : "menclose", [buildGroup2(group.body, options)]);
      switch (group.label) {
        case "\\cancel":
          node.setAttribute("notation", "updiagonalstrike");
          break;
        case "\\bcancel":
          node.setAttribute("notation", "downdiagonalstrike");
          break;
        case "\\phase":
          node.setAttribute("notation", "phasorangle");
          break;
        case "\\sout":
          node.setAttribute("notation", "horizontalstrike");
          break;
        case "\\fbox":
          node.setAttribute("notation", "box");
          break;
        case "\\angl":
          node.setAttribute("notation", "actuarial");
          break;
        case "\\fcolorbox":
        case "\\colorbox":
          fboxsep = options.fontMetrics().fboxsep * options.fontMetrics().ptPerEm;
          node.setAttribute("width", "+" + 2 * fboxsep + "pt");
          node.setAttribute("height", "+" + 2 * fboxsep + "pt");
          node.setAttribute("lspace", fboxsep + "pt");
          node.setAttribute("voffset", fboxsep + "pt");
          if (group.label === "\\fcolorbox") {
            var thk = Math.max(
              options.fontMetrics().fboxrule,
              options.minRuleThickness
            );
            node.setAttribute("style", "border: " + thk + "em solid " + String(group.borderColor));
          }
          break;
        case "\\xcancel":
          node.setAttribute("notation", "updiagonalstrike downdiagonalstrike");
          break;
      }
      if (group.backgroundColor) {
        node.setAttribute("mathbackground", group.backgroundColor);
      }
      return node;
    };
    defineFunction({
      type: "enclose",
      names: ["\\colorbox"],
      props: {
        numArgs: 2,
        allowedInText: true,
        argTypes: ["color", "text"]
      },
      handler(_ref, args, optArgs) {
        var {
          parser,
          funcName
        } = _ref;
        var color = assertNodeType(args[0], "color-token").color;
        var body = args[1];
        return {
          type: "enclose",
          mode: parser.mode,
          label: funcName,
          backgroundColor: color,
          body
        };
      },
      htmlBuilder: htmlBuilder$7,
      mathmlBuilder: mathmlBuilder$6
    });
    defineFunction({
      type: "enclose",
      names: ["\\fcolorbox"],
      props: {
        numArgs: 3,
        allowedInText: true,
        argTypes: ["color", "color", "text"]
      },
      handler(_ref2, args, optArgs) {
        var {
          parser,
          funcName
        } = _ref2;
        var borderColor = assertNodeType(args[0], "color-token").color;
        var backgroundColor = assertNodeType(args[1], "color-token").color;
        var body = args[2];
        return {
          type: "enclose",
          mode: parser.mode,
          label: funcName,
          backgroundColor,
          borderColor,
          body
        };
      },
      htmlBuilder: htmlBuilder$7,
      mathmlBuilder: mathmlBuilder$6
    });
    defineFunction({
      type: "enclose",
      names: ["\\fbox"],
      props: {
        numArgs: 1,
        argTypes: ["hbox"],
        allowedInText: true
      },
      handler(_ref3, args) {
        var {
          parser
        } = _ref3;
        return {
          type: "enclose",
          mode: parser.mode,
          label: "\\fbox",
          body: args[0]
        };
      }
    });
    defineFunction({
      type: "enclose",
      names: ["\\cancel", "\\bcancel", "\\xcancel", "\\sout", "\\phase"],
      props: {
        numArgs: 1
      },
      handler(_ref4, args) {
        var {
          parser,
          funcName
        } = _ref4;
        var body = args[0];
        return {
          type: "enclose",
          mode: parser.mode,
          label: funcName,
          body
        };
      },
      htmlBuilder: htmlBuilder$7,
      mathmlBuilder: mathmlBuilder$6
    });
    defineFunction({
      type: "enclose",
      names: ["\\angl"],
      props: {
        numArgs: 1,
        argTypes: ["hbox"],
        allowedInText: false
      },
      handler(_ref5, args) {
        var {
          parser
        } = _ref5;
        return {
          type: "enclose",
          mode: parser.mode,
          label: "\\angl",
          body: args[0]
        };
      }
    });
    _environments = {};
    _macros = {};
    validateAmsEnvironmentContext = (context) => {
      var settings = context.parser.settings;
      if (!settings.displayMode) {
        throw new ParseError("{" + context.envName + "} can be used only in display mode.");
      }
    };
    htmlBuilder$6 = function htmlBuilder(group, options) {
      var r6;
      var c4;
      var nr2 = group.body.length;
      var hLinesBeforeRow = group.hLinesBeforeRow;
      var nc = 0;
      var body = new Array(nr2);
      var hlines = [];
      var ruleThickness = Math.max(
        options.fontMetrics().arrayRuleWidth,
        options.minRuleThickness
      );
      var pt3 = 1 / options.fontMetrics().ptPerEm;
      var arraycolsep = 5 * pt3;
      if (group.colSeparationType && group.colSeparationType === "small") {
        var localMultiplier = options.havingStyle(Style$1.SCRIPT).sizeMultiplier;
        arraycolsep = 0.2778 * (localMultiplier / options.sizeMultiplier);
      }
      var baselineskip = group.colSeparationType === "CD" ? calculateSize({
        number: 3,
        unit: "ex"
      }, options) : 12 * pt3;
      var jot = 3 * pt3;
      var arrayskip = group.arraystretch * baselineskip;
      var arstrutHeight = 0.7 * arrayskip;
      var arstrutDepth = 0.3 * arrayskip;
      var totalHeight = 0;
      function setHLinePos(hlinesInGap) {
        for (var i4 = 0; i4 < hlinesInGap.length; ++i4) {
          if (i4 > 0) {
            totalHeight += 0.25;
          }
          hlines.push({
            pos: totalHeight,
            isDashed: hlinesInGap[i4]
          });
        }
      }
      setHLinePos(hLinesBeforeRow[0]);
      for (r6 = 0; r6 < group.body.length; ++r6) {
        var inrow = group.body[r6];
        var height = arstrutHeight;
        var depth = arstrutDepth;
        if (nc < inrow.length) {
          nc = inrow.length;
        }
        var outrow = new Array(inrow.length);
        for (c4 = 0; c4 < inrow.length; ++c4) {
          var elt = buildGroup$1(inrow[c4], options);
          if (depth < elt.depth) {
            depth = elt.depth;
          }
          if (height < elt.height) {
            height = elt.height;
          }
          outrow[c4] = elt;
        }
        var rowGap = group.rowGaps[r6];
        var gap = 0;
        if (rowGap) {
          gap = calculateSize(rowGap, options);
          if (gap > 0) {
            gap += arstrutDepth;
            if (depth < gap) {
              depth = gap;
            }
            gap = 0;
          }
        }
        if (group.addJot) {
          depth += jot;
        }
        outrow.height = height;
        outrow.depth = depth;
        totalHeight += height;
        outrow.pos = totalHeight;
        totalHeight += depth + gap;
        body[r6] = outrow;
        setHLinePos(hLinesBeforeRow[r6 + 1]);
      }
      var offset = totalHeight / 2 + options.fontMetrics().axisHeight;
      var colDescriptions = group.cols || [];
      var cols = [];
      var colSep;
      var colDescrNum;
      var tagSpans = [];
      if (group.tags && group.tags.some((tag2) => tag2)) {
        for (r6 = 0; r6 < nr2; ++r6) {
          var rw = body[r6];
          var shift = rw.pos - offset;
          var tag = group.tags[r6];
          var tagSpan = void 0;
          if (tag === true) {
            tagSpan = buildCommon.makeSpan(["eqn-num"], [], options);
          } else if (tag === false) {
            tagSpan = buildCommon.makeSpan([], [], options);
          } else {
            tagSpan = buildCommon.makeSpan([], buildExpression$1(tag, options, true), options);
          }
          tagSpan.depth = rw.depth;
          tagSpan.height = rw.height;
          tagSpans.push({
            type: "elem",
            elem: tagSpan,
            shift
          });
        }
      }
      for (c4 = 0, colDescrNum = 0; c4 < nc || colDescrNum < colDescriptions.length; ++c4, ++colDescrNum) {
        var colDescr = colDescriptions[colDescrNum] || {};
        var firstSeparator = true;
        while (colDescr.type === "separator") {
          if (!firstSeparator) {
            colSep = buildCommon.makeSpan(["arraycolsep"], []);
            colSep.style.width = makeEm(options.fontMetrics().doubleRuleSep);
            cols.push(colSep);
          }
          if (colDescr.separator === "|" || colDescr.separator === ":") {
            var lineType = colDescr.separator === "|" ? "solid" : "dashed";
            var separator = buildCommon.makeSpan(["vertical-separator"], [], options);
            separator.style.height = makeEm(totalHeight);
            separator.style.borderRightWidth = makeEm(ruleThickness);
            separator.style.borderRightStyle = lineType;
            separator.style.margin = "0 " + makeEm(-ruleThickness / 2);
            var _shift = totalHeight - offset;
            if (_shift) {
              separator.style.verticalAlign = makeEm(-_shift);
            }
            cols.push(separator);
          } else {
            throw new ParseError("Invalid separator type: " + colDescr.separator);
          }
          colDescrNum++;
          colDescr = colDescriptions[colDescrNum] || {};
          firstSeparator = false;
        }
        if (c4 >= nc) {
          continue;
        }
        var sepwidth = void 0;
        if (c4 > 0 || group.hskipBeforeAndAfter) {
          sepwidth = utils.deflt(colDescr.pregap, arraycolsep);
          if (sepwidth !== 0) {
            colSep = buildCommon.makeSpan(["arraycolsep"], []);
            colSep.style.width = makeEm(sepwidth);
            cols.push(colSep);
          }
        }
        var col = [];
        for (r6 = 0; r6 < nr2; ++r6) {
          var row = body[r6];
          var elem = row[c4];
          if (!elem) {
            continue;
          }
          var _shift2 = row.pos - offset;
          elem.depth = row.depth;
          elem.height = row.height;
          col.push({
            type: "elem",
            elem,
            shift: _shift2
          });
        }
        col = buildCommon.makeVList({
          positionType: "individualShift",
          children: col
        }, options);
        col = buildCommon.makeSpan(["col-align-" + (colDescr.align || "c")], [col]);
        cols.push(col);
        if (c4 < nc - 1 || group.hskipBeforeAndAfter) {
          sepwidth = utils.deflt(colDescr.postgap, arraycolsep);
          if (sepwidth !== 0) {
            colSep = buildCommon.makeSpan(["arraycolsep"], []);
            colSep.style.width = makeEm(sepwidth);
            cols.push(colSep);
          }
        }
      }
      body = buildCommon.makeSpan(["mtable"], cols);
      if (hlines.length > 0) {
        var line = buildCommon.makeLineSpan("hline", options, ruleThickness);
        var dashes = buildCommon.makeLineSpan("hdashline", options, ruleThickness);
        var vListElems = [{
          type: "elem",
          elem: body,
          shift: 0
        }];
        while (hlines.length > 0) {
          var hline = hlines.pop();
          var lineShift = hline.pos - offset;
          if (hline.isDashed) {
            vListElems.push({
              type: "elem",
              elem: dashes,
              shift: lineShift
            });
          } else {
            vListElems.push({
              type: "elem",
              elem: line,
              shift: lineShift
            });
          }
        }
        body = buildCommon.makeVList({
          positionType: "individualShift",
          children: vListElems
        }, options);
      }
      if (tagSpans.length === 0) {
        return buildCommon.makeSpan(["mord"], [body], options);
      } else {
        var eqnNumCol = buildCommon.makeVList({
          positionType: "individualShift",
          children: tagSpans
        }, options);
        eqnNumCol = buildCommon.makeSpan(["tag"], [eqnNumCol], options);
        return buildCommon.makeFragment([body, eqnNumCol]);
      }
    };
    alignMap = {
      c: "center ",
      l: "left ",
      r: "right "
    };
    mathmlBuilder$5 = function mathmlBuilder(group, options) {
      var tbl = [];
      var glue = new mathMLTree.MathNode("mtd", [], ["mtr-glue"]);
      var tag = new mathMLTree.MathNode("mtd", [], ["mml-eqn-num"]);
      for (var i4 = 0; i4 < group.body.length; i4++) {
        var rw = group.body[i4];
        var row = [];
        for (var j3 = 0; j3 < rw.length; j3++) {
          row.push(new mathMLTree.MathNode("mtd", [buildGroup2(rw[j3], options)]));
        }
        if (group.tags && group.tags[i4]) {
          row.unshift(glue);
          row.push(glue);
          if (group.leqno) {
            row.unshift(tag);
          } else {
            row.push(tag);
          }
        }
        tbl.push(new mathMLTree.MathNode("mtr", row));
      }
      var table = new mathMLTree.MathNode("mtable", tbl);
      var gap = group.arraystretch === 0.5 ? 0.1 : 0.16 + group.arraystretch - 1 + (group.addJot ? 0.09 : 0);
      table.setAttribute("rowspacing", makeEm(gap));
      var menclose = "";
      var align = "";
      if (group.cols && group.cols.length > 0) {
        var cols = group.cols;
        var columnLines = "";
        var prevTypeWasAlign = false;
        var iStart = 0;
        var iEnd = cols.length;
        if (cols[0].type === "separator") {
          menclose += "top ";
          iStart = 1;
        }
        if (cols[cols.length - 1].type === "separator") {
          menclose += "bottom ";
          iEnd -= 1;
        }
        for (var _i = iStart; _i < iEnd; _i++) {
          if (cols[_i].type === "align") {
            align += alignMap[cols[_i].align];
            if (prevTypeWasAlign) {
              columnLines += "none ";
            }
            prevTypeWasAlign = true;
          } else if (cols[_i].type === "separator") {
            if (prevTypeWasAlign) {
              columnLines += cols[_i].separator === "|" ? "solid " : "dashed ";
              prevTypeWasAlign = false;
            }
          }
        }
        table.setAttribute("columnalign", align.trim());
        if (/[sd]/.test(columnLines)) {
          table.setAttribute("columnlines", columnLines.trim());
        }
      }
      if (group.colSeparationType === "align") {
        var _cols = group.cols || [];
        var spacing2 = "";
        for (var _i2 = 1; _i2 < _cols.length; _i2++) {
          spacing2 += _i2 % 2 ? "0em " : "1em ";
        }
        table.setAttribute("columnspacing", spacing2.trim());
      } else if (group.colSeparationType === "alignat" || group.colSeparationType === "gather") {
        table.setAttribute("columnspacing", "0em");
      } else if (group.colSeparationType === "small") {
        table.setAttribute("columnspacing", "0.2778em");
      } else if (group.colSeparationType === "CD") {
        table.setAttribute("columnspacing", "0.5em");
      } else {
        table.setAttribute("columnspacing", "1em");
      }
      var rowLines = "";
      var hlines = group.hLinesBeforeRow;
      menclose += hlines[0].length > 0 ? "left " : "";
      menclose += hlines[hlines.length - 1].length > 0 ? "right " : "";
      for (var _i3 = 1; _i3 < hlines.length - 1; _i3++) {
        rowLines += hlines[_i3].length === 0 ? "none " : hlines[_i3][0] ? "dashed " : "solid ";
      }
      if (/[sd]/.test(rowLines)) {
        table.setAttribute("rowlines", rowLines.trim());
      }
      if (menclose !== "") {
        table = new mathMLTree.MathNode("menclose", [table]);
        table.setAttribute("notation", menclose.trim());
      }
      if (group.arraystretch && group.arraystretch < 1) {
        table = new mathMLTree.MathNode("mstyle", [table]);
        table.setAttribute("scriptlevel", "1");
      }
      return table;
    };
    alignedHandler = function alignedHandler2(context, args) {
      if (context.envName.indexOf("ed") === -1) {
        validateAmsEnvironmentContext(context);
      }
      var cols = [];
      var separationType = context.envName.indexOf("at") > -1 ? "alignat" : "align";
      var isSplit = context.envName === "split";
      var res = parseArray(context.parser, {
        cols,
        addJot: true,
        autoTag: isSplit ? void 0 : getAutoTag(context.envName),
        emptySingleRow: true,
        colSeparationType: separationType,
        maxNumCols: isSplit ? 2 : void 0,
        leqno: context.parser.settings.leqno
      }, "display");
      var numMaths;
      var numCols = 0;
      var emptyGroup = {
        type: "ordgroup",
        mode: context.mode,
        body: []
      };
      if (args[0] && args[0].type === "ordgroup") {
        var arg0 = "";
        for (var i4 = 0; i4 < args[0].body.length; i4++) {
          var textord2 = assertNodeType(args[0].body[i4], "textord");
          arg0 += textord2.text;
        }
        numMaths = Number(arg0);
        numCols = numMaths * 2;
      }
      var isAligned = !numCols;
      res.body.forEach(function(row) {
        for (var _i4 = 1; _i4 < row.length; _i4 += 2) {
          var styling = assertNodeType(row[_i4], "styling");
          var ordgroup = assertNodeType(styling.body[0], "ordgroup");
          ordgroup.body.unshift(emptyGroup);
        }
        if (!isAligned) {
          var curMaths = row.length / 2;
          if (numMaths < curMaths) {
            throw new ParseError("Too many math in a row: " + ("expected " + numMaths + ", but got " + curMaths), row[0]);
          }
        } else if (numCols < row.length) {
          numCols = row.length;
        }
      });
      for (var _i5 = 0; _i5 < numCols; ++_i5) {
        var align = "r";
        var pregap = 0;
        if (_i5 % 2 === 1) {
          align = "l";
        } else if (_i5 > 0 && isAligned) {
          pregap = 1;
        }
        cols[_i5] = {
          type: "align",
          align,
          pregap,
          postgap: 0
        };
      }
      res.colSeparationType = isAligned ? "align" : "alignat";
      return res;
    };
    defineEnvironment({
      type: "array",
      names: ["array", "darray"],
      props: {
        numArgs: 1
      },
      handler(context, args) {
        var symNode = checkSymbolNodeType(args[0]);
        var colalign = symNode ? [args[0]] : assertNodeType(args[0], "ordgroup").body;
        var cols = colalign.map(function(nde) {
          var node = assertSymbolNodeType(nde);
          var ca = node.text;
          if ("lcr".indexOf(ca) !== -1) {
            return {
              type: "align",
              align: ca
            };
          } else if (ca === "|") {
            return {
              type: "separator",
              separator: "|"
            };
          } else if (ca === ":") {
            return {
              type: "separator",
              separator: ":"
            };
          }
          throw new ParseError("Unknown column alignment: " + ca, nde);
        });
        var res = {
          cols,
          hskipBeforeAndAfter: true,
          maxNumCols: cols.length
        };
        return parseArray(context.parser, res, dCellStyle(context.envName));
      },
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix", "matrix*", "pmatrix*", "bmatrix*", "Bmatrix*", "vmatrix*", "Vmatrix*"],
      props: {
        numArgs: 0
      },
      handler(context) {
        var delimiters2 = {
          "matrix": null,
          "pmatrix": ["(", ")"],
          "bmatrix": ["[", "]"],
          "Bmatrix": ["\\{", "\\}"],
          "vmatrix": ["|", "|"],
          "Vmatrix": ["\\Vert", "\\Vert"]
        }[context.envName.replace("*", "")];
        var colAlign = "c";
        var payload = {
          hskipBeforeAndAfter: false,
          cols: [{
            type: "align",
            align: colAlign
          }]
        };
        if (context.envName.charAt(context.envName.length - 1) === "*") {
          var parser = context.parser;
          parser.consumeSpaces();
          if (parser.fetch().text === "[") {
            parser.consume();
            parser.consumeSpaces();
            colAlign = parser.fetch().text;
            if ("lcr".indexOf(colAlign) === -1) {
              throw new ParseError("Expected l or c or r", parser.nextToken);
            }
            parser.consume();
            parser.consumeSpaces();
            parser.expect("]");
            parser.consume();
            payload.cols = [{
              type: "align",
              align: colAlign
            }];
          }
        }
        var res = parseArray(context.parser, payload, dCellStyle(context.envName));
        var numCols = Math.max(0, ...res.body.map((row) => row.length));
        res.cols = new Array(numCols).fill({
          type: "align",
          align: colAlign
        });
        return delimiters2 ? {
          type: "leftright",
          mode: context.mode,
          body: [res],
          left: delimiters2[0],
          right: delimiters2[1],
          rightColor: void 0
        } : res;
      },
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["smallmatrix"],
      props: {
        numArgs: 0
      },
      handler(context) {
        var payload = {
          arraystretch: 0.5
        };
        var res = parseArray(context.parser, payload, "script");
        res.colSeparationType = "small";
        return res;
      },
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["subarray"],
      props: {
        numArgs: 1
      },
      handler(context, args) {
        var symNode = checkSymbolNodeType(args[0]);
        var colalign = symNode ? [args[0]] : assertNodeType(args[0], "ordgroup").body;
        var cols = colalign.map(function(nde) {
          var node = assertSymbolNodeType(nde);
          var ca = node.text;
          if ("lc".indexOf(ca) !== -1) {
            return {
              type: "align",
              align: ca
            };
          }
          throw new ParseError("Unknown column alignment: " + ca, nde);
        });
        if (cols.length > 1) {
          throw new ParseError("{subarray} can contain only one column");
        }
        var res = {
          cols,
          hskipBeforeAndAfter: false,
          arraystretch: 0.5
        };
        res = parseArray(context.parser, res, "script");
        if (res.body.length > 0 && res.body[0].length > 1) {
          throw new ParseError("{subarray} can contain only one column");
        }
        return res;
      },
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["cases", "dcases", "rcases", "drcases"],
      props: {
        numArgs: 0
      },
      handler(context) {
        var payload = {
          arraystretch: 1.2,
          cols: [{
            type: "align",
            align: "l",
            pregap: 0,
            postgap: 1
          }, {
            type: "align",
            align: "l",
            pregap: 0,
            postgap: 0
          }]
        };
        var res = parseArray(context.parser, payload, dCellStyle(context.envName));
        return {
          type: "leftright",
          mode: context.mode,
          body: [res],
          left: context.envName.indexOf("r") > -1 ? "." : "\\{",
          right: context.envName.indexOf("r") > -1 ? "\\}" : ".",
          rightColor: void 0
        };
      },
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["align", "align*", "aligned", "split"],
      props: {
        numArgs: 0
      },
      handler: alignedHandler,
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["gathered", "gather", "gather*"],
      props: {
        numArgs: 0
      },
      handler(context) {
        if (utils.contains(["gather", "gather*"], context.envName)) {
          validateAmsEnvironmentContext(context);
        }
        var res = {
          cols: [{
            type: "align",
            align: "c"
          }],
          addJot: true,
          colSeparationType: "gather",
          autoTag: getAutoTag(context.envName),
          emptySingleRow: true,
          leqno: context.parser.settings.leqno
        };
        return parseArray(context.parser, res, "display");
      },
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["alignat", "alignat*", "alignedat"],
      props: {
        numArgs: 1
      },
      handler: alignedHandler,
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["equation", "equation*"],
      props: {
        numArgs: 0
      },
      handler(context) {
        validateAmsEnvironmentContext(context);
        var res = {
          autoTag: getAutoTag(context.envName),
          emptySingleRow: true,
          singleRow: true,
          maxNumCols: 1,
          leqno: context.parser.settings.leqno
        };
        return parseArray(context.parser, res, "display");
      },
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineEnvironment({
      type: "array",
      names: ["CD"],
      props: {
        numArgs: 0
      },
      handler(context) {
        validateAmsEnvironmentContext(context);
        return parseCD(context.parser);
      },
      htmlBuilder: htmlBuilder$6,
      mathmlBuilder: mathmlBuilder$5
    });
    defineMacro("\\nonumber", "\\gdef\\@eqnsw{0}");
    defineMacro("\\notag", "\\nonumber");
    defineFunction({
      type: "text",
      names: ["\\hline", "\\hdashline"],
      props: {
        numArgs: 0,
        allowedInText: true,
        allowedInMath: true
      },
      handler(context, args) {
        throw new ParseError(context.funcName + " valid only within array environment");
      }
    });
    environments = _environments;
    defineFunction({
      type: "environment",
      names: ["\\begin", "\\end"],
      props: {
        numArgs: 1,
        argTypes: ["text"]
      },
      handler(_ref, args) {
        var {
          parser,
          funcName
        } = _ref;
        var nameGroup = args[0];
        if (nameGroup.type !== "ordgroup") {
          throw new ParseError("Invalid environment name", nameGroup);
        }
        var envName = "";
        for (var i4 = 0; i4 < nameGroup.body.length; ++i4) {
          envName += assertNodeType(nameGroup.body[i4], "textord").text;
        }
        if (funcName === "\\begin") {
          if (!environments.hasOwnProperty(envName)) {
            throw new ParseError("No such environment: " + envName, nameGroup);
          }
          var env = environments[envName];
          var {
            args: _args,
            optArgs
          } = parser.parseArguments("\\begin{" + envName + "}", env);
          var context = {
            mode: parser.mode,
            envName,
            parser
          };
          var result = env.handler(context, _args, optArgs);
          parser.expect("\\end", false);
          var endNameToken = parser.nextToken;
          var end = assertNodeType(parser.parseFunction(), "environment");
          if (end.name !== envName) {
            throw new ParseError("Mismatch: \\begin{" + envName + "} matched by \\end{" + end.name + "}", endNameToken);
          }
          return result;
        }
        return {
          type: "environment",
          mode: parser.mode,
          name: envName,
          nameGroup
        };
      }
    });
    htmlBuilder$5 = (group, options) => {
      var font = group.font;
      var newOptions = options.withFont(font);
      return buildGroup$1(group.body, newOptions);
    };
    mathmlBuilder$4 = (group, options) => {
      var font = group.font;
      var newOptions = options.withFont(font);
      return buildGroup2(group.body, newOptions);
    };
    fontAliases = {
      "\\Bbb": "\\mathbb",
      "\\bold": "\\mathbf",
      "\\frak": "\\mathfrak",
      "\\bm": "\\boldsymbol"
    };
    defineFunction({
      type: "font",
      names: [
        "\\mathrm",
        "\\mathit",
        "\\mathbf",
        "\\mathnormal",
        "\\mathbb",
        "\\mathcal",
        "\\mathfrak",
        "\\mathscr",
        "\\mathsf",
        "\\mathtt",
        "\\Bbb",
        "\\bold",
        "\\frak"
      ],
      props: {
        numArgs: 1,
        allowedInArgument: true
      },
      handler: (_ref, args) => {
        var {
          parser,
          funcName
        } = _ref;
        var body = normalizeArgument(args[0]);
        var func = funcName;
        if (func in fontAliases) {
          func = fontAliases[func];
        }
        return {
          type: "font",
          mode: parser.mode,
          font: func.slice(1),
          body
        };
      },
      htmlBuilder: htmlBuilder$5,
      mathmlBuilder: mathmlBuilder$4
    });
    defineFunction({
      type: "mclass",
      names: ["\\boldsymbol", "\\bm"],
      props: {
        numArgs: 1
      },
      handler: (_ref2, args) => {
        var {
          parser
        } = _ref2;
        var body = args[0];
        var isCharacterBox3 = utils.isCharacterBox(body);
        return {
          type: "mclass",
          mode: parser.mode,
          mclass: binrelClass(body),
          body: [{
            type: "font",
            mode: parser.mode,
            font: "boldsymbol",
            body
          }],
          isCharacterBox: isCharacterBox3
        };
      }
    });
    defineFunction({
      type: "font",
      names: ["\\rm", "\\sf", "\\tt", "\\bf", "\\it", "\\cal"],
      props: {
        numArgs: 0,
        allowedInText: true
      },
      handler: (_ref3, args) => {
        var {
          parser,
          funcName,
          breakOnTokenText
        } = _ref3;
        var {
          mode
        } = parser;
        var body = parser.parseExpression(true, breakOnTokenText);
        var style = "math" + funcName.slice(1);
        return {
          type: "font",
          mode,
          font: style,
          body: {
            type: "ordgroup",
            mode: parser.mode,
            body
          }
        };
      },
      htmlBuilder: htmlBuilder$5,
      mathmlBuilder: mathmlBuilder$4
    });
    adjustStyle = (size, originalStyle) => {
      var style = originalStyle;
      if (size === "display") {
        style = style.id >= Style$1.SCRIPT.id ? style.text() : Style$1.DISPLAY;
      } else if (size === "text" && style.size === Style$1.DISPLAY.size) {
        style = Style$1.TEXT;
      } else if (size === "script") {
        style = Style$1.SCRIPT;
      } else if (size === "scriptscript") {
        style = Style$1.SCRIPTSCRIPT;
      }
      return style;
    };
    htmlBuilder$4 = (group, options) => {
      var style = adjustStyle(group.size, options.style);
      var nstyle = style.fracNum();
      var dstyle = style.fracDen();
      var newOptions;
      newOptions = options.havingStyle(nstyle);
      var numerm = buildGroup$1(group.numer, newOptions, options);
      if (group.continued) {
        var hStrut = 8.5 / options.fontMetrics().ptPerEm;
        var dStrut = 3.5 / options.fontMetrics().ptPerEm;
        numerm.height = numerm.height < hStrut ? hStrut : numerm.height;
        numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;
      }
      newOptions = options.havingStyle(dstyle);
      var denomm = buildGroup$1(group.denom, newOptions, options);
      var rule;
      var ruleWidth;
      var ruleSpacing;
      if (group.hasBarLine) {
        if (group.barSize) {
          ruleWidth = calculateSize(group.barSize, options);
          rule = buildCommon.makeLineSpan("frac-line", options, ruleWidth);
        } else {
          rule = buildCommon.makeLineSpan("frac-line", options);
        }
        ruleWidth = rule.height;
        ruleSpacing = rule.height;
      } else {
        rule = null;
        ruleWidth = 0;
        ruleSpacing = options.fontMetrics().defaultRuleThickness;
      }
      var numShift;
      var clearance;
      var denomShift;
      if (style.size === Style$1.DISPLAY.size || group.size === "display") {
        numShift = options.fontMetrics().num1;
        if (ruleWidth > 0) {
          clearance = 3 * ruleSpacing;
        } else {
          clearance = 7 * ruleSpacing;
        }
        denomShift = options.fontMetrics().denom1;
      } else {
        if (ruleWidth > 0) {
          numShift = options.fontMetrics().num2;
          clearance = ruleSpacing;
        } else {
          numShift = options.fontMetrics().num3;
          clearance = 3 * ruleSpacing;
        }
        denomShift = options.fontMetrics().denom2;
      }
      var frac;
      if (!rule) {
        var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);
        if (candidateClearance < clearance) {
          numShift += 0.5 * (clearance - candidateClearance);
          denomShift += 0.5 * (clearance - candidateClearance);
        }
        frac = buildCommon.makeVList({
          positionType: "individualShift",
          children: [{
            type: "elem",
            elem: denomm,
            shift: denomShift
          }, {
            type: "elem",
            elem: numerm,
            shift: -numShift
          }]
        }, options);
      } else {
        var axisHeight = options.fontMetrics().axisHeight;
        if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {
          numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));
        }
        if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {
          denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));
        }
        var midShift = -(axisHeight - 0.5 * ruleWidth);
        frac = buildCommon.makeVList({
          positionType: "individualShift",
          children: [{
            type: "elem",
            elem: denomm,
            shift: denomShift
          }, {
            type: "elem",
            elem: rule,
            shift: midShift
          }, {
            type: "elem",
            elem: numerm,
            shift: -numShift
          }]
        }, options);
      }
      newOptions = options.havingStyle(style);
      frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;
      frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier;
      var delimSize;
      if (style.size === Style$1.DISPLAY.size) {
        delimSize = options.fontMetrics().delim1;
      } else if (style.size === Style$1.SCRIPTSCRIPT.size) {
        delimSize = options.havingStyle(Style$1.SCRIPT).fontMetrics().delim2;
      } else {
        delimSize = options.fontMetrics().delim2;
      }
      var leftDelim;
      var rightDelim;
      if (group.leftDelim == null) {
        leftDelim = makeNullDelimiter(options, ["mopen"]);
      } else {
        leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, ["mopen"]);
      }
      if (group.continued) {
        rightDelim = buildCommon.makeSpan([]);
      } else if (group.rightDelim == null) {
        rightDelim = makeNullDelimiter(options, ["mclose"]);
      } else {
        rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, ["mclose"]);
      }
      return buildCommon.makeSpan(["mord"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan(["mfrac"], [frac]), rightDelim], options);
    };
    mathmlBuilder$3 = (group, options) => {
      var node = new mathMLTree.MathNode("mfrac", [buildGroup2(group.numer, options), buildGroup2(group.denom, options)]);
      if (!group.hasBarLine) {
        node.setAttribute("linethickness", "0px");
      } else if (group.barSize) {
        var ruleWidth = calculateSize(group.barSize, options);
        node.setAttribute("linethickness", makeEm(ruleWidth));
      }
      var style = adjustStyle(group.size, options.style);
      if (style.size !== options.style.size) {
        node = new mathMLTree.MathNode("mstyle", [node]);
        var isDisplay = style.size === Style$1.DISPLAY.size ? "true" : "false";
        node.setAttribute("displaystyle", isDisplay);
        node.setAttribute("scriptlevel", "0");
      }
      if (group.leftDelim != null || group.rightDelim != null) {
        var withDelims = [];
        if (group.leftDelim != null) {
          var leftOp = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode(group.leftDelim.replace("\\", ""))]);
          leftOp.setAttribute("fence", "true");
          withDelims.push(leftOp);
        }
        withDelims.push(node);
        if (group.rightDelim != null) {
          var rightOp = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode(group.rightDelim.replace("\\", ""))]);
          rightOp.setAttribute("fence", "true");
          withDelims.push(rightOp);
        }
        return makeRow(withDelims);
      }
      return node;
    };
    defineFunction({
      type: "genfrac",
      names: [
        "\\dfrac",
        "\\frac",
        "\\tfrac",
        "\\dbinom",
        "\\binom",
        "\\tbinom",
        "\\\\atopfrac",
        "\\\\bracefrac",
        "\\\\brackfrac"
      ],
      props: {
        numArgs: 2,
        allowedInArgument: true
      },
      handler: (_ref, args) => {
        var {
          parser,
          funcName
        } = _ref;
        var numer = args[0];
        var denom = args[1];
        var hasBarLine;
        var leftDelim = null;
        var rightDelim = null;
        var size = "auto";
        switch (funcName) {
          case "\\dfrac":
          case "\\frac":
          case "\\tfrac":
            hasBarLine = true;
            break;
          case "\\\\atopfrac":
            hasBarLine = false;
            break;
          case "\\dbinom":
          case "\\binom":
          case "\\tbinom":
            hasBarLine = false;
            leftDelim = "(";
            rightDelim = ")";
            break;
          case "\\\\bracefrac":
            hasBarLine = false;
            leftDelim = "\\{";
            rightDelim = "\\}";
            break;
          case "\\\\brackfrac":
            hasBarLine = false;
            leftDelim = "[";
            rightDelim = "]";
            break;
          default:
            throw new Error("Unrecognized genfrac command");
        }
        switch (funcName) {
          case "\\dfrac":
          case "\\dbinom":
            size = "display";
            break;
          case "\\tfrac":
          case "\\tbinom":
            size = "text";
            break;
        }
        return {
          type: "genfrac",
          mode: parser.mode,
          continued: false,
          numer,
          denom,
          hasBarLine,
          leftDelim,
          rightDelim,
          size,
          barSize: null
        };
      },
      htmlBuilder: htmlBuilder$4,
      mathmlBuilder: mathmlBuilder$3
    });
    defineFunction({
      type: "genfrac",
      names: ["\\cfrac"],
      props: {
        numArgs: 2
      },
      handler: (_ref2, args) => {
        var {
          parser,
          funcName
        } = _ref2;
        var numer = args[0];
        var denom = args[1];
        return {
          type: "genfrac",
          mode: parser.mode,
          continued: true,
          numer,
          denom,
          hasBarLine: true,
          leftDelim: null,
          rightDelim: null,
          size: "display",
          barSize: null
        };
      }
    });
    defineFunction({
      type: "infix",
      names: ["\\over", "\\choose", "\\atop", "\\brace", "\\brack"],
      props: {
        numArgs: 0,
        infix: true
      },
      handler(_ref3) {
        var {
          parser,
          funcName,
          token
        } = _ref3;
        var replaceWith;
        switch (funcName) {
          case "\\over":
            replaceWith = "\\frac";
            break;
          case "\\choose":
            replaceWith = "\\binom";
            break;
          case "\\atop":
            replaceWith = "\\\\atopfrac";
            break;
          case "\\brace":
            replaceWith = "\\\\bracefrac";
            break;
          case "\\brack":
            replaceWith = "\\\\brackfrac";
            break;
          default:
            throw new Error("Unrecognized infix genfrac command");
        }
        return {
          type: "infix",
          mode: parser.mode,
          replaceWith,
          token
        };
      }
    });
    stylArray = ["display", "text", "script", "scriptscript"];
    delimFromValue = function delimFromValue2(delimString) {
      var delim = null;
      if (delimString.length > 0) {
        delim = delimString;
        delim = delim === "." ? null : delim;
      }
      return delim;
    };
    defineFunction({
      type: "genfrac",
      names: ["\\genfrac"],
      props: {
        numArgs: 6,
        allowedInArgument: true,
        argTypes: ["math", "math", "size", "text", "math", "math"]
      },
      handler(_ref4, args) {
        var {
          parser
        } = _ref4;
        var numer = args[4];
        var denom = args[5];
        var leftNode = normalizeArgument(args[0]);
        var leftDelim = leftNode.type === "atom" && leftNode.family === "open" ? delimFromValue(leftNode.text) : null;
        var rightNode = normalizeArgument(args[1]);
        var rightDelim = rightNode.type === "atom" && rightNode.family === "close" ? delimFromValue(rightNode.text) : null;
        var barNode = assertNodeType(args[2], "size");
        var hasBarLine;
        var barSize = null;
        if (barNode.isBlank) {
          hasBarLine = true;
        } else {
          barSize = barNode.value;
          hasBarLine = barSize.number > 0;
        }
        var size = "auto";
        var styl = args[3];
        if (styl.type === "ordgroup") {
          if (styl.body.length > 0) {
            var textOrd = assertNodeType(styl.body[0], "textord");
            size = stylArray[Number(textOrd.text)];
          }
        } else {
          styl = assertNodeType(styl, "textord");
          size = stylArray[Number(styl.text)];
        }
        return {
          type: "genfrac",
          mode: parser.mode,
          numer,
          denom,
          continued: false,
          hasBarLine,
          barSize,
          leftDelim,
          rightDelim,
          size
        };
      },
      htmlBuilder: htmlBuilder$4,
      mathmlBuilder: mathmlBuilder$3
    });
    defineFunction({
      type: "infix",
      names: ["\\above"],
      props: {
        numArgs: 1,
        argTypes: ["size"],
        infix: true
      },
      handler(_ref5, args) {
        var {
          parser,
          funcName,
          token
        } = _ref5;
        return {
          type: "infix",
          mode: parser.mode,
          replaceWith: "\\\\abovefrac",
          size: assertNodeType(args[0], "size").value,
          token
        };
      }
    });
    defineFunction({
      type: "genfrac",
      names: ["\\\\abovefrac"],
      props: {
        numArgs: 3,
        argTypes: ["math", "size", "math"]
      },
      handler: (_ref6, args) => {
        var {
          parser,
          funcName
        } = _ref6;
        var numer = args[0];
        var barSize = assert(assertNodeType(args[1], "infix").size);
        var denom = args[2];
        var hasBarLine = barSize.number > 0;
        return {
          type: "genfrac",
          mode: parser.mode,
          numer,
          denom,
          continued: false,
          hasBarLine,
          barSize,
          leftDelim: null,
          rightDelim: null,
          size: "auto"
        };
      },
      htmlBuilder: htmlBuilder$4,
      mathmlBuilder: mathmlBuilder$3
    });
    htmlBuilder$3 = (grp, options) => {
      var style = options.style;
      var supSubGroup;
      var group;
      if (grp.type === "supsub") {
        supSubGroup = grp.sup ? buildGroup$1(grp.sup, options.havingStyle(style.sup()), options) : buildGroup$1(grp.sub, options.havingStyle(style.sub()), options);
        group = assertNodeType(grp.base, "horizBrace");
      } else {
        group = assertNodeType(grp, "horizBrace");
      }
      var body = buildGroup$1(group.base, options.havingBaseStyle(Style$1.DISPLAY));
      var braceBody = stretchy.svgSpan(group, options);
      var vlist;
      if (group.isOver) {
        vlist = buildCommon.makeVList({
          positionType: "firstBaseline",
          children: [{
            type: "elem",
            elem: body
          }, {
            type: "kern",
            size: 0.1
          }, {
            type: "elem",
            elem: braceBody
          }]
        }, options);
        vlist.children[0].children[0].children[1].classes.push("svg-align");
      } else {
        vlist = buildCommon.makeVList({
          positionType: "bottom",
          positionData: body.depth + 0.1 + braceBody.height,
          children: [{
            type: "elem",
            elem: braceBody
          }, {
            type: "kern",
            size: 0.1
          }, {
            type: "elem",
            elem: body
          }]
        }, options);
        vlist.children[0].children[0].children[0].classes.push("svg-align");
      }
      if (supSubGroup) {
        var vSpan = buildCommon.makeSpan(["mord", group.isOver ? "mover" : "munder"], [vlist], options);
        if (group.isOver) {
          vlist = buildCommon.makeVList({
            positionType: "firstBaseline",
            children: [{
              type: "elem",
              elem: vSpan
            }, {
              type: "kern",
              size: 0.2
            }, {
              type: "elem",
              elem: supSubGroup
            }]
          }, options);
        } else {
          vlist = buildCommon.makeVList({
            positionType: "bottom",
            positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,
            children: [{
              type: "elem",
              elem: supSubGroup
            }, {
              type: "kern",
              size: 0.2
            }, {
              type: "elem",
              elem: vSpan
            }]
          }, options);
        }
      }
      return buildCommon.makeSpan(["mord", group.isOver ? "mover" : "munder"], [vlist], options);
    };
    mathmlBuilder$2 = (group, options) => {
      var accentNode = stretchy.mathMLnode(group.label);
      return new mathMLTree.MathNode(group.isOver ? "mover" : "munder", [buildGroup2(group.base, options), accentNode]);
    };
    defineFunction({
      type: "horizBrace",
      names: ["\\overbrace", "\\underbrace"],
      props: {
        numArgs: 1
      },
      handler(_ref, args) {
        var {
          parser,
          funcName
        } = _ref;
        return {
          type: "horizBrace",
          mode: parser.mode,
          label: funcName,
          isOver: /^\\over/.test(funcName),
          base: args[0]
        };
      },
      htmlBuilder: htmlBuilder$3,
      mathmlBuilder: mathmlBuilder$2
    });
    defineFunction({
      type: "href",
      names: ["\\href"],
      props: {
        numArgs: 2,
        argTypes: ["url", "original"],
        allowedInText: true
      },
      handler: (_ref, args) => {
        var {
          parser
        } = _ref;
        var body = args[1];
        var href = assertNodeType(args[0], "url").url;
        if (!parser.settings.isTrusted({
          command: "\\href",
          url: href
        })) {
          return parser.formatUnsupportedCmd("\\href");
        }
        return {
          type: "href",
          mode: parser.mode,
          href,
          body: ordargument(body)
        };
      },
      htmlBuilder: (group, options) => {
        var elements = buildExpression$1(group.body, options, false);
        return buildCommon.makeAnchor(group.href, [], elements, options);
      },
      mathmlBuilder: (group, options) => {
        var math2 = buildExpressionRow(group.body, options);
        if (!(math2 instanceof MathNode)) {
          math2 = new MathNode("mrow", [math2]);
        }
        math2.setAttribute("href", group.href);
        return math2;
      }
    });
    defineFunction({
      type: "href",
      names: ["\\url"],
      props: {
        numArgs: 1,
        argTypes: ["url"],
        allowedInText: true
      },
      handler: (_ref2, args) => {
        var {
          parser
        } = _ref2;
        var href = assertNodeType(args[0], "url").url;
        if (!parser.settings.isTrusted({
          command: "\\url",
          url: href
        })) {
          return parser.formatUnsupportedCmd("\\url");
        }
        var chars2 = [];
        for (var i4 = 0; i4 < href.length; i4++) {
          var c4 = href[i4];
          if (c4 === "~") {
            c4 = "\\textasciitilde";
          }
          chars2.push({
            type: "textord",
            mode: "text",
            text: c4
          });
        }
        var body = {
          type: "text",
          mode: parser.mode,
          font: "\\texttt",
          body: chars2
        };
        return {
          type: "href",
          mode: parser.mode,
          href,
          body: ordargument(body)
        };
      }
    });
    defineFunction({
      type: "hbox",
      names: ["\\hbox"],
      props: {
        numArgs: 1,
        argTypes: ["text"],
        allowedInText: true,
        primitive: true
      },
      handler(_ref, args) {
        var {
          parser
        } = _ref;
        return {
          type: "hbox",
          mode: parser.mode,
          body: ordargument(args[0])
        };
      },
      htmlBuilder(group, options) {
        var elements = buildExpression$1(group.body, options, false);
        return buildCommon.makeFragment(elements);
      },
      mathmlBuilder(group, options) {
        return new mathMLTree.MathNode("mrow", buildExpression2(group.body, options));
      }
    });
    defineFunction({
      type: "html",
      names: ["\\htmlClass", "\\htmlId", "\\htmlStyle", "\\htmlData"],
      props: {
        numArgs: 2,
        argTypes: ["raw", "original"],
        allowedInText: true
      },
      handler: (_ref, args) => {
        var {
          parser,
          funcName,
          token
        } = _ref;
        var value = assertNodeType(args[0], "raw").string;
        var body = args[1];
        if (parser.settings.strict) {
          parser.settings.reportNonstrict("htmlExtension", "HTML extension is disabled on strict mode");
        }
        var trustContext;
        var attributes = {};
        switch (funcName) {
          case "\\htmlClass":
            attributes.class = value;
            trustContext = {
              command: "\\htmlClass",
              class: value
            };
            break;
          case "\\htmlId":
            attributes.id = value;
            trustContext = {
              command: "\\htmlId",
              id: value
            };
            break;
          case "\\htmlStyle":
            attributes.style = value;
            trustContext = {
              command: "\\htmlStyle",
              style: value
            };
            break;
          case "\\htmlData": {
            var data = value.split(",");
            for (var i4 = 0; i4 < data.length; i4++) {
              var keyVal = data[i4].split("=");
              if (keyVal.length !== 2) {
                throw new ParseError("Error parsing key-value for \\htmlData");
              }
              attributes["data-" + keyVal[0].trim()] = keyVal[1].trim();
            }
            trustContext = {
              command: "\\htmlData",
              attributes
            };
            break;
          }
          default:
            throw new Error("Unrecognized html command");
        }
        if (!parser.settings.isTrusted(trustContext)) {
          return parser.formatUnsupportedCmd(funcName);
        }
        return {
          type: "html",
          mode: parser.mode,
          attributes,
          body: ordargument(body)
        };
      },
      htmlBuilder: (group, options) => {
        var elements = buildExpression$1(group.body, options, false);
        var classes = ["enclosing"];
        if (group.attributes.class) {
          classes.push(...group.attributes.class.trim().split(/\s+/));
        }
        var span = buildCommon.makeSpan(classes, elements, options);
        for (var attr in group.attributes) {
          if (attr !== "class" && group.attributes.hasOwnProperty(attr)) {
            span.setAttribute(attr, group.attributes[attr]);
          }
        }
        return span;
      },
      mathmlBuilder: (group, options) => {
        return buildExpressionRow(group.body, options);
      }
    });
    defineFunction({
      type: "htmlmathml",
      names: ["\\html@mathml"],
      props: {
        numArgs: 2,
        allowedInText: true
      },
      handler: (_ref, args) => {
        var {
          parser
        } = _ref;
        return {
          type: "htmlmathml",
          mode: parser.mode,
          html: ordargument(args[0]),
          mathml: ordargument(args[1])
        };
      },
      htmlBuilder: (group, options) => {
        var elements = buildExpression$1(group.html, options, false);
        return buildCommon.makeFragment(elements);
      },
      mathmlBuilder: (group, options) => {
        return buildExpressionRow(group.mathml, options);
      }
    });
    sizeData = function sizeData2(str) {
      if (/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(str)) {
        return {
          number: +str,
          unit: "bp"
        };
      } else {
        var match = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(str);
        if (!match) {
          throw new ParseError("Invalid size: '" + str + "' in \\includegraphics");
        }
        var data = {
          number: +(match[1] + match[2]),
          unit: match[3]
        };
        if (!validUnit(data)) {
          throw new ParseError("Invalid unit: '" + data.unit + "' in \\includegraphics.");
        }
        return data;
      }
    };
    defineFunction({
      type: "includegraphics",
      names: ["\\includegraphics"],
      props: {
        numArgs: 1,
        numOptionalArgs: 1,
        argTypes: ["raw", "url"],
        allowedInText: false
      },
      handler: (_ref, args, optArgs) => {
        var {
          parser
        } = _ref;
        var width = {
          number: 0,
          unit: "em"
        };
        var height = {
          number: 0.9,
          unit: "em"
        };
        var totalheight = {
          number: 0,
          unit: "em"
        };
        var alt = "";
        if (optArgs[0]) {
          var attributeStr = assertNodeType(optArgs[0], "raw").string;
          var attributes = attributeStr.split(",");
          for (var i4 = 0; i4 < attributes.length; i4++) {
            var keyVal = attributes[i4].split("=");
            if (keyVal.length === 2) {
              var str = keyVal[1].trim();
              switch (keyVal[0].trim()) {
                case "alt":
                  alt = str;
                  break;
                case "width":
                  width = sizeData(str);
                  break;
                case "height":
                  height = sizeData(str);
                  break;
                case "totalheight":
                  totalheight = sizeData(str);
                  break;
                default:
                  throw new ParseError("Invalid key: '" + keyVal[0] + "' in \\includegraphics.");
              }
            }
          }
        }
        var src = assertNodeType(args[0], "url").url;
        if (alt === "") {
          alt = src;
          alt = alt.replace(/^.*[\\/]/, "");
          alt = alt.substring(0, alt.lastIndexOf("."));
        }
        if (!parser.settings.isTrusted({
          command: "\\includegraphics",
          url: src
        })) {
          return parser.formatUnsupportedCmd("\\includegraphics");
        }
        return {
          type: "includegraphics",
          mode: parser.mode,
          alt,
          width,
          height,
          totalheight,
          src
        };
      },
      htmlBuilder: (group, options) => {
        var height = calculateSize(group.height, options);
        var depth = 0;
        if (group.totalheight.number > 0) {
          depth = calculateSize(group.totalheight, options) - height;
        }
        var width = 0;
        if (group.width.number > 0) {
          width = calculateSize(group.width, options);
        }
        var style = {
          height: makeEm(height + depth)
        };
        if (width > 0) {
          style.width = makeEm(width);
        }
        if (depth > 0) {
          style.verticalAlign = makeEm(-depth);
        }
        var node = new Img(group.src, group.alt, style);
        node.height = height;
        node.depth = depth;
        return node;
      },
      mathmlBuilder: (group, options) => {
        var node = new mathMLTree.MathNode("mglyph", []);
        node.setAttribute("alt", group.alt);
        var height = calculateSize(group.height, options);
        var depth = 0;
        if (group.totalheight.number > 0) {
          depth = calculateSize(group.totalheight, options) - height;
          node.setAttribute("valign", makeEm(-depth));
        }
        node.setAttribute("height", makeEm(height + depth));
        if (group.width.number > 0) {
          var width = calculateSize(group.width, options);
          node.setAttribute("width", makeEm(width));
        }
        node.setAttribute("src", group.src);
        return node;
      }
    });
    defineFunction({
      type: "kern",
      names: ["\\kern", "\\mkern", "\\hskip", "\\mskip"],
      props: {
        numArgs: 1,
        argTypes: ["size"],
        primitive: true,
        allowedInText: true
      },
      handler(_ref, args) {
        var {
          parser,
          funcName
        } = _ref;
        var size = assertNodeType(args[0], "size");
        if (parser.settings.strict) {
          var mathFunction = funcName[1] === "m";
          var muUnit = size.value.unit === "mu";
          if (mathFunction) {
            if (!muUnit) {
              parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + funcName + " supports only mu units, " + ("not " + size.value.unit + " units"));
            }
            if (parser.mode !== "math") {
              parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + funcName + " works only in math mode");
            }
          } else {
            if (muUnit) {
              parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + funcName + " doesn't support mu units");
            }
          }
        }
        return {
          type: "kern",
          mode: parser.mode,
          dimension: size.value
        };
      },
      htmlBuilder(group, options) {
        return buildCommon.makeGlue(group.dimension, options);
      },
      mathmlBuilder(group, options) {
        var dimension = calculateSize(group.dimension, options);
        return new mathMLTree.SpaceNode(dimension);
      }
    });
    defineFunction({
      type: "lap",
      names: ["\\mathllap", "\\mathrlap", "\\mathclap"],
      props: {
        numArgs: 1,
        allowedInText: true
      },
      handler: (_ref, args) => {
        var {
          parser,
          funcName
        } = _ref;
        var body = args[0];
        return {
          type: "lap",
          mode: parser.mode,
          alignment: funcName.slice(5),
          body
        };
      },
      htmlBuilder: (group, options) => {
        var inner2;
        if (group.alignment === "clap") {
          inner2 = buildCommon.makeSpan([], [buildGroup$1(group.body, options)]);
          inner2 = buildCommon.makeSpan(["inner"], [inner2], options);
        } else {
          inner2 = buildCommon.makeSpan(["inner"], [buildGroup$1(group.body, options)]);
        }
        var fix = buildCommon.makeSpan(["fix"], []);
        var node = buildCommon.makeSpan([group.alignment], [inner2, fix], options);
        var strut = buildCommon.makeSpan(["strut"]);
        strut.style.height = makeEm(node.height + node.depth);
        if (node.depth) {
          strut.style.verticalAlign = makeEm(-node.depth);
        }
        node.children.unshift(strut);
        node = buildCommon.makeSpan(["thinbox"], [node], options);
        return buildCommon.makeSpan(["mord", "vbox"], [node], options);
      },
      mathmlBuilder: (group, options) => {
        var node = new mathMLTree.MathNode("mpadded", [buildGroup2(group.body, options)]);
        if (group.alignment !== "rlap") {
          var offset = group.alignment === "llap" ? "-1" : "-0.5";
          node.setAttribute("lspace", offset + "width");
        }
        node.setAttribute("width", "0px");
        return node;
      }
    });
    defineFunction({
      type: "styling",
      names: ["\\(", "$"],
      props: {
        numArgs: 0,
        allowedInText: true,
        allowedInMath: false
      },
      handler(_ref, args) {
        var {
          funcName,
          parser
        } = _ref;
        var outerMode = parser.mode;
        parser.switchMode("math");
        var close2 = funcName === "\\(" ? "\\)" : "$";
        var body = parser.parseExpression(false, close2);
        parser.expect(close2);
        parser.switchMode(outerMode);
        return {
          type: "styling",
          mode: parser.mode,
          style: "text",
          body
        };
      }
    });
    defineFunction({
      type: "text",
      names: ["\\)", "\\]"],
      props: {
        numArgs: 0,
        allowedInText: true,
        allowedInMath: false
      },
      handler(context, args) {
        throw new ParseError("Mismatched " + context.funcName);
      }
    });
    chooseMathStyle = (group, options) => {
      switch (options.style.size) {
        case Style$1.DISPLAY.size:
          return group.display;
        case Style$1.TEXT.size:
          return group.text;
        case Style$1.SCRIPT.size:
          return group.script;
        case Style$1.SCRIPTSCRIPT.size:
          return group.scriptscript;
        default:
          return group.text;
      }
    };
    defineFunction({
      type: "mathchoice",
      names: ["\\mathchoice"],
      props: {
        numArgs: 4,
        primitive: true
      },
      handler: (_ref, args) => {
        var {
          parser
        } = _ref;
        return {
          type: "mathchoice",
          mode: parser.mode,
          display: ordargument(args[0]),
          text: ordargument(args[1]),
          script: ordargument(args[2]),
          scriptscript: ordargument(args[3])
        };
      },
      htmlBuilder: (group, options) => {
        var body = chooseMathStyle(group, options);
        var elements = buildExpression$1(body, options, false);
        return buildCommon.makeFragment(elements);
      },
      mathmlBuilder: (group, options) => {
        var body = chooseMathStyle(group, options);
        return buildExpressionRow(body, options);
      }
    });
    assembleSupSub = (base, supGroup, subGroup, options, style, slant, baseShift) => {
      base = buildCommon.makeSpan([], [base]);
      var subIsSingleCharacter = subGroup && utils.isCharacterBox(subGroup);
      var sub2;
      var sup2;
      if (supGroup) {
        var elem = buildGroup$1(supGroup, options.havingStyle(style.sup()), options);
        sup2 = {
          elem,
          kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)
        };
      }
      if (subGroup) {
        var _elem = buildGroup$1(subGroup, options.havingStyle(style.sub()), options);
        sub2 = {
          elem: _elem,
          kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)
        };
      }
      var finalGroup;
      if (sup2 && sub2) {
        var bottom = options.fontMetrics().bigOpSpacing5 + sub2.elem.height + sub2.elem.depth + sub2.kern + base.depth + baseShift;
        finalGroup = buildCommon.makeVList({
          positionType: "bottom",
          positionData: bottom,
          children: [{
            type: "kern",
            size: options.fontMetrics().bigOpSpacing5
          }, {
            type: "elem",
            elem: sub2.elem,
            marginLeft: makeEm(-slant)
          }, {
            type: "kern",
            size: sub2.kern
          }, {
            type: "elem",
            elem: base
          }, {
            type: "kern",
            size: sup2.kern
          }, {
            type: "elem",
            elem: sup2.elem,
            marginLeft: makeEm(slant)
          }, {
            type: "kern",
            size: options.fontMetrics().bigOpSpacing5
          }]
        }, options);
      } else if (sub2) {
        var top = base.height - baseShift;
        finalGroup = buildCommon.makeVList({
          positionType: "top",
          positionData: top,
          children: [{
            type: "kern",
            size: options.fontMetrics().bigOpSpacing5
          }, {
            type: "elem",
            elem: sub2.elem,
            marginLeft: makeEm(-slant)
          }, {
            type: "kern",
            size: sub2.kern
          }, {
            type: "elem",
            elem: base
          }]
        }, options);
      } else if (sup2) {
        var _bottom = base.depth + baseShift;
        finalGroup = buildCommon.makeVList({
          positionType: "bottom",
          positionData: _bottom,
          children: [{
            type: "elem",
            elem: base
          }, {
            type: "kern",
            size: sup2.kern
          }, {
            type: "elem",
            elem: sup2.elem,
            marginLeft: makeEm(slant)
          }, {
            type: "kern",
            size: options.fontMetrics().bigOpSpacing5
          }]
        }, options);
      } else {
        return base;
      }
      var parts = [finalGroup];
      if (sub2 && slant !== 0 && !subIsSingleCharacter) {
        var spacer = buildCommon.makeSpan(["mspace"], [], options);
        spacer.style.marginRight = makeEm(slant);
        parts.unshift(spacer);
      }
      return buildCommon.makeSpan(["mop", "op-limits"], parts, options);
    };
    noSuccessor = ["\\smallint"];
    htmlBuilder$2 = (grp, options) => {
      var supGroup;
      var subGroup;
      var hasLimits = false;
      var group;
      if (grp.type === "supsub") {
        supGroup = grp.sup;
        subGroup = grp.sub;
        group = assertNodeType(grp.base, "op");
        hasLimits = true;
      } else {
        group = assertNodeType(grp, "op");
      }
      var style = options.style;
      var large = false;
      if (style.size === Style$1.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {
        large = true;
      }
      var base;
      if (group.symbol) {
        var fontName = large ? "Size2-Regular" : "Size1-Regular";
        var stash = "";
        if (group.name === "\\oiint" || group.name === "\\oiiint") {
          stash = group.name.slice(1);
          group.name = stash === "oiint" ? "\\iint" : "\\iiint";
        }
        base = buildCommon.makeSymbol(group.name, fontName, "math", options, ["mop", "op-symbol", large ? "large-op" : "small-op"]);
        if (stash.length > 0) {
          var italic = base.italic;
          var oval = buildCommon.staticSvg(stash + "Size" + (large ? "2" : "1"), options);
          base = buildCommon.makeVList({
            positionType: "individualShift",
            children: [{
              type: "elem",
              elem: base,
              shift: 0
            }, {
              type: "elem",
              elem: oval,
              shift: large ? 0.08 : 0
            }]
          }, options);
          group.name = "\\" + stash;
          base.classes.unshift("mop");
          base.italic = italic;
        }
      } else if (group.body) {
        var inner2 = buildExpression$1(group.body, options, true);
        if (inner2.length === 1 && inner2[0] instanceof SymbolNode) {
          base = inner2[0];
          base.classes[0] = "mop";
        } else {
          base = buildCommon.makeSpan(["mop"], inner2, options);
        }
      } else {
        var output = [];
        for (var i4 = 1; i4 < group.name.length; i4++) {
          output.push(buildCommon.mathsym(group.name[i4], group.mode, options));
        }
        base = buildCommon.makeSpan(["mop"], output, options);
      }
      var baseShift = 0;
      var slant = 0;
      if ((base instanceof SymbolNode || group.name === "\\oiint" || group.name === "\\oiiint") && !group.suppressBaseShift) {
        baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight;
        slant = base.italic;
      }
      if (hasLimits) {
        return assembleSupSub(base, supGroup, subGroup, options, style, slant, baseShift);
      } else {
        if (baseShift) {
          base.style.position = "relative";
          base.style.top = makeEm(baseShift);
        }
        return base;
      }
    };
    mathmlBuilder$1 = (group, options) => {
      var node;
      if (group.symbol) {
        node = new MathNode("mo", [makeText(group.name, group.mode)]);
        if (utils.contains(noSuccessor, group.name)) {
          node.setAttribute("largeop", "false");
        }
      } else if (group.body) {
        node = new MathNode("mo", buildExpression2(group.body, options));
      } else {
        node = new MathNode("mi", [new TextNode(group.name.slice(1))]);
        var operator = new MathNode("mo", [makeText("\u2061", "text")]);
        if (group.parentIsSupSub) {
          node = new MathNode("mrow", [node, operator]);
        } else {
          node = newDocumentFragment([node, operator]);
        }
      }
      return node;
    };
    singleCharBigOps = {
      "\u220F": "\\prod",
      "\u2210": "\\coprod",
      "\u2211": "\\sum",
      "\u22C0": "\\bigwedge",
      "\u22C1": "\\bigvee",
      "\u22C2": "\\bigcap",
      "\u22C3": "\\bigcup",
      "\u2A00": "\\bigodot",
      "\u2A01": "\\bigoplus",
      "\u2A02": "\\bigotimes",
      "\u2A04": "\\biguplus",
      "\u2A06": "\\bigsqcup"
    };
    defineFunction({
      type: "op",
      names: ["\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint", "\u220F", "\u2210", "\u2211", "\u22C0", "\u22C1", "\u22C2", "\u22C3", "\u2A00", "\u2A01", "\u2A02", "\u2A04", "\u2A06"],
      props: {
        numArgs: 0
      },
      handler: (_ref, args) => {
        var {
          parser,
          funcName
        } = _ref;
        var fName = funcName;
        if (fName.length === 1) {
          fName = singleCharBigOps[fName];
        }
        return {
          type: "op",
          mode: parser.mode,
          limits: true,
          parentIsSupSub: false,
          symbol: true,
          name: fName
        };
      },
      htmlBuilder: htmlBuilder$2,
      mathmlBuilder: mathmlBuilder$1
    });
    defineFunction({
      type: "op",
      names: ["\\mathop"],
      props: {
        numArgs: 1,
        primitive: true
      },
      handler: (_ref2, args) => {
        var {
          parser
        } = _ref2;
        var body = args[0];
        return {
          type: "op",
          mode: parser.mode,
          limits: false,
          parentIsSupSub: false,
          symbol: false,
          body: ordargument(body)
        };
      },
      htmlBuilder: htmlBuilder$2,
      mathmlBuilder: mathmlBuilder$1
    });
    singleCharIntegrals = {
      "\u222B": "\\int",
      "\u222C": "\\iint",
      "\u222D": "\\iiint",
      "\u222E": "\\oint",
      "\u222F": "\\oiint",
      "\u2230": "\\oiiint"
    };
    defineFunction({
      type: "op",
      names: ["\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arg", "\\ch", "\\cos", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\sh", "\\tan", "\\tanh", "\\tg", "\\th"],
      props: {
        numArgs: 0
      },
      handler(_ref3) {
        var {
          parser,
          funcName
        } = _ref3;
        return {
          type: "op",
          mode: parser.mode,
          limits: false,
          parentIsSupSub: false,
          symbol: false,
          name: funcName
        };
      },
      htmlBuilder: htmlBuilder$2,
      mathmlBuilder: mathmlBuilder$1
    });
    defineFunction({
      type: "op",
      names: ["\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup"],
      props: {
        numArgs: 0
      },
      handler(_ref4) {
        var {
          parser,
          funcName
        } = _ref4;
        return {
          type: "op",
          mode: parser.mode,
          limits: true,
          parentIsSupSub: false,
          symbol: false,
          name: funcName
        };
      },
      htmlBuilder: htmlBuilder$2,
      mathmlBuilder: mathmlBuilder$1
    });
    defineFunction({
      type: "op",
      names: ["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint", "\u222B", "\u222C", "\u222D", "\u222E", "\u222F", "\u2230"],
      props: {
        numArgs: 0
      },
      handler(_ref5) {
        var {
          parser,
          funcName
        } = _ref5;
        var fName = funcName;
        if (fName.length === 1) {
          fName = singleCharIntegrals[fName];
        }
        return {
          type: "op",
          mode: parser.mode,
          limits: false,
          parentIsSupSub: false,
          symbol: true,
          name: fName
        };
      },
      htmlBuilder: htmlBuilder$2,
      mathmlBuilder: mathmlBuilder$1
    });
    htmlBuilder$1 = (grp, options) => {
      var supGroup;
      var subGroup;
      var hasLimits = false;
      var group;
      if (grp.type === "supsub") {
        supGroup = grp.sup;
        subGroup = grp.sub;
        group = assertNodeType(grp.base, "operatorname");
        hasLimits = true;
      } else {
        group = assertNodeType(grp, "operatorname");
      }
      var base;
      if (group.body.length > 0) {
        var body = group.body.map((child2) => {
          var childText = child2.text;
          if (typeof childText === "string") {
            return {
              type: "textord",
              mode: child2.mode,
              text: childText
            };
          } else {
            return child2;
          }
        });
        var expression = buildExpression$1(body, options.withFont("mathrm"), true);
        for (var i4 = 0; i4 < expression.length; i4++) {
          var child = expression[i4];
          if (child instanceof SymbolNode) {
            child.text = child.text.replace(/\u2212/, "-").replace(/\u2217/, "*");
          }
        }
        base = buildCommon.makeSpan(["mop"], expression, options);
      } else {
        base = buildCommon.makeSpan(["mop"], [], options);
      }
      if (hasLimits) {
        return assembleSupSub(base, supGroup, subGroup, options, options.style, 0, 0);
      } else {
        return base;
      }
    };
    mathmlBuilder2 = (group, options) => {
      var expression = buildExpression2(group.body, options.withFont("mathrm"));
      var isAllString = true;
      for (var i4 = 0; i4 < expression.length; i4++) {
        var node = expression[i4];
        if (node instanceof mathMLTree.SpaceNode)
          ;
        else if (node instanceof mathMLTree.MathNode) {
          switch (node.type) {
            case "mi":
            case "mn":
            case "ms":
            case "mspace":
            case "mtext":
              break;
            case "mo": {
              var child = node.children[0];
              if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {
                child.text = child.text.replace(/\u2212/, "-").replace(/\u2217/, "*");
              } else {
                isAllString = false;
              }
              break;
            }
            default:
              isAllString = false;
          }
        } else {
          isAllString = false;
        }
      }
      if (isAllString) {
        var word = expression.map((node2) => node2.toText()).join("");
        expression = [new mathMLTree.TextNode(word)];
      }
      var identifier = new mathMLTree.MathNode("mi", expression);
      identifier.setAttribute("mathvariant", "normal");
      var operator = new mathMLTree.MathNode("mo", [makeText("\u2061", "text")]);
      if (group.parentIsSupSub) {
        return new mathMLTree.MathNode("mrow", [identifier, operator]);
      } else {
        return mathMLTree.newDocumentFragment([identifier, operator]);
      }
    };
    defineFunction({
      type: "operatorname",
      names: ["\\operatorname@", "\\operatornamewithlimits"],
      props: {
        numArgs: 1
      },
      handler: (_ref, args) => {
        var {
          parser,
          funcName
        } = _ref;
        var body = args[0];
        return {
          type: "operatorname",
          mode: parser.mode,
          body: ordargument(body),
          alwaysHandleSupSub: funcName === "\\operatornamewithlimits",
          limits: false,
          parentIsSupSub: false
        };
      },
      htmlBuilder: htmlBuilder$1,
      mathmlBuilder: mathmlBuilder2
    });
    defineMacro("\\operatorname", "\\@ifstar\\operatornamewithlimits\\operatorname@");
    defineFunctionBuilders({
      type: "ordgroup",
      htmlBuilder(group, options) {
        if (group.semisimple) {
          return buildCommon.makeFragment(buildExpression$1(group.body, options, false));
        }
        return buildCommon.makeSpan(["mord"], buildExpression$1(group.body, options, true), options);
      },
      mathmlBuilder(group, options) {
        return buildExpressionRow(group.body, options, true);
      }
    });
    defineFunction({
      type: "overline",
      names: ["\\overline"],
      props: {
        numArgs: 1
      },
      handler(_ref, args) {
        var {
          parser
        } = _ref;
        var body = args[0];
        return {
          type: "overline",
          mode: parser.mode,
          body
        };
      },
      htmlBuilder(group, options) {
        var innerGroup = buildGroup$1(group.body, options.havingCrampedStyle());
        var line = buildCommon.makeLineSpan("overline-line", options);
        var defaultRuleThickness = options.fontMetrics().defaultRuleThickness;
        var vlist = buildCommon.makeVList({
          positionType: "firstBaseline",
          children: [{
            type: "elem",
            elem: innerGroup
          }, {
            type: "kern",
            size: 3 * defaultRuleThickness
          }, {
            type: "elem",
            elem: line
          }, {
            type: "kern",
            size: defaultRuleThickness
          }]
        }, options);
        return buildCommon.makeSpan(["mord", "overline"], [vlist], options);
      },
      mathmlBuilder(group, options) {
        var operator = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode("\u203E")]);
        operator.setAttribute("stretchy", "true");
        var node = new mathMLTree.MathNode("mover", [buildGroup2(group.body, options), operator]);
        node.setAttribute("accent", "true");
        return node;
      }
    });
    defineFunction({
      type: "phantom",
      names: ["\\phantom"],
      props: {
        numArgs: 1,
        allowedInText: true
      },
      handler: (_ref, args) => {
        var {
          parser
        } = _ref;
        var body = args[0];
        return {
          type: "phantom",
          mode: parser.mode,
          body: ordargument(body)
        };
      },
      htmlBuilder: (group, options) => {
        var elements = buildExpression$1(group.body, options.withPhantom(), false);
        return buildCommon.makeFragment(elements);
      },
      mathmlBuilder: (group, options) => {
        var inner2 = buildExpression2(group.body, options);
        return new mathMLTree.MathNode("mphantom", inner2);
      }
    });
    defineFunction({
      type: "hphantom",
      names: ["\\hphantom"],
      props: {
        numArgs: 1,
        allowedInText: true
      },
      handler: (_ref2, args) => {
        var {
          parser
        } = _ref2;
        var body = args[0];
        return {
          type: "hphantom",
          mode: parser.mode,
          body
        };
      },
      htmlBuilder: (group, options) => {
        var node = buildCommon.makeSpan([], [buildGroup$1(group.body, options.withPhantom())]);
        node.height = 0;
        node.depth = 0;
        if (node.children) {
          for (var i4 = 0; i4 < node.children.length; i4++) {
            node.children[i4].height = 0;
            node.children[i4].depth = 0;
          }
        }
        node = buildCommon.makeVList({
          positionType: "firstBaseline",
          children: [{
            type: "elem",
            elem: node
          }]
        }, options);
        return buildCommon.makeSpan(["mord"], [node], options);
      },
      mathmlBuilder: (group, options) => {
        var inner2 = buildExpression2(ordargument(group.body), options);
        var phantom = new mathMLTree.MathNode("mphantom", inner2);
        var node = new mathMLTree.MathNode("mpadded", [phantom]);
        node.setAttribute("height", "0px");
        node.setAttribute("depth", "0px");
        return node;
      }
    });
    defineFunction({
      type: "vphantom",
      names: ["\\vphantom"],
      props: {
        numArgs: 1,
        allowedInText: true
      },
      handler: (_ref3, args) => {
        var {
          parser
        } = _ref3;
        var body = args[0];
        return {
          type: "vphantom",
          mode: parser.mode,
          body
        };
      },
      htmlBuilder: (group, options) => {
        var inner2 = buildCommon.makeSpan(["inner"], [buildGroup$1(group.body, options.withPhantom())]);
        var fix = buildCommon.makeSpan(["fix"], []);
        return buildCommon.makeSpan(["mord", "rlap"], [inner2, fix], options);
      },
      mathmlBuilder: (group, options) => {
        var inner2 = buildExpression2(ordargument(group.body), options);
        var phantom = new mathMLTree.MathNode("mphantom", inner2);
        var node = new mathMLTree.MathNode("mpadded", [phantom]);
        node.setAttribute("width", "0px");
        return node;
      }
    });
    defineFunction({
      type: "raisebox",
      names: ["\\raisebox"],
      props: {
        numArgs: 2,
        argTypes: ["size", "hbox"],
        allowedInText: true
      },
      handler(_ref, args) {
        var {
          parser
        } = _ref;
        var amount = assertNodeType(args[0], "size").value;
        var body = args[1];
        return {
          type: "raisebox",
          mode: parser.mode,
          dy: amount,
          body
        };
      },
      htmlBuilder(group, options) {
        var body = buildGroup$1(group.body, options);
        var dy = calculateSize(group.dy, options);
        return buildCommon.makeVList({
          positionType: "shift",
          positionData: -dy,
          children: [{
            type: "elem",
            elem: body
          }]
        }, options);
      },
      mathmlBuilder(group, options) {
        var node = new mathMLTree.MathNode("mpadded", [buildGroup2(group.body, options)]);
        var dy = group.dy.number + group.dy.unit;
        node.setAttribute("voffset", dy);
        return node;
      }
    });
    defineFunction({
      type: "internal",
      names: ["\\relax"],
      props: {
        numArgs: 0,
        allowedInText: true
      },
      handler(_ref) {
        var {
          parser
        } = _ref;
        return {
          type: "internal",
          mode: parser.mode
        };
      }
    });
    defineFunction({
      type: "rule",
      names: ["\\rule"],
      props: {
        numArgs: 2,
        numOptionalArgs: 1,
        argTypes: ["size", "size", "size"]
      },
      handler(_ref, args, optArgs) {
        var {
          parser
        } = _ref;
        var shift = optArgs[0];
        var width = assertNodeType(args[0], "size");
        var height = assertNodeType(args[1], "size");
        return {
          type: "rule",
          mode: parser.mode,
          shift: shift && assertNodeType(shift, "size").value,
          width: width.value,
          height: height.value
        };
      },
      htmlBuilder(group, options) {
        var rule = buildCommon.makeSpan(["mord", "rule"], [], options);
        var width = calculateSize(group.width, options);
        var height = calculateSize(group.height, options);
        var shift = group.shift ? calculateSize(group.shift, options) : 0;
        rule.style.borderRightWidth = makeEm(width);
        rule.style.borderTopWidth = makeEm(height);
        rule.style.bottom = makeEm(shift);
        rule.width = width;
        rule.height = height + shift;
        rule.depth = -shift;
        rule.maxFontSize = height * 1.125 * options.sizeMultiplier;
        return rule;
      },
      mathmlBuilder(group, options) {
        var width = calculateSize(group.width, options);
        var height = calculateSize(group.height, options);
        var shift = group.shift ? calculateSize(group.shift, options) : 0;
        var color = options.color && options.getColor() || "black";
        var rule = new mathMLTree.MathNode("mspace");
        rule.setAttribute("mathbackground", color);
        rule.setAttribute("width", makeEm(width));
        rule.setAttribute("height", makeEm(height));
        var wrapper = new mathMLTree.MathNode("mpadded", [rule]);
        if (shift >= 0) {
          wrapper.setAttribute("height", makeEm(shift));
        } else {
          wrapper.setAttribute("height", makeEm(shift));
          wrapper.setAttribute("depth", makeEm(-shift));
        }
        wrapper.setAttribute("voffset", makeEm(shift));
        return wrapper;
      }
    });
    sizeFuncs = ["\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"];
    htmlBuilder2 = (group, options) => {
      var newOptions = options.havingSize(group.size);
      return sizingGroup(group.body, newOptions, options);
    };
    defineFunction({
      type: "sizing",
      names: sizeFuncs,
      props: {
        numArgs: 0,
        allowedInText: true
      },
      handler: (_ref, args) => {
        var {
          breakOnTokenText,
          funcName,
          parser
        } = _ref;
        var body = parser.parseExpression(false, breakOnTokenText);
        return {
          type: "sizing",
          mode: parser.mode,
          size: sizeFuncs.indexOf(funcName) + 1,
          body
        };
      },
      htmlBuilder: htmlBuilder2,
      mathmlBuilder: (group, options) => {
        var newOptions = options.havingSize(group.size);
        var inner2 = buildExpression2(group.body, newOptions);
        var node = new mathMLTree.MathNode("mstyle", inner2);
        node.setAttribute("mathsize", makeEm(newOptions.sizeMultiplier));
        return node;
      }
    });
    defineFunction({
      type: "smash",
      names: ["\\smash"],
      props: {
        numArgs: 1,
        numOptionalArgs: 1,
        allowedInText: true
      },
      handler: (_ref, args, optArgs) => {
        var {
          parser
        } = _ref;
        var smashHeight = false;
        var smashDepth = false;
        var tbArg = optArgs[0] && assertNodeType(optArgs[0], "ordgroup");
        if (tbArg) {
          var letter = "";
          for (var i4 = 0; i4 < tbArg.body.length; ++i4) {
            var node = tbArg.body[i4];
            letter = node.text;
            if (letter === "t") {
              smashHeight = true;
            } else if (letter === "b") {
              smashDepth = true;
            } else {
              smashHeight = false;
              smashDepth = false;
              break;
            }
          }
        } else {
          smashHeight = true;
          smashDepth = true;
        }
        var body = args[0];
        return {
          type: "smash",
          mode: parser.mode,
          body,
          smashHeight,
          smashDepth
        };
      },
      htmlBuilder: (group, options) => {
        var node = buildCommon.makeSpan([], [buildGroup$1(group.body, options)]);
        if (!group.smashHeight && !group.smashDepth) {
          return node;
        }
        if (group.smashHeight) {
          node.height = 0;
          if (node.children) {
            for (var i4 = 0; i4 < node.children.length; i4++) {
              node.children[i4].height = 0;
            }
          }
        }
        if (group.smashDepth) {
          node.depth = 0;
          if (node.children) {
            for (var _i = 0; _i < node.children.length; _i++) {
              node.children[_i].depth = 0;
            }
          }
        }
        var smashedNode = buildCommon.makeVList({
          positionType: "firstBaseline",
          children: [{
            type: "elem",
            elem: node
          }]
        }, options);
        return buildCommon.makeSpan(["mord"], [smashedNode], options);
      },
      mathmlBuilder: (group, options) => {
        var node = new mathMLTree.MathNode("mpadded", [buildGroup2(group.body, options)]);
        if (group.smashHeight) {
          node.setAttribute("height", "0px");
        }
        if (group.smashDepth) {
          node.setAttribute("depth", "0px");
        }
        return node;
      }
    });
    defineFunction({
      type: "sqrt",
      names: ["\\sqrt"],
      props: {
        numArgs: 1,
        numOptionalArgs: 1
      },
      handler(_ref, args, optArgs) {
        var {
          parser
        } = _ref;
        var index16 = optArgs[0];
        var body = args[0];
        return {
          type: "sqrt",
          mode: parser.mode,
          body,
          index: index16
        };
      },
      htmlBuilder(group, options) {
        var inner2 = buildGroup$1(group.body, options.havingCrampedStyle());
        if (inner2.height === 0) {
          inner2.height = options.fontMetrics().xHeight;
        }
        inner2 = buildCommon.wrapFragment(inner2, options);
        var metrics = options.fontMetrics();
        var theta = metrics.defaultRuleThickness;
        var phi = theta;
        if (options.style.id < Style$1.TEXT.id) {
          phi = options.fontMetrics().xHeight;
        }
        var lineClearance = theta + phi / 4;
        var minDelimiterHeight = inner2.height + inner2.depth + lineClearance + theta;
        var {
          span: img,
          ruleWidth,
          advanceWidth
        } = delimiter.sqrtImage(minDelimiterHeight, options);
        var delimDepth = img.height - ruleWidth;
        if (delimDepth > inner2.height + inner2.depth + lineClearance) {
          lineClearance = (lineClearance + delimDepth - inner2.height - inner2.depth) / 2;
        }
        var imgShift = img.height - inner2.height - lineClearance - ruleWidth;
        inner2.style.paddingLeft = makeEm(advanceWidth);
        var body = buildCommon.makeVList({
          positionType: "firstBaseline",
          children: [{
            type: "elem",
            elem: inner2,
            wrapperClasses: ["svg-align"]
          }, {
            type: "kern",
            size: -(inner2.height + imgShift)
          }, {
            type: "elem",
            elem: img
          }, {
            type: "kern",
            size: ruleWidth
          }]
        }, options);
        if (!group.index) {
          return buildCommon.makeSpan(["mord", "sqrt"], [body], options);
        } else {
          var newOptions = options.havingStyle(Style$1.SCRIPTSCRIPT);
          var rootm = buildGroup$1(group.index, newOptions, options);
          var toShift = 0.6 * (body.height - body.depth);
          var rootVList = buildCommon.makeVList({
            positionType: "shift",
            positionData: -toShift,
            children: [{
              type: "elem",
              elem: rootm
            }]
          }, options);
          var rootVListWrap = buildCommon.makeSpan(["root"], [rootVList]);
          return buildCommon.makeSpan(["mord", "sqrt"], [rootVListWrap, body], options);
        }
      },
      mathmlBuilder(group, options) {
        var {
          body,
          index: index16
        } = group;
        return index16 ? new mathMLTree.MathNode("mroot", [buildGroup2(body, options), buildGroup2(index16, options)]) : new mathMLTree.MathNode("msqrt", [buildGroup2(body, options)]);
      }
    });
    styleMap = {
      "display": Style$1.DISPLAY,
      "text": Style$1.TEXT,
      "script": Style$1.SCRIPT,
      "scriptscript": Style$1.SCRIPTSCRIPT
    };
    defineFunction({
      type: "styling",
      names: ["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"],
      props: {
        numArgs: 0,
        allowedInText: true,
        primitive: true
      },
      handler(_ref, args) {
        var {
          breakOnTokenText,
          funcName,
          parser
        } = _ref;
        var body = parser.parseExpression(true, breakOnTokenText);
        var style = funcName.slice(1, funcName.length - 5);
        return {
          type: "styling",
          mode: parser.mode,
          style,
          body
        };
      },
      htmlBuilder(group, options) {
        var newStyle = styleMap[group.style];
        var newOptions = options.havingStyle(newStyle).withFont("");
        return sizingGroup(group.body, newOptions, options);
      },
      mathmlBuilder(group, options) {
        var newStyle = styleMap[group.style];
        var newOptions = options.havingStyle(newStyle);
        var inner2 = buildExpression2(group.body, newOptions);
        var node = new mathMLTree.MathNode("mstyle", inner2);
        var styleAttributes = {
          "display": ["0", "true"],
          "text": ["0", "false"],
          "script": ["1", "false"],
          "scriptscript": ["2", "false"]
        };
        var attr = styleAttributes[group.style];
        node.setAttribute("scriptlevel", attr[0]);
        node.setAttribute("displaystyle", attr[1]);
        return node;
      }
    });
    htmlBuilderDelegate = function htmlBuilderDelegate2(group, options) {
      var base = group.base;
      if (!base) {
        return null;
      } else if (base.type === "op") {
        var delegate = base.limits && (options.style.size === Style$1.DISPLAY.size || base.alwaysHandleSupSub);
        return delegate ? htmlBuilder$2 : null;
      } else if (base.type === "operatorname") {
        var _delegate = base.alwaysHandleSupSub && (options.style.size === Style$1.DISPLAY.size || base.limits);
        return _delegate ? htmlBuilder$1 : null;
      } else if (base.type === "accent") {
        return utils.isCharacterBox(base.base) ? htmlBuilder$a : null;
      } else if (base.type === "horizBrace") {
        var isSup = !group.sub;
        return isSup === base.isOver ? htmlBuilder$3 : null;
      } else {
        return null;
      }
    };
    defineFunctionBuilders({
      type: "supsub",
      htmlBuilder(group, options) {
        var builderDelegate = htmlBuilderDelegate(group, options);
        if (builderDelegate) {
          return builderDelegate(group, options);
        }
        var {
          base: valueBase,
          sup: valueSup,
          sub: valueSub
        } = group;
        var base = buildGroup$1(valueBase, options);
        var supm;
        var subm;
        var metrics = options.fontMetrics();
        var supShift = 0;
        var subShift = 0;
        var isCharacterBox3 = valueBase && utils.isCharacterBox(valueBase);
        if (valueSup) {
          var newOptions = options.havingStyle(options.style.sup());
          supm = buildGroup$1(valueSup, newOptions, options);
          if (!isCharacterBox3) {
            supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;
          }
        }
        if (valueSub) {
          var _newOptions = options.havingStyle(options.style.sub());
          subm = buildGroup$1(valueSub, _newOptions, options);
          if (!isCharacterBox3) {
            subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;
          }
        }
        var minSupShift;
        if (options.style === Style$1.DISPLAY) {
          minSupShift = metrics.sup1;
        } else if (options.style.cramped) {
          minSupShift = metrics.sup3;
        } else {
          minSupShift = metrics.sup2;
        }
        var multiplier = options.sizeMultiplier;
        var marginRight = makeEm(0.5 / metrics.ptPerEm / multiplier);
        var marginLeft = null;
        if (subm) {
          var isOiint = group.base && group.base.type === "op" && group.base.name && (group.base.name === "\\oiint" || group.base.name === "\\oiiint");
          if (base instanceof SymbolNode || isOiint) {
            marginLeft = makeEm(-base.italic);
          }
        }
        var supsub;
        if (supm && subm) {
          supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);
          subShift = Math.max(subShift, metrics.sub2);
          var ruleWidth = metrics.defaultRuleThickness;
          var maxWidth = 4 * ruleWidth;
          if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {
            subShift = maxWidth - (supShift - supm.depth) + subm.height;
            var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);
            if (psi > 0) {
              supShift += psi;
              subShift -= psi;
            }
          }
          var vlistElem = [{
            type: "elem",
            elem: subm,
            shift: subShift,
            marginRight,
            marginLeft
          }, {
            type: "elem",
            elem: supm,
            shift: -supShift,
            marginRight
          }];
          supsub = buildCommon.makeVList({
            positionType: "individualShift",
            children: vlistElem
          }, options);
        } else if (subm) {
          subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);
          var _vlistElem = [{
            type: "elem",
            elem: subm,
            marginLeft,
            marginRight
          }];
          supsub = buildCommon.makeVList({
            positionType: "shift",
            positionData: subShift,
            children: _vlistElem
          }, options);
        } else if (supm) {
          supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);
          supsub = buildCommon.makeVList({
            positionType: "shift",
            positionData: -supShift,
            children: [{
              type: "elem",
              elem: supm,
              marginRight
            }]
          }, options);
        } else {
          throw new Error("supsub must have either sup or sub.");
        }
        var mclass = getTypeOfDomTree(base, "right") || "mord";
        return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan(["msupsub"], [supsub])], options);
      },
      mathmlBuilder(group, options) {
        var isBrace = false;
        var isOver;
        var isSup;
        if (group.base && group.base.type === "horizBrace") {
          isSup = !!group.sup;
          if (isSup === group.base.isOver) {
            isBrace = true;
            isOver = group.base.isOver;
          }
        }
        if (group.base && (group.base.type === "op" || group.base.type === "operatorname")) {
          group.base.parentIsSupSub = true;
        }
        var children = [buildGroup2(group.base, options)];
        if (group.sub) {
          children.push(buildGroup2(group.sub, options));
        }
        if (group.sup) {
          children.push(buildGroup2(group.sup, options));
        }
        var nodeType;
        if (isBrace) {
          nodeType = isOver ? "mover" : "munder";
        } else if (!group.sub) {
          var base = group.base;
          if (base && base.type === "op" && base.limits && (options.style === Style$1.DISPLAY || base.alwaysHandleSupSub)) {
            nodeType = "mover";
          } else if (base && base.type === "operatorname" && base.alwaysHandleSupSub && (base.limits || options.style === Style$1.DISPLAY)) {
            nodeType = "mover";
          } else {
            nodeType = "msup";
          }
        } else if (!group.sup) {
          var _base = group.base;
          if (_base && _base.type === "op" && _base.limits && (options.style === Style$1.DISPLAY || _base.alwaysHandleSupSub)) {
            nodeType = "munder";
          } else if (_base && _base.type === "operatorname" && _base.alwaysHandleSupSub && (_base.limits || options.style === Style$1.DISPLAY)) {
            nodeType = "munder";
          } else {
            nodeType = "msub";
          }
        } else {
          var _base2 = group.base;
          if (_base2 && _base2.type === "op" && _base2.limits && options.style === Style$1.DISPLAY) {
            nodeType = "munderover";
          } else if (_base2 && _base2.type === "operatorname" && _base2.alwaysHandleSupSub && (options.style === Style$1.DISPLAY || _base2.limits)) {
            nodeType = "munderover";
          } else {
            nodeType = "msubsup";
          }
        }
        return new mathMLTree.MathNode(nodeType, children);
      }
    });
    defineFunctionBuilders({
      type: "atom",
      htmlBuilder(group, options) {
        return buildCommon.mathsym(group.text, group.mode, options, ["m" + group.family]);
      },
      mathmlBuilder(group, options) {
        var node = new mathMLTree.MathNode("mo", [makeText(group.text, group.mode)]);
        if (group.family === "bin") {
          var variant = getVariant(group, options);
          if (variant === "bold-italic") {
            node.setAttribute("mathvariant", variant);
          }
        } else if (group.family === "punct") {
          node.setAttribute("separator", "true");
        } else if (group.family === "open" || group.family === "close") {
          node.setAttribute("stretchy", "false");
        }
        return node;
      }
    });
    defaultVariant = {
      "mi": "italic",
      "mn": "normal",
      "mtext": "normal"
    };
    defineFunctionBuilders({
      type: "mathord",
      htmlBuilder(group, options) {
        return buildCommon.makeOrd(group, options, "mathord");
      },
      mathmlBuilder(group, options) {
        var node = new mathMLTree.MathNode("mi", [makeText(group.text, group.mode, options)]);
        var variant = getVariant(group, options) || "italic";
        if (variant !== defaultVariant[node.type]) {
          node.setAttribute("mathvariant", variant);
        }
        return node;
      }
    });
    defineFunctionBuilders({
      type: "textord",
      htmlBuilder(group, options) {
        return buildCommon.makeOrd(group, options, "textord");
      },
      mathmlBuilder(group, options) {
        var text2 = makeText(group.text, group.mode, options);
        var variant = getVariant(group, options) || "normal";
        var node;
        if (group.mode === "text") {
          node = new mathMLTree.MathNode("mtext", [text2]);
        } else if (/[0-9]/.test(group.text)) {
          node = new mathMLTree.MathNode("mn", [text2]);
        } else if (group.text === "\\prime") {
          node = new mathMLTree.MathNode("mo", [text2]);
        } else {
          node = new mathMLTree.MathNode("mi", [text2]);
        }
        if (variant !== defaultVariant[node.type]) {
          node.setAttribute("mathvariant", variant);
        }
        return node;
      }
    });
    cssSpace = {
      "\\nobreak": "nobreak",
      "\\allowbreak": "allowbreak"
    };
    regularSpace = {
      " ": {},
      "\\ ": {},
      "~": {
        className: "nobreak"
      },
      "\\space": {},
      "\\nobreakspace": {
        className: "nobreak"
      }
    };
    defineFunctionBuilders({
      type: "spacing",
      htmlBuilder(group, options) {
        if (regularSpace.hasOwnProperty(group.text)) {
          var className = regularSpace[group.text].className || "";
          if (group.mode === "text") {
            var ord = buildCommon.makeOrd(group, options, "textord");
            ord.classes.push(className);
            return ord;
          } else {
            return buildCommon.makeSpan(["mspace", className], [buildCommon.mathsym(group.text, group.mode, options)], options);
          }
        } else if (cssSpace.hasOwnProperty(group.text)) {
          return buildCommon.makeSpan(["mspace", cssSpace[group.text]], [], options);
        } else {
          throw new ParseError('Unknown type of space "' + group.text + '"');
        }
      },
      mathmlBuilder(group, options) {
        var node;
        if (regularSpace.hasOwnProperty(group.text)) {
          node = new mathMLTree.MathNode("mtext", [new mathMLTree.TextNode("\xA0")]);
        } else if (cssSpace.hasOwnProperty(group.text)) {
          return new mathMLTree.MathNode("mspace");
        } else {
          throw new ParseError('Unknown type of space "' + group.text + '"');
        }
        return node;
      }
    });
    pad = () => {
      var padNode = new mathMLTree.MathNode("mtd", []);
      padNode.setAttribute("width", "50%");
      return padNode;
    };
    defineFunctionBuilders({
      type: "tag",
      mathmlBuilder(group, options) {
        var table = new mathMLTree.MathNode("mtable", [new mathMLTree.MathNode("mtr", [pad(), new mathMLTree.MathNode("mtd", [buildExpressionRow(group.body, options)]), pad(), new mathMLTree.MathNode("mtd", [buildExpressionRow(group.tag, options)])])]);
        table.setAttribute("width", "100%");
        return table;
      }
    });
    textFontFamilies = {
      "\\text": void 0,
      "\\textrm": "textrm",
      "\\textsf": "textsf",
      "\\texttt": "texttt",
      "\\textnormal": "textrm"
    };
    textFontWeights = {
      "\\textbf": "textbf",
      "\\textmd": "textmd"
    };
    textFontShapes = {
      "\\textit": "textit",
      "\\textup": "textup"
    };
    optionsWithFont = (group, options) => {
      var font = group.font;
      if (!font) {
        return options;
      } else if (textFontFamilies[font]) {
        return options.withTextFontFamily(textFontFamilies[font]);
      } else if (textFontWeights[font]) {
        return options.withTextFontWeight(textFontWeights[font]);
      } else {
        return options.withTextFontShape(textFontShapes[font]);
      }
    };
    defineFunction({
      type: "text",
      names: [
        "\\text",
        "\\textrm",
        "\\textsf",
        "\\texttt",
        "\\textnormal",
        "\\textbf",
        "\\textmd",
        "\\textit",
        "\\textup"
      ],
      props: {
        numArgs: 1,
        argTypes: ["text"],
        allowedInArgument: true,
        allowedInText: true
      },
      handler(_ref, args) {
        var {
          parser,
          funcName
        } = _ref;
        var body = args[0];
        return {
          type: "text",
          mode: parser.mode,
          body: ordargument(body),
          font: funcName
        };
      },
      htmlBuilder(group, options) {
        var newOptions = optionsWithFont(group, options);
        var inner2 = buildExpression$1(group.body, newOptions, true);
        return buildCommon.makeSpan(["mord", "text"], inner2, newOptions);
      },
      mathmlBuilder(group, options) {
        var newOptions = optionsWithFont(group, options);
        return buildExpressionRow(group.body, newOptions);
      }
    });
    defineFunction({
      type: "underline",
      names: ["\\underline"],
      props: {
        numArgs: 1,
        allowedInText: true
      },
      handler(_ref, args) {
        var {
          parser
        } = _ref;
        return {
          type: "underline",
          mode: parser.mode,
          body: args[0]
        };
      },
      htmlBuilder(group, options) {
        var innerGroup = buildGroup$1(group.body, options);
        var line = buildCommon.makeLineSpan("underline-line", options);
        var defaultRuleThickness = options.fontMetrics().defaultRuleThickness;
        var vlist = buildCommon.makeVList({
          positionType: "top",
          positionData: innerGroup.height,
          children: [{
            type: "kern",
            size: defaultRuleThickness
          }, {
            type: "elem",
            elem: line
          }, {
            type: "kern",
            size: 3 * defaultRuleThickness
          }, {
            type: "elem",
            elem: innerGroup
          }]
        }, options);
        return buildCommon.makeSpan(["mord", "underline"], [vlist], options);
      },
      mathmlBuilder(group, options) {
        var operator = new mathMLTree.MathNode("mo", [new mathMLTree.TextNode("\u203E")]);
        operator.setAttribute("stretchy", "true");
        var node = new mathMLTree.MathNode("munder", [buildGroup2(group.body, options), operator]);
        node.setAttribute("accentunder", "true");
        return node;
      }
    });
    defineFunction({
      type: "vcenter",
      names: ["\\vcenter"],
      props: {
        numArgs: 1,
        argTypes: ["original"],
        allowedInText: false
      },
      handler(_ref, args) {
        var {
          parser
        } = _ref;
        return {
          type: "vcenter",
          mode: parser.mode,
          body: args[0]
        };
      },
      htmlBuilder(group, options) {
        var body = buildGroup$1(group.body, options);
        var axisHeight = options.fontMetrics().axisHeight;
        var dy = 0.5 * (body.height - axisHeight - (body.depth + axisHeight));
        return buildCommon.makeVList({
          positionType: "shift",
          positionData: dy,
          children: [{
            type: "elem",
            elem: body
          }]
        }, options);
      },
      mathmlBuilder(group, options) {
        return new mathMLTree.MathNode("mpadded", [buildGroup2(group.body, options)], ["vcenter"]);
      }
    });
    defineFunction({
      type: "verb",
      names: ["\\verb"],
      props: {
        numArgs: 0,
        allowedInText: true
      },
      handler(context, args, optArgs) {
        throw new ParseError("\\verb ended by end of line instead of matching delimiter");
      },
      htmlBuilder(group, options) {
        var text2 = makeVerb(group);
        var body = [];
        var newOptions = options.havingStyle(options.style.text());
        for (var i4 = 0; i4 < text2.length; i4++) {
          var c4 = text2[i4];
          if (c4 === "~") {
            c4 = "\\textasciitilde";
          }
          body.push(buildCommon.makeSymbol(c4, "Typewriter-Regular", group.mode, newOptions, ["mord", "texttt"]));
        }
        return buildCommon.makeSpan(["mord", "text"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);
      },
      mathmlBuilder(group, options) {
        var text2 = new mathMLTree.TextNode(makeVerb(group));
        var node = new mathMLTree.MathNode("mtext", [text2]);
        node.setAttribute("mathvariant", "monospace");
        return node;
      }
    });
    makeVerb = (group) => group.body.replace(/ /g, group.star ? "\u2423" : "\xA0");
    functions = _functions;
    spaceRegexString = "[ \r\n	]";
    controlWordRegexString = "\\\\[a-zA-Z@]+";
    controlSymbolRegexString = "\\\\[^\uD800-\uDFFF]";
    controlWordWhitespaceRegexString = "(" + controlWordRegexString + ")" + spaceRegexString + "*";
    controlSpaceRegexString = "\\\\(\n|[ \r	]+\n?)[ \r	]*";
    combiningDiacriticalMarkString = "[\u0300-\u036F]";
    combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + "+$");
    tokenRegexString = "(" + spaceRegexString + "+)|" + (controlSpaceRegexString + "|") + "([!-\\[\\]-\u2027\u202A-\uD7FF\uF900-\uFFFF]" + (combiningDiacriticalMarkString + "*") + "|[\uD800-\uDBFF][\uDC00-\uDFFF]" + (combiningDiacriticalMarkString + "*") + "|\\\\verb\\*([^]).*?\\4|\\\\verb([^*a-zA-Z]).*?\\5" + ("|" + controlWordWhitespaceRegexString) + ("|" + controlSymbolRegexString + ")");
    Lexer = class {
      constructor(input, settings) {
        this.input = void 0;
        this.settings = void 0;
        this.tokenRegex = void 0;
        this.catcodes = void 0;
        this.input = input;
        this.settings = settings;
        this.tokenRegex = new RegExp(tokenRegexString, "g");
        this.catcodes = {
          "%": 14,
          "~": 13
        };
      }
      setCatcode(char, code) {
        this.catcodes[char] = code;
      }
      lex() {
        var input = this.input;
        var pos = this.tokenRegex.lastIndex;
        if (pos === input.length) {
          return new Token("EOF", new SourceLocation(this, pos, pos));
        }
        var match = this.tokenRegex.exec(input);
        if (match === null || match.index !== pos) {
          throw new ParseError("Unexpected character: '" + input[pos] + "'", new Token(input[pos], new SourceLocation(this, pos, pos + 1)));
        }
        var text2 = match[6] || match[3] || (match[2] ? "\\ " : " ");
        if (this.catcodes[text2] === 14) {
          var nlIndex = input.indexOf("\n", this.tokenRegex.lastIndex);
          if (nlIndex === -1) {
            this.tokenRegex.lastIndex = input.length;
            this.settings.reportNonstrict("commentAtEnd", "% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)");
          } else {
            this.tokenRegex.lastIndex = nlIndex + 1;
          }
          return this.lex();
        }
        return new Token(text2, new SourceLocation(this, pos, this.tokenRegex.lastIndex));
      }
    };
    Namespace = class {
      constructor(builtins, globalMacros) {
        if (builtins === void 0) {
          builtins = {};
        }
        if (globalMacros === void 0) {
          globalMacros = {};
        }
        this.current = void 0;
        this.builtins = void 0;
        this.undefStack = void 0;
        this.current = globalMacros;
        this.builtins = builtins;
        this.undefStack = [];
      }
      beginGroup() {
        this.undefStack.push({});
      }
      endGroup() {
        if (this.undefStack.length === 0) {
          throw new ParseError("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");
        }
        var undefs = this.undefStack.pop();
        for (var undef in undefs) {
          if (undefs.hasOwnProperty(undef)) {
            if (undefs[undef] == null) {
              delete this.current[undef];
            } else {
              this.current[undef] = undefs[undef];
            }
          }
        }
      }
      endGroups() {
        while (this.undefStack.length > 0) {
          this.endGroup();
        }
      }
      has(name5) {
        return this.current.hasOwnProperty(name5) || this.builtins.hasOwnProperty(name5);
      }
      get(name5) {
        if (this.current.hasOwnProperty(name5)) {
          return this.current[name5];
        } else {
          return this.builtins[name5];
        }
      }
      set(name5, value, global2) {
        if (global2 === void 0) {
          global2 = false;
        }
        if (global2) {
          for (var i4 = 0; i4 < this.undefStack.length; i4++) {
            delete this.undefStack[i4][name5];
          }
          if (this.undefStack.length > 0) {
            this.undefStack[this.undefStack.length - 1][name5] = value;
          }
        } else {
          var top = this.undefStack[this.undefStack.length - 1];
          if (top && !top.hasOwnProperty(name5)) {
            top[name5] = this.current[name5];
          }
        }
        if (value == null) {
          delete this.current[name5];
        } else {
          this.current[name5] = value;
        }
      }
    };
    macros = _macros;
    defineMacro("\\noexpand", function(context) {
      var t3 = context.popToken();
      if (context.isExpandable(t3.text)) {
        t3.noexpand = true;
        t3.treatAsRelax = true;
      }
      return {
        tokens: [t3],
        numArgs: 0
      };
    });
    defineMacro("\\expandafter", function(context) {
      var t3 = context.popToken();
      context.expandOnce(true);
      return {
        tokens: [t3],
        numArgs: 0
      };
    });
    defineMacro("\\@firstoftwo", function(context) {
      var args = context.consumeArgs(2);
      return {
        tokens: args[0],
        numArgs: 0
      };
    });
    defineMacro("\\@secondoftwo", function(context) {
      var args = context.consumeArgs(2);
      return {
        tokens: args[1],
        numArgs: 0
      };
    });
    defineMacro("\\@ifnextchar", function(context) {
      var args = context.consumeArgs(3);
      context.consumeSpaces();
      var nextToken = context.future();
      if (args[0].length === 1 && args[0][0].text === nextToken.text) {
        return {
          tokens: args[1],
          numArgs: 0
        };
      } else {
        return {
          tokens: args[2],
          numArgs: 0
        };
      }
    });
    defineMacro("\\@ifstar", "\\@ifnextchar *{\\@firstoftwo{#1}}");
    defineMacro("\\TextOrMath", function(context) {
      var args = context.consumeArgs(2);
      if (context.mode === "text") {
        return {
          tokens: args[0],
          numArgs: 0
        };
      } else {
        return {
          tokens: args[1],
          numArgs: 0
        };
      }
    });
    digitToNumber = {
      "0": 0,
      "1": 1,
      "2": 2,
      "3": 3,
      "4": 4,
      "5": 5,
      "6": 6,
      "7": 7,
      "8": 8,
      "9": 9,
      "a": 10,
      "A": 10,
      "b": 11,
      "B": 11,
      "c": 12,
      "C": 12,
      "d": 13,
      "D": 13,
      "e": 14,
      "E": 14,
      "f": 15,
      "F": 15
    };
    defineMacro("\\char", function(context) {
      var token = context.popToken();
      var base;
      var number = "";
      if (token.text === "'") {
        base = 8;
        token = context.popToken();
      } else if (token.text === '"') {
        base = 16;
        token = context.popToken();
      } else if (token.text === "`") {
        token = context.popToken();
        if (token.text[0] === "\\") {
          number = token.text.charCodeAt(1);
        } else if (token.text === "EOF") {
          throw new ParseError("\\char` missing argument");
        } else {
          number = token.text.charCodeAt(0);
        }
      } else {
        base = 10;
      }
      if (base) {
        number = digitToNumber[token.text];
        if (number == null || number >= base) {
          throw new ParseError("Invalid base-" + base + " digit " + token.text);
        }
        var digit;
        while ((digit = digitToNumber[context.future().text]) != null && digit < base) {
          number *= base;
          number += digit;
          context.popToken();
        }
      }
      return "\\@char{" + number + "}";
    });
    newcommand = (context, existsOK, nonexistsOK) => {
      var arg = context.consumeArg().tokens;
      if (arg.length !== 1) {
        throw new ParseError("\\newcommand's first argument must be a macro name");
      }
      var name5 = arg[0].text;
      var exists = context.isDefined(name5);
      if (exists && !existsOK) {
        throw new ParseError("\\newcommand{" + name5 + "} attempting to redefine " + (name5 + "; use \\renewcommand"));
      }
      if (!exists && !nonexistsOK) {
        throw new ParseError("\\renewcommand{" + name5 + "} when command " + name5 + " does not yet exist; use \\newcommand");
      }
      var numArgs = 0;
      arg = context.consumeArg().tokens;
      if (arg.length === 1 && arg[0].text === "[") {
        var argText = "";
        var token = context.expandNextToken();
        while (token.text !== "]" && token.text !== "EOF") {
          argText += token.text;
          token = context.expandNextToken();
        }
        if (!argText.match(/^\s*[0-9]+\s*$/)) {
          throw new ParseError("Invalid number of arguments: " + argText);
        }
        numArgs = parseInt(argText);
        arg = context.consumeArg().tokens;
      }
      context.macros.set(name5, {
        tokens: arg,
        numArgs
      });
      return "";
    };
    defineMacro("\\newcommand", (context) => newcommand(context, false, true));
    defineMacro("\\renewcommand", (context) => newcommand(context, true, false));
    defineMacro("\\providecommand", (context) => newcommand(context, true, true));
    defineMacro("\\message", (context) => {
      var arg = context.consumeArgs(1)[0];
      console.log(arg.reverse().map((token) => token.text).join(""));
      return "";
    });
    defineMacro("\\errmessage", (context) => {
      var arg = context.consumeArgs(1)[0];
      console.error(arg.reverse().map((token) => token.text).join(""));
      return "";
    });
    defineMacro("\\show", (context) => {
      var tok = context.popToken();
      var name5 = tok.text;
      console.log(tok, context.macros.get(name5), functions[name5], symbols.math[name5], symbols.text[name5]);
      return "";
    });
    defineMacro("\\bgroup", "{");
    defineMacro("\\egroup", "}");
    defineMacro("~", "\\nobreakspace");
    defineMacro("\\lq", "`");
    defineMacro("\\rq", "'");
    defineMacro("\\aa", "\\r a");
    defineMacro("\\AA", "\\r A");
    defineMacro("\\textcopyright", "\\html@mathml{\\textcircled{c}}{\\char`\xA9}");
    defineMacro("\\copyright", "\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}");
    defineMacro("\\textregistered", "\\html@mathml{\\textcircled{\\scriptsize R}}{\\char`\xAE}");
    defineMacro("\u212C", "\\mathscr{B}");
    defineMacro("\u2130", "\\mathscr{E}");
    defineMacro("\u2131", "\\mathscr{F}");
    defineMacro("\u210B", "\\mathscr{H}");
    defineMacro("\u2110", "\\mathscr{I}");
    defineMacro("\u2112", "\\mathscr{L}");
    defineMacro("\u2133", "\\mathscr{M}");
    defineMacro("\u211B", "\\mathscr{R}");
    defineMacro("\u212D", "\\mathfrak{C}");
    defineMacro("\u210C", "\\mathfrak{H}");
    defineMacro("\u2128", "\\mathfrak{Z}");
    defineMacro("\\Bbbk", "\\Bbb{k}");
    defineMacro("\xB7", "\\cdotp");
    defineMacro("\\llap", "\\mathllap{\\textrm{#1}}");
    defineMacro("\\rlap", "\\mathrlap{\\textrm{#1}}");
    defineMacro("\\clap", "\\mathclap{\\textrm{#1}}");
    defineMacro("\\mathstrut", "\\vphantom{(}");
    defineMacro("\\underbar", "\\underline{\\text{#1}}");
    defineMacro("\\not", '\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}');
    defineMacro("\\neq", "\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char`\u2260}}");
    defineMacro("\\ne", "\\neq");
    defineMacro("\u2260", "\\neq");
    defineMacro("\\notin", "\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char`\u2209}}");
    defineMacro("\u2209", "\\notin");
    defineMacro("\u2258", "\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char`\u2258}}");
    defineMacro("\u2259", "\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char`\u2258}}");
    defineMacro("\u225A", "\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char`\u225A}}");
    defineMacro("\u225B", "\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char`\u225B}}");
    defineMacro("\u225D", "\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char`\u225D}}");
    defineMacro("\u225E", "\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char`\u225E}}");
    defineMacro("\u225F", "\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char`\u225F}}");
    defineMacro("\u27C2", "\\perp");
    defineMacro("\u203C", "\\mathclose{!\\mkern-0.8mu!}");
    defineMacro("\u220C", "\\notni");
    defineMacro("\u231C", "\\ulcorner");
    defineMacro("\u231D", "\\urcorner");
    defineMacro("\u231E", "\\llcorner");
    defineMacro("\u231F", "\\lrcorner");
    defineMacro("\xA9", "\\copyright");
    defineMacro("\xAE", "\\textregistered");
    defineMacro("\uFE0F", "\\textregistered");
    defineMacro("\\ulcorner", '\\html@mathml{\\@ulcorner}{\\mathop{\\char"231c}}');
    defineMacro("\\urcorner", '\\html@mathml{\\@urcorner}{\\mathop{\\char"231d}}');
    defineMacro("\\llcorner", '\\html@mathml{\\@llcorner}{\\mathop{\\char"231e}}');
    defineMacro("\\lrcorner", '\\html@mathml{\\@lrcorner}{\\mathop{\\char"231f}}');
    defineMacro("\\vdots", "\\mathord{\\varvdots\\rule{0pt}{15pt}}");
    defineMacro("\u22EE", "\\vdots");
    defineMacro("\\varGamma", "\\mathit{\\Gamma}");
    defineMacro("\\varDelta", "\\mathit{\\Delta}");
    defineMacro("\\varTheta", "\\mathit{\\Theta}");
    defineMacro("\\varLambda", "\\mathit{\\Lambda}");
    defineMacro("\\varXi", "\\mathit{\\Xi}");
    defineMacro("\\varPi", "\\mathit{\\Pi}");
    defineMacro("\\varSigma", "\\mathit{\\Sigma}");
    defineMacro("\\varUpsilon", "\\mathit{\\Upsilon}");
    defineMacro("\\varPhi", "\\mathit{\\Phi}");
    defineMacro("\\varPsi", "\\mathit{\\Psi}");
    defineMacro("\\varOmega", "\\mathit{\\Omega}");
    defineMacro("\\substack", "\\begin{subarray}{c}#1\\end{subarray}");
    defineMacro("\\colon", "\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu\\relax");
    defineMacro("\\boxed", "\\fbox{$\\displaystyle{#1}$}");
    defineMacro("\\iff", "\\DOTSB\\;\\Longleftrightarrow\\;");
    defineMacro("\\implies", "\\DOTSB\\;\\Longrightarrow\\;");
    defineMacro("\\impliedby", "\\DOTSB\\;\\Longleftarrow\\;");
    dotsByToken = {
      ",": "\\dotsc",
      "\\not": "\\dotsb",
      "+": "\\dotsb",
      "=": "\\dotsb",
      "<": "\\dotsb",
      ">": "\\dotsb",
      "-": "\\dotsb",
      "*": "\\dotsb",
      ":": "\\dotsb",
      "\\DOTSB": "\\dotsb",
      "\\coprod": "\\dotsb",
      "\\bigvee": "\\dotsb",
      "\\bigwedge": "\\dotsb",
      "\\biguplus": "\\dotsb",
      "\\bigcap": "\\dotsb",
      "\\bigcup": "\\dotsb",
      "\\prod": "\\dotsb",
      "\\sum": "\\dotsb",
      "\\bigotimes": "\\dotsb",
      "\\bigoplus": "\\dotsb",
      "\\bigodot": "\\dotsb",
      "\\bigsqcup": "\\dotsb",
      "\\And": "\\dotsb",
      "\\longrightarrow": "\\dotsb",
      "\\Longrightarrow": "\\dotsb",
      "\\longleftarrow": "\\dotsb",
      "\\Longleftarrow": "\\dotsb",
      "\\longleftrightarrow": "\\dotsb",
      "\\Longleftrightarrow": "\\dotsb",
      "\\mapsto": "\\dotsb",
      "\\longmapsto": "\\dotsb",
      "\\hookrightarrow": "\\dotsb",
      "\\doteq": "\\dotsb",
      "\\mathbin": "\\dotsb",
      "\\mathrel": "\\dotsb",
      "\\relbar": "\\dotsb",
      "\\Relbar": "\\dotsb",
      "\\xrightarrow": "\\dotsb",
      "\\xleftarrow": "\\dotsb",
      "\\DOTSI": "\\dotsi",
      "\\int": "\\dotsi",
      "\\oint": "\\dotsi",
      "\\iint": "\\dotsi",
      "\\iiint": "\\dotsi",
      "\\iiiint": "\\dotsi",
      "\\idotsint": "\\dotsi",
      "\\DOTSX": "\\dotsx"
    };
    defineMacro("\\dots", function(context) {
      var thedots = "\\dotso";
      var next = context.expandAfterFuture().text;
      if (next in dotsByToken) {
        thedots = dotsByToken[next];
      } else if (next.slice(0, 4) === "\\not") {
        thedots = "\\dotsb";
      } else if (next in symbols.math) {
        if (utils.contains(["bin", "rel"], symbols.math[next].group)) {
          thedots = "\\dotsb";
        }
      }
      return thedots;
    });
    spaceAfterDots = {
      ")": true,
      "]": true,
      "\\rbrack": true,
      "\\}": true,
      "\\rbrace": true,
      "\\rangle": true,
      "\\rceil": true,
      "\\rfloor": true,
      "\\rgroup": true,
      "\\rmoustache": true,
      "\\right": true,
      "\\bigr": true,
      "\\biggr": true,
      "\\Bigr": true,
      "\\Biggr": true,
      "$": true,
      ";": true,
      ".": true,
      ",": true
    };
    defineMacro("\\dotso", function(context) {
      var next = context.future().text;
      if (next in spaceAfterDots) {
        return "\\ldots\\,";
      } else {
        return "\\ldots";
      }
    });
    defineMacro("\\dotsc", function(context) {
      var next = context.future().text;
      if (next in spaceAfterDots && next !== ",") {
        return "\\ldots\\,";
      } else {
        return "\\ldots";
      }
    });
    defineMacro("\\cdots", function(context) {
      var next = context.future().text;
      if (next in spaceAfterDots) {
        return "\\@cdots\\,";
      } else {
        return "\\@cdots";
      }
    });
    defineMacro("\\dotsb", "\\cdots");
    defineMacro("\\dotsm", "\\cdots");
    defineMacro("\\dotsi", "\\!\\cdots");
    defineMacro("\\dotsx", "\\ldots\\,");
    defineMacro("\\DOTSI", "\\relax");
    defineMacro("\\DOTSB", "\\relax");
    defineMacro("\\DOTSX", "\\relax");
    defineMacro("\\tmspace", "\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax");
    defineMacro("\\,", "\\tmspace+{3mu}{.1667em}");
    defineMacro("\\thinspace", "\\,");
    defineMacro("\\>", "\\mskip{4mu}");
    defineMacro("\\:", "\\tmspace+{4mu}{.2222em}");
    defineMacro("\\medspace", "\\:");
    defineMacro("\\;", "\\tmspace+{5mu}{.2777em}");
    defineMacro("\\thickspace", "\\;");
    defineMacro("\\!", "\\tmspace-{3mu}{.1667em}");
    defineMacro("\\negthinspace", "\\!");
    defineMacro("\\negmedspace", "\\tmspace-{4mu}{.2222em}");
    defineMacro("\\negthickspace", "\\tmspace-{5mu}{.277em}");
    defineMacro("\\enspace", "\\kern.5em ");
    defineMacro("\\enskip", "\\hskip.5em\\relax");
    defineMacro("\\quad", "\\hskip1em\\relax");
    defineMacro("\\qquad", "\\hskip2em\\relax");
    defineMacro("\\tag", "\\@ifstar\\tag@literal\\tag@paren");
    defineMacro("\\tag@paren", "\\tag@literal{({#1})}");
    defineMacro("\\tag@literal", (context) => {
      if (context.macros.get("\\df@tag")) {
        throw new ParseError("Multiple \\tag");
      }
      return "\\gdef\\df@tag{\\text{#1}}";
    });
    defineMacro("\\bmod", "\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}");
    defineMacro("\\pod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)");
    defineMacro("\\pmod", "\\pod{{\\rm mod}\\mkern6mu#1}");
    defineMacro("\\mod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1");
    defineMacro("\\newline", "\\\\\\relax");
    defineMacro("\\TeX", "\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");
    latexRaiseA = makeEm(fontMetricsData["Main-Regular"]["T".charCodeAt(0)][1] - 0.7 * fontMetricsData["Main-Regular"]["A".charCodeAt(0)][1]);
    defineMacro("\\LaTeX", "\\textrm{\\html@mathml{" + ("L\\kern-.36em\\raisebox{" + latexRaiseA + "}{\\scriptstyle A}") + "\\kern-.15em\\TeX}{LaTeX}}");
    defineMacro("\\KaTeX", "\\textrm{\\html@mathml{" + ("K\\kern-.17em\\raisebox{" + latexRaiseA + "}{\\scriptstyle A}") + "\\kern-.15em\\TeX}{KaTeX}}");
    defineMacro("\\hspace", "\\@ifstar\\@hspacer\\@hspace");
    defineMacro("\\@hspace", "\\hskip #1\\relax");
    defineMacro("\\@hspacer", "\\rule{0pt}{0pt}\\hskip #1\\relax");
    defineMacro("\\ordinarycolon", ":");
    defineMacro("\\vcentcolon", "\\mathrel{\\mathop\\ordinarycolon}");
    defineMacro("\\dblcolon", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char"2237}}');
    defineMacro("\\coloneqq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2254}}');
    defineMacro("\\Coloneqq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2237\\char"3d}}');
    defineMacro("\\coloneq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"3a\\char"2212}}');
    defineMacro("\\Coloneq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"2237\\char"2212}}');
    defineMacro("\\eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2255}}');
    defineMacro("\\Eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"3d\\char"2237}}');
    defineMacro("\\eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2239}}');
    defineMacro("\\Eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"2212\\char"2237}}');
    defineMacro("\\colonapprox", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"3a\\char"2248}}');
    defineMacro("\\Colonapprox", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"2237\\char"2248}}');
    defineMacro("\\colonsim", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"3a\\char"223c}}');
    defineMacro("\\Colonsim", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"2237\\char"223c}}');
    defineMacro("\u2237", "\\dblcolon");
    defineMacro("\u2239", "\\eqcolon");
    defineMacro("\u2254", "\\coloneqq");
    defineMacro("\u2255", "\\eqqcolon");
    defineMacro("\u2A74", "\\Coloneqq");
    defineMacro("\\ratio", "\\vcentcolon");
    defineMacro("\\coloncolon", "\\dblcolon");
    defineMacro("\\colonequals", "\\coloneqq");
    defineMacro("\\coloncolonequals", "\\Coloneqq");
    defineMacro("\\equalscolon", "\\eqqcolon");
    defineMacro("\\equalscoloncolon", "\\Eqqcolon");
    defineMacro("\\colonminus", "\\coloneq");
    defineMacro("\\coloncolonminus", "\\Coloneq");
    defineMacro("\\minuscolon", "\\eqcolon");
    defineMacro("\\minuscoloncolon", "\\Eqcolon");
    defineMacro("\\coloncolonapprox", "\\Colonapprox");
    defineMacro("\\coloncolonsim", "\\Colonsim");
    defineMacro("\\simcolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}");
    defineMacro("\\simcoloncolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}");
    defineMacro("\\approxcolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}");
    defineMacro("\\approxcoloncolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}");
    defineMacro("\\notni", "\\html@mathml{\\not\\ni}{\\mathrel{\\char`\u220C}}");
    defineMacro("\\limsup", "\\DOTSB\\operatorname*{lim\\,sup}");
    defineMacro("\\liminf", "\\DOTSB\\operatorname*{lim\\,inf}");
    defineMacro("\\injlim", "\\DOTSB\\operatorname*{inj\\,lim}");
    defineMacro("\\projlim", "\\DOTSB\\operatorname*{proj\\,lim}");
    defineMacro("\\varlimsup", "\\DOTSB\\operatorname*{\\overline{lim}}");
    defineMacro("\\varliminf", "\\DOTSB\\operatorname*{\\underline{lim}}");
    defineMacro("\\varinjlim", "\\DOTSB\\operatorname*{\\underrightarrow{lim}}");
    defineMacro("\\varprojlim", "\\DOTSB\\operatorname*{\\underleftarrow{lim}}");
    defineMacro("\\gvertneqq", "\\html@mathml{\\@gvertneqq}{\u2269}");
    defineMacro("\\lvertneqq", "\\html@mathml{\\@lvertneqq}{\u2268}");
    defineMacro("\\ngeqq", "\\html@mathml{\\@ngeqq}{\u2271}");
    defineMacro("\\ngeqslant", "\\html@mathml{\\@ngeqslant}{\u2271}");
    defineMacro("\\nleqq", "\\html@mathml{\\@nleqq}{\u2270}");
    defineMacro("\\nleqslant", "\\html@mathml{\\@nleqslant}{\u2270}");
    defineMacro("\\nshortmid", "\\html@mathml{\\@nshortmid}{\u2224}");
    defineMacro("\\nshortparallel", "\\html@mathml{\\@nshortparallel}{\u2226}");
    defineMacro("\\nsubseteqq", "\\html@mathml{\\@nsubseteqq}{\u2288}");
    defineMacro("\\nsupseteqq", "\\html@mathml{\\@nsupseteqq}{\u2289}");
    defineMacro("\\varsubsetneq", "\\html@mathml{\\@varsubsetneq}{\u228A}");
    defineMacro("\\varsubsetneqq", "\\html@mathml{\\@varsubsetneqq}{\u2ACB}");
    defineMacro("\\varsupsetneq", "\\html@mathml{\\@varsupsetneq}{\u228B}");
    defineMacro("\\varsupsetneqq", "\\html@mathml{\\@varsupsetneqq}{\u2ACC}");
    defineMacro("\\imath", "\\html@mathml{\\@imath}{\u0131}");
    defineMacro("\\jmath", "\\html@mathml{\\@jmath}{\u0237}");
    defineMacro("\\llbracket", "\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char`\u27E6}}");
    defineMacro("\\rrbracket", "\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char`\u27E7}}");
    defineMacro("\u27E6", "\\llbracket");
    defineMacro("\u27E7", "\\rrbracket");
    defineMacro("\\lBrace", "\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char`\u2983}}");
    defineMacro("\\rBrace", "\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char`\u2984}}");
    defineMacro("\u2983", "\\lBrace");
    defineMacro("\u2984", "\\rBrace");
    defineMacro("\\minuso", "\\mathbin{\\html@mathml{{\\mathrlap{\\mathchoice{\\kern{0.145em}}{\\kern{0.145em}}{\\kern{0.1015em}}{\\kern{0.0725em}}\\circ}{-}}}{\\char`\u29B5}}");
    defineMacro("\u29B5", "\\minuso");
    defineMacro("\\darr", "\\downarrow");
    defineMacro("\\dArr", "\\Downarrow");
    defineMacro("\\Darr", "\\Downarrow");
    defineMacro("\\lang", "\\langle");
    defineMacro("\\rang", "\\rangle");
    defineMacro("\\uarr", "\\uparrow");
    defineMacro("\\uArr", "\\Uparrow");
    defineMacro("\\Uarr", "\\Uparrow");
    defineMacro("\\N", "\\mathbb{N}");
    defineMacro("\\R", "\\mathbb{R}");
    defineMacro("\\Z", "\\mathbb{Z}");
    defineMacro("\\alef", "\\aleph");
    defineMacro("\\alefsym", "\\aleph");
    defineMacro("\\Alpha", "\\mathrm{A}");
    defineMacro("\\Beta", "\\mathrm{B}");
    defineMacro("\\bull", "\\bullet");
    defineMacro("\\Chi", "\\mathrm{X}");
    defineMacro("\\clubs", "\\clubsuit");
    defineMacro("\\cnums", "\\mathbb{C}");
    defineMacro("\\Complex", "\\mathbb{C}");
    defineMacro("\\Dagger", "\\ddagger");
    defineMacro("\\diamonds", "\\diamondsuit");
    defineMacro("\\empty", "\\emptyset");
    defineMacro("\\Epsilon", "\\mathrm{E}");
    defineMacro("\\Eta", "\\mathrm{H}");
    defineMacro("\\exist", "\\exists");
    defineMacro("\\harr", "\\leftrightarrow");
    defineMacro("\\hArr", "\\Leftrightarrow");
    defineMacro("\\Harr", "\\Leftrightarrow");
    defineMacro("\\hearts", "\\heartsuit");
    defineMacro("\\image", "\\Im");
    defineMacro("\\infin", "\\infty");
    defineMacro("\\Iota", "\\mathrm{I}");
    defineMacro("\\isin", "\\in");
    defineMacro("\\Kappa", "\\mathrm{K}");
    defineMacro("\\larr", "\\leftarrow");
    defineMacro("\\lArr", "\\Leftarrow");
    defineMacro("\\Larr", "\\Leftarrow");
    defineMacro("\\lrarr", "\\leftrightarrow");
    defineMacro("\\lrArr", "\\Leftrightarrow");
    defineMacro("\\Lrarr", "\\Leftrightarrow");
    defineMacro("\\Mu", "\\mathrm{M}");
    defineMacro("\\natnums", "\\mathbb{N}");
    defineMacro("\\Nu", "\\mathrm{N}");
    defineMacro("\\Omicron", "\\mathrm{O}");
    defineMacro("\\plusmn", "\\pm");
    defineMacro("\\rarr", "\\rightarrow");
    defineMacro("\\rArr", "\\Rightarrow");
    defineMacro("\\Rarr", "\\Rightarrow");
    defineMacro("\\real", "\\Re");
    defineMacro("\\reals", "\\mathbb{R}");
    defineMacro("\\Reals", "\\mathbb{R}");
    defineMacro("\\Rho", "\\mathrm{P}");
    defineMacro("\\sdot", "\\cdot");
    defineMacro("\\sect", "\\S");
    defineMacro("\\spades", "\\spadesuit");
    defineMacro("\\sub", "\\subset");
    defineMacro("\\sube", "\\subseteq");
    defineMacro("\\supe", "\\supseteq");
    defineMacro("\\Tau", "\\mathrm{T}");
    defineMacro("\\thetasym", "\\vartheta");
    defineMacro("\\weierp", "\\wp");
    defineMacro("\\Zeta", "\\mathrm{Z}");
    defineMacro("\\argmin", "\\DOTSB\\operatorname*{arg\\,min}");
    defineMacro("\\argmax", "\\DOTSB\\operatorname*{arg\\,max}");
    defineMacro("\\plim", "\\DOTSB\\mathop{\\operatorname{plim}}\\limits");
    defineMacro("\\bra", "\\mathinner{\\langle{#1}|}");
    defineMacro("\\ket", "\\mathinner{|{#1}\\rangle}");
    defineMacro("\\braket", "\\mathinner{\\langle{#1}\\rangle}");
    defineMacro("\\Bra", "\\left\\langle#1\\right|");
    defineMacro("\\Ket", "\\left|#1\\right\\rangle");
    braketHelper = (one) => (context) => {
      var left = context.consumeArg().tokens;
      var middle = context.consumeArg().tokens;
      var middleDouble = context.consumeArg().tokens;
      var right = context.consumeArg().tokens;
      var oldMiddle = context.macros.get("|");
      var oldMiddleDouble = context.macros.get("\\|");
      context.macros.beginGroup();
      var midMacro = (double) => (context2) => {
        if (one) {
          context2.macros.set("|", oldMiddle);
          if (middleDouble.length) {
            context2.macros.set("\\|", oldMiddleDouble);
          }
        }
        var doubled = double;
        if (!double && middleDouble.length) {
          var nextToken = context2.future();
          if (nextToken.text === "|") {
            context2.popToken();
            doubled = true;
          }
        }
        return {
          tokens: doubled ? middleDouble : middle,
          numArgs: 0
        };
      };
      context.macros.set("|", midMacro(false));
      if (middleDouble.length) {
        context.macros.set("\\|", midMacro(true));
      }
      var arg = context.consumeArg().tokens;
      var expanded = context.expandTokens([
        ...right,
        ...arg,
        ...left
      ]);
      context.macros.endGroup();
      return {
        tokens: expanded.reverse(),
        numArgs: 0
      };
    };
    defineMacro("\\bra@ket", braketHelper(false));
    defineMacro("\\bra@set", braketHelper(true));
    defineMacro("\\Braket", "\\bra@ket{\\left\\langle}{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}");
    defineMacro("\\Set", "\\bra@set{\\left\\{\\:}{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}");
    defineMacro("\\set", "\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}");
    defineMacro("\\angln", "{\\angl n}");
    defineMacro("\\blue", "\\textcolor{##6495ed}{#1}");
    defineMacro("\\orange", "\\textcolor{##ffa500}{#1}");
    defineMacro("\\pink", "\\textcolor{##ff00af}{#1}");
    defineMacro("\\red", "\\textcolor{##df0030}{#1}");
    defineMacro("\\green", "\\textcolor{##28ae7b}{#1}");
    defineMacro("\\gray", "\\textcolor{gray}{#1}");
    defineMacro("\\purple", "\\textcolor{##9d38bd}{#1}");
    defineMacro("\\blueA", "\\textcolor{##ccfaff}{#1}");
    defineMacro("\\blueB", "\\textcolor{##80f6ff}{#1}");
    defineMacro("\\blueC", "\\textcolor{##63d9ea}{#1}");
    defineMacro("\\blueD", "\\textcolor{##11accd}{#1}");
    defineMacro("\\blueE", "\\textcolor{##0c7f99}{#1}");
    defineMacro("\\tealA", "\\textcolor{##94fff5}{#1}");
    defineMacro("\\tealB", "\\textcolor{##26edd5}{#1}");
    defineMacro("\\tealC", "\\textcolor{##01d1c1}{#1}");
    defineMacro("\\tealD", "\\textcolor{##01a995}{#1}");
    defineMacro("\\tealE", "\\textcolor{##208170}{#1}");
    defineMacro("\\greenA", "\\textcolor{##b6ffb0}{#1}");
    defineMacro("\\greenB", "\\textcolor{##8af281}{#1}");
    defineMacro("\\greenC", "\\textcolor{##74cf70}{#1}");
    defineMacro("\\greenD", "\\textcolor{##1fab54}{#1}");
    defineMacro("\\greenE", "\\textcolor{##0d923f}{#1}");
    defineMacro("\\goldA", "\\textcolor{##ffd0a9}{#1}");
    defineMacro("\\goldB", "\\textcolor{##ffbb71}{#1}");
    defineMacro("\\goldC", "\\textcolor{##ff9c39}{#1}");
    defineMacro("\\goldD", "\\textcolor{##e07d10}{#1}");
    defineMacro("\\goldE", "\\textcolor{##a75a05}{#1}");
    defineMacro("\\redA", "\\textcolor{##fca9a9}{#1}");
    defineMacro("\\redB", "\\textcolor{##ff8482}{#1}");
    defineMacro("\\redC", "\\textcolor{##f9685d}{#1}");
    defineMacro("\\redD", "\\textcolor{##e84d39}{#1}");
    defineMacro("\\redE", "\\textcolor{##bc2612}{#1}");
    defineMacro("\\maroonA", "\\textcolor{##ffbde0}{#1}");
    defineMacro("\\maroonB", "\\textcolor{##ff92c6}{#1}");
    defineMacro("\\maroonC", "\\textcolor{##ed5fa6}{#1}");
    defineMacro("\\maroonD", "\\textcolor{##ca337c}{#1}");
    defineMacro("\\maroonE", "\\textcolor{##9e034e}{#1}");
    defineMacro("\\purpleA", "\\textcolor{##ddd7ff}{#1}");
    defineMacro("\\purpleB", "\\textcolor{##c6b9fc}{#1}");
    defineMacro("\\purpleC", "\\textcolor{##aa87ff}{#1}");
    defineMacro("\\purpleD", "\\textcolor{##7854ab}{#1}");
    defineMacro("\\purpleE", "\\textcolor{##543b78}{#1}");
    defineMacro("\\mintA", "\\textcolor{##f5f9e8}{#1}");
    defineMacro("\\mintB", "\\textcolor{##edf2df}{#1}");
    defineMacro("\\mintC", "\\textcolor{##e0e5cc}{#1}");
    defineMacro("\\grayA", "\\textcolor{##f6f7f7}{#1}");
    defineMacro("\\grayB", "\\textcolor{##f0f1f2}{#1}");
    defineMacro("\\grayC", "\\textcolor{##e3e5e6}{#1}");
    defineMacro("\\grayD", "\\textcolor{##d6d8da}{#1}");
    defineMacro("\\grayE", "\\textcolor{##babec2}{#1}");
    defineMacro("\\grayF", "\\textcolor{##888d93}{#1}");
    defineMacro("\\grayG", "\\textcolor{##626569}{#1}");
    defineMacro("\\grayH", "\\textcolor{##3b3e40}{#1}");
    defineMacro("\\grayI", "\\textcolor{##21242c}{#1}");
    defineMacro("\\kaBlue", "\\textcolor{##314453}{#1}");
    defineMacro("\\kaGreen", "\\textcolor{##71B307}{#1}");
    implicitCommands = {
      "^": true,
      "_": true,
      "\\limits": true,
      "\\nolimits": true
    };
    MacroExpander = class {
      constructor(input, settings, mode) {
        this.settings = void 0;
        this.expansionCount = void 0;
        this.lexer = void 0;
        this.macros = void 0;
        this.stack = void 0;
        this.mode = void 0;
        this.settings = settings;
        this.expansionCount = 0;
        this.feed(input);
        this.macros = new Namespace(macros, settings.macros);
        this.mode = mode;
        this.stack = [];
      }
      feed(input) {
        this.lexer = new Lexer(input, this.settings);
      }
      switchMode(newMode) {
        this.mode = newMode;
      }
      beginGroup() {
        this.macros.beginGroup();
      }
      endGroup() {
        this.macros.endGroup();
      }
      endGroups() {
        this.macros.endGroups();
      }
      future() {
        if (this.stack.length === 0) {
          this.pushToken(this.lexer.lex());
        }
        return this.stack[this.stack.length - 1];
      }
      popToken() {
        this.future();
        return this.stack.pop();
      }
      pushToken(token) {
        this.stack.push(token);
      }
      pushTokens(tokens) {
        this.stack.push(...tokens);
      }
      scanArgument(isOptional) {
        var start;
        var end;
        var tokens;
        if (isOptional) {
          this.consumeSpaces();
          if (this.future().text !== "[") {
            return null;
          }
          start = this.popToken();
          ({
            tokens,
            end
          } = this.consumeArg(["]"]));
        } else {
          ({
            tokens,
            start,
            end
          } = this.consumeArg());
        }
        this.pushToken(new Token("EOF", end.loc));
        this.pushTokens(tokens);
        return start.range(end, "");
      }
      consumeSpaces() {
        for (; ; ) {
          var token = this.future();
          if (token.text === " ") {
            this.stack.pop();
          } else {
            break;
          }
        }
      }
      consumeArg(delims) {
        var tokens = [];
        var isDelimited = delims && delims.length > 0;
        if (!isDelimited) {
          this.consumeSpaces();
        }
        var start = this.future();
        var tok;
        var depth = 0;
        var match = 0;
        do {
          tok = this.popToken();
          tokens.push(tok);
          if (tok.text === "{") {
            ++depth;
          } else if (tok.text === "}") {
            --depth;
            if (depth === -1) {
              throw new ParseError("Extra }", tok);
            }
          } else if (tok.text === "EOF") {
            throw new ParseError("Unexpected end of input in a macro argument, expected '" + (delims && isDelimited ? delims[match] : "}") + "'", tok);
          }
          if (delims && isDelimited) {
            if ((depth === 0 || depth === 1 && delims[match] === "{") && tok.text === delims[match]) {
              ++match;
              if (match === delims.length) {
                tokens.splice(-match, match);
                break;
              }
            } else {
              match = 0;
            }
          }
        } while (depth !== 0 || isDelimited);
        if (start.text === "{" && tokens[tokens.length - 1].text === "}") {
          tokens.pop();
          tokens.shift();
        }
        tokens.reverse();
        return {
          tokens,
          start,
          end: tok
        };
      }
      consumeArgs(numArgs, delimiters2) {
        if (delimiters2) {
          if (delimiters2.length !== numArgs + 1) {
            throw new ParseError("The length of delimiters doesn't match the number of args!");
          }
          var delims = delimiters2[0];
          for (var i4 = 0; i4 < delims.length; i4++) {
            var tok = this.popToken();
            if (delims[i4] !== tok.text) {
              throw new ParseError("Use of the macro doesn't match its definition", tok);
            }
          }
        }
        var args = [];
        for (var _i = 0; _i < numArgs; _i++) {
          args.push(this.consumeArg(delimiters2 && delimiters2[_i + 1]).tokens);
        }
        return args;
      }
      expandOnce(expandableOnly) {
        var topToken = this.popToken();
        var name5 = topToken.text;
        var expansion = !topToken.noexpand ? this._getExpansion(name5) : null;
        if (expansion == null || expandableOnly && expansion.unexpandable) {
          if (expandableOnly && expansion == null && name5[0] === "\\" && !this.isDefined(name5)) {
            throw new ParseError("Undefined control sequence: " + name5);
          }
          this.pushToken(topToken);
          return topToken;
        }
        this.expansionCount++;
        if (this.expansionCount > this.settings.maxExpand) {
          throw new ParseError("Too many expansions: infinite loop or need to increase maxExpand setting");
        }
        var tokens = expansion.tokens;
        var args = this.consumeArgs(expansion.numArgs, expansion.delimiters);
        if (expansion.numArgs) {
          tokens = tokens.slice();
          for (var i4 = tokens.length - 1; i4 >= 0; --i4) {
            var tok = tokens[i4];
            if (tok.text === "#") {
              if (i4 === 0) {
                throw new ParseError("Incomplete placeholder at end of macro body", tok);
              }
              tok = tokens[--i4];
              if (tok.text === "#") {
                tokens.splice(i4 + 1, 1);
              } else if (/^[1-9]$/.test(tok.text)) {
                tokens.splice(i4, 2, ...args[+tok.text - 1]);
              } else {
                throw new ParseError("Not a valid argument number", tok);
              }
            }
          }
        }
        this.pushTokens(tokens);
        return tokens;
      }
      expandAfterFuture() {
        this.expandOnce();
        return this.future();
      }
      expandNextToken() {
        for (; ; ) {
          var expanded = this.expandOnce();
          if (expanded instanceof Token) {
            if (expanded.treatAsRelax) {
              expanded.text = "\\relax";
            }
            return this.stack.pop();
          }
        }
        throw new Error();
      }
      expandMacro(name5) {
        return this.macros.has(name5) ? this.expandTokens([new Token(name5)]) : void 0;
      }
      expandTokens(tokens) {
        var output = [];
        var oldStackLength = this.stack.length;
        this.pushTokens(tokens);
        while (this.stack.length > oldStackLength) {
          var expanded = this.expandOnce(true);
          if (expanded instanceof Token) {
            if (expanded.treatAsRelax) {
              expanded.noexpand = false;
              expanded.treatAsRelax = false;
            }
            output.push(this.stack.pop());
          }
        }
        return output;
      }
      expandMacroAsText(name5) {
        var tokens = this.expandMacro(name5);
        if (tokens) {
          return tokens.map((token) => token.text).join("");
        } else {
          return tokens;
        }
      }
      _getExpansion(name5) {
        var definition = this.macros.get(name5);
        if (definition == null) {
          return definition;
        }
        if (name5.length === 1) {
          var catcode = this.lexer.catcodes[name5];
          if (catcode != null && catcode !== 13) {
            return;
          }
        }
        var expansion = typeof definition === "function" ? definition(this) : definition;
        if (typeof expansion === "string") {
          var numArgs = 0;
          if (expansion.indexOf("#") !== -1) {
            var stripped = expansion.replace(/##/g, "");
            while (stripped.indexOf("#" + (numArgs + 1)) !== -1) {
              ++numArgs;
            }
          }
          var bodyLexer = new Lexer(expansion, this.settings);
          var tokens = [];
          var tok = bodyLexer.lex();
          while (tok.text !== "EOF") {
            tokens.push(tok);
            tok = bodyLexer.lex();
          }
          tokens.reverse();
          var expanded = {
            tokens,
            numArgs
          };
          return expanded;
        }
        return expansion;
      }
      isDefined(name5) {
        return this.macros.has(name5) || functions.hasOwnProperty(name5) || symbols.math.hasOwnProperty(name5) || symbols.text.hasOwnProperty(name5) || implicitCommands.hasOwnProperty(name5);
      }
      isExpandable(name5) {
        var macro = this.macros.get(name5);
        return macro != null ? typeof macro === "string" || typeof macro === "function" || !macro.unexpandable : functions.hasOwnProperty(name5) && !functions[name5].primitive;
      }
    };
    unicodeSubRegEx = /^[₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ]/;
    uSubsAndSups = Object.freeze({
      "\u208A": "+",
      "\u208B": "-",
      "\u208C": "=",
      "\u208D": "(",
      "\u208E": ")",
      "\u2080": "0",
      "\u2081": "1",
      "\u2082": "2",
      "\u2083": "3",
      "\u2084": "4",
      "\u2085": "5",
      "\u2086": "6",
      "\u2087": "7",
      "\u2088": "8",
      "\u2089": "9",
      "\u2090": "a",
      "\u2091": "e",
      "\u2095": "h",
      "\u1D62": "i",
      "\u2C7C": "j",
      "\u2096": "k",
      "\u2097": "l",
      "\u2098": "m",
      "\u2099": "n",
      "\u2092": "o",
      "\u209A": "p",
      "\u1D63": "r",
      "\u209B": "s",
      "\u209C": "t",
      "\u1D64": "u",
      "\u1D65": "v",
      "\u2093": "x",
      "\u1D66": "\u03B2",
      "\u1D67": "\u03B3",
      "\u1D68": "\u03C1",
      "\u1D69": "\u03D5",
      "\u1D6A": "\u03C7",
      "\u207A": "+",
      "\u207B": "-",
      "\u207C": "=",
      "\u207D": "(",
      "\u207E": ")",
      "\u2070": "0",
      "\xB9": "1",
      "\xB2": "2",
      "\xB3": "3",
      "\u2074": "4",
      "\u2075": "5",
      "\u2076": "6",
      "\u2077": "7",
      "\u2078": "8",
      "\u2079": "9",
      "\u1D2C": "A",
      "\u1D2E": "B",
      "\u1D30": "D",
      "\u1D31": "E",
      "\u1D33": "G",
      "\u1D34": "H",
      "\u1D35": "I",
      "\u1D36": "J",
      "\u1D37": "K",
      "\u1D38": "L",
      "\u1D39": "M",
      "\u1D3A": "N",
      "\u1D3C": "O",
      "\u1D3E": "P",
      "\u1D3F": "R",
      "\u1D40": "T",
      "\u1D41": "U",
      "\u2C7D": "V",
      "\u1D42": "W",
      "\u1D43": "a",
      "\u1D47": "b",
      "\u1D9C": "c",
      "\u1D48": "d",
      "\u1D49": "e",
      "\u1DA0": "f",
      "\u1D4D": "g",
      "\u02B0": "h",
      "\u2071": "i",
      "\u02B2": "j",
      "\u1D4F": "k",
      "\u02E1": "l",
      "\u1D50": "m",
      "\u207F": "n",
      "\u1D52": "o",
      "\u1D56": "p",
      "\u02B3": "r",
      "\u02E2": "s",
      "\u1D57": "t",
      "\u1D58": "u",
      "\u1D5B": "v",
      "\u02B7": "w",
      "\u02E3": "x",
      "\u02B8": "y",
      "\u1DBB": "z",
      "\u1D5D": "\u03B2",
      "\u1D5E": "\u03B3",
      "\u1D5F": "\u03B4",
      "\u1D60": "\u03D5",
      "\u1D61": "\u03C7",
      "\u1DBF": "\u03B8"
    });
    unicodeAccents = {
      "\u0301": {
        "text": "\\'",
        "math": "\\acute"
      },
      "\u0300": {
        "text": "\\`",
        "math": "\\grave"
      },
      "\u0308": {
        "text": '\\"',
        "math": "\\ddot"
      },
      "\u0303": {
        "text": "\\~",
        "math": "\\tilde"
      },
      "\u0304": {
        "text": "\\=",
        "math": "\\bar"
      },
      "\u0306": {
        "text": "\\u",
        "math": "\\breve"
      },
      "\u030C": {
        "text": "\\v",
        "math": "\\check"
      },
      "\u0302": {
        "text": "\\^",
        "math": "\\hat"
      },
      "\u0307": {
        "text": "\\.",
        "math": "\\dot"
      },
      "\u030A": {
        "text": "\\r",
        "math": "\\mathring"
      },
      "\u030B": {
        "text": "\\H"
      },
      "\u0327": {
        "text": "\\c"
      }
    };
    unicodeSymbols = {
      "\xE1": "a\u0301",
      "\xE0": "a\u0300",
      "\xE4": "a\u0308",
      "\u01DF": "a\u0308\u0304",
      "\xE3": "a\u0303",
      "\u0101": "a\u0304",
      "\u0103": "a\u0306",
      "\u1EAF": "a\u0306\u0301",
      "\u1EB1": "a\u0306\u0300",
      "\u1EB5": "a\u0306\u0303",
      "\u01CE": "a\u030C",
      "\xE2": "a\u0302",
      "\u1EA5": "a\u0302\u0301",
      "\u1EA7": "a\u0302\u0300",
      "\u1EAB": "a\u0302\u0303",
      "\u0227": "a\u0307",
      "\u01E1": "a\u0307\u0304",
      "\xE5": "a\u030A",
      "\u01FB": "a\u030A\u0301",
      "\u1E03": "b\u0307",
      "\u0107": "c\u0301",
      "\u1E09": "c\u0327\u0301",
      "\u010D": "c\u030C",
      "\u0109": "c\u0302",
      "\u010B": "c\u0307",
      "\xE7": "c\u0327",
      "\u010F": "d\u030C",
      "\u1E0B": "d\u0307",
      "\u1E11": "d\u0327",
      "\xE9": "e\u0301",
      "\xE8": "e\u0300",
      "\xEB": "e\u0308",
      "\u1EBD": "e\u0303",
      "\u0113": "e\u0304",
      "\u1E17": "e\u0304\u0301",
      "\u1E15": "e\u0304\u0300",
      "\u0115": "e\u0306",
      "\u1E1D": "e\u0327\u0306",
      "\u011B": "e\u030C",
      "\xEA": "e\u0302",
      "\u1EBF": "e\u0302\u0301",
      "\u1EC1": "e\u0302\u0300",
      "\u1EC5": "e\u0302\u0303",
      "\u0117": "e\u0307",
      "\u0229": "e\u0327",
      "\u1E1F": "f\u0307",
      "\u01F5": "g\u0301",
      "\u1E21": "g\u0304",
      "\u011F": "g\u0306",
      "\u01E7": "g\u030C",
      "\u011D": "g\u0302",
      "\u0121": "g\u0307",
      "\u0123": "g\u0327",
      "\u1E27": "h\u0308",
      "\u021F": "h\u030C",
      "\u0125": "h\u0302",
      "\u1E23": "h\u0307",
      "\u1E29": "h\u0327",
      "\xED": "i\u0301",
      "\xEC": "i\u0300",
      "\xEF": "i\u0308",
      "\u1E2F": "i\u0308\u0301",
      "\u0129": "i\u0303",
      "\u012B": "i\u0304",
      "\u012D": "i\u0306",
      "\u01D0": "i\u030C",
      "\xEE": "i\u0302",
      "\u01F0": "j\u030C",
      "\u0135": "j\u0302",
      "\u1E31": "k\u0301",
      "\u01E9": "k\u030C",
      "\u0137": "k\u0327",
      "\u013A": "l\u0301",
      "\u013E": "l\u030C",
      "\u013C": "l\u0327",
      "\u1E3F": "m\u0301",
      "\u1E41": "m\u0307",
      "\u0144": "n\u0301",
      "\u01F9": "n\u0300",
      "\xF1": "n\u0303",
      "\u0148": "n\u030C",
      "\u1E45": "n\u0307",
      "\u0146": "n\u0327",
      "\xF3": "o\u0301",
      "\xF2": "o\u0300",
      "\xF6": "o\u0308",
      "\u022B": "o\u0308\u0304",
      "\xF5": "o\u0303",
      "\u1E4D": "o\u0303\u0301",
      "\u1E4F": "o\u0303\u0308",
      "\u022D": "o\u0303\u0304",
      "\u014D": "o\u0304",
      "\u1E53": "o\u0304\u0301",
      "\u1E51": "o\u0304\u0300",
      "\u014F": "o\u0306",
      "\u01D2": "o\u030C",
      "\xF4": "o\u0302",
      "\u1ED1": "o\u0302\u0301",
      "\u1ED3": "o\u0302\u0300",
      "\u1ED7": "o\u0302\u0303",
      "\u022F": "o\u0307",
      "\u0231": "o\u0307\u0304",
      "\u0151": "o\u030B",
      "\u1E55": "p\u0301",
      "\u1E57": "p\u0307",
      "\u0155": "r\u0301",
      "\u0159": "r\u030C",
      "\u1E59": "r\u0307",
      "\u0157": "r\u0327",
      "\u015B": "s\u0301",
      "\u1E65": "s\u0301\u0307",
      "\u0161": "s\u030C",
      "\u1E67": "s\u030C\u0307",
      "\u015D": "s\u0302",
      "\u1E61": "s\u0307",
      "\u015F": "s\u0327",
      "\u1E97": "t\u0308",
      "\u0165": "t\u030C",
      "\u1E6B": "t\u0307",
      "\u0163": "t\u0327",
      "\xFA": "u\u0301",
      "\xF9": "u\u0300",
      "\xFC": "u\u0308",
      "\u01D8": "u\u0308\u0301",
      "\u01DC": "u\u0308\u0300",
      "\u01D6": "u\u0308\u0304",
      "\u01DA": "u\u0308\u030C",
      "\u0169": "u\u0303",
      "\u1E79": "u\u0303\u0301",
      "\u016B": "u\u0304",
      "\u1E7B": "u\u0304\u0308",
      "\u016D": "u\u0306",
      "\u01D4": "u\u030C",
      "\xFB": "u\u0302",
      "\u016F": "u\u030A",
      "\u0171": "u\u030B",
      "\u1E7D": "v\u0303",
      "\u1E83": "w\u0301",
      "\u1E81": "w\u0300",
      "\u1E85": "w\u0308",
      "\u0175": "w\u0302",
      "\u1E87": "w\u0307",
      "\u1E98": "w\u030A",
      "\u1E8D": "x\u0308",
      "\u1E8B": "x\u0307",
      "\xFD": "y\u0301",
      "\u1EF3": "y\u0300",
      "\xFF": "y\u0308",
      "\u1EF9": "y\u0303",
      "\u0233": "y\u0304",
      "\u0177": "y\u0302",
      "\u1E8F": "y\u0307",
      "\u1E99": "y\u030A",
      "\u017A": "z\u0301",
      "\u017E": "z\u030C",
      "\u1E91": "z\u0302",
      "\u017C": "z\u0307",
      "\xC1": "A\u0301",
      "\xC0": "A\u0300",
      "\xC4": "A\u0308",
      "\u01DE": "A\u0308\u0304",
      "\xC3": "A\u0303",
      "\u0100": "A\u0304",
      "\u0102": "A\u0306",
      "\u1EAE": "A\u0306\u0301",
      "\u1EB0": "A\u0306\u0300",
      "\u1EB4": "A\u0306\u0303",
      "\u01CD": "A\u030C",
      "\xC2": "A\u0302",
      "\u1EA4": "A\u0302\u0301",
      "\u1EA6": "A\u0302\u0300",
      "\u1EAA": "A\u0302\u0303",
      "\u0226": "A\u0307",
      "\u01E0": "A\u0307\u0304",
      "\xC5": "A\u030A",
      "\u01FA": "A\u030A\u0301",
      "\u1E02": "B\u0307",
      "\u0106": "C\u0301",
      "\u1E08": "C\u0327\u0301",
      "\u010C": "C\u030C",
      "\u0108": "C\u0302",
      "\u010A": "C\u0307",
      "\xC7": "C\u0327",
      "\u010E": "D\u030C",
      "\u1E0A": "D\u0307",
      "\u1E10": "D\u0327",
      "\xC9": "E\u0301",
      "\xC8": "E\u0300",
      "\xCB": "E\u0308",
      "\u1EBC": "E\u0303",
      "\u0112": "E\u0304",
      "\u1E16": "E\u0304\u0301",
      "\u1E14": "E\u0304\u0300",
      "\u0114": "E\u0306",
      "\u1E1C": "E\u0327\u0306",
      "\u011A": "E\u030C",
      "\xCA": "E\u0302",
      "\u1EBE": "E\u0302\u0301",
      "\u1EC0": "E\u0302\u0300",
      "\u1EC4": "E\u0302\u0303",
      "\u0116": "E\u0307",
      "\u0228": "E\u0327",
      "\u1E1E": "F\u0307",
      "\u01F4": "G\u0301",
      "\u1E20": "G\u0304",
      "\u011E": "G\u0306",
      "\u01E6": "G\u030C",
      "\u011C": "G\u0302",
      "\u0120": "G\u0307",
      "\u0122": "G\u0327",
      "\u1E26": "H\u0308",
      "\u021E": "H\u030C",
      "\u0124": "H\u0302",
      "\u1E22": "H\u0307",
      "\u1E28": "H\u0327",
      "\xCD": "I\u0301",
      "\xCC": "I\u0300",
      "\xCF": "I\u0308",
      "\u1E2E": "I\u0308\u0301",
      "\u0128": "I\u0303",
      "\u012A": "I\u0304",
      "\u012C": "I\u0306",
      "\u01CF": "I\u030C",
      "\xCE": "I\u0302",
      "\u0130": "I\u0307",
      "\u0134": "J\u0302",
      "\u1E30": "K\u0301",
      "\u01E8": "K\u030C",
      "\u0136": "K\u0327",
      "\u0139": "L\u0301",
      "\u013D": "L\u030C",
      "\u013B": "L\u0327",
      "\u1E3E": "M\u0301",
      "\u1E40": "M\u0307",
      "\u0143": "N\u0301",
      "\u01F8": "N\u0300",
      "\xD1": "N\u0303",
      "\u0147": "N\u030C",
      "\u1E44": "N\u0307",
      "\u0145": "N\u0327",
      "\xD3": "O\u0301",
      "\xD2": "O\u0300",
      "\xD6": "O\u0308",
      "\u022A": "O\u0308\u0304",
      "\xD5": "O\u0303",
      "\u1E4C": "O\u0303\u0301",
      "\u1E4E": "O\u0303\u0308",
      "\u022C": "O\u0303\u0304",
      "\u014C": "O\u0304",
      "\u1E52": "O\u0304\u0301",
      "\u1E50": "O\u0304\u0300",
      "\u014E": "O\u0306",
      "\u01D1": "O\u030C",
      "\xD4": "O\u0302",
      "\u1ED0": "O\u0302\u0301",
      "\u1ED2": "O\u0302\u0300",
      "\u1ED6": "O\u0302\u0303",
      "\u022E": "O\u0307",
      "\u0230": "O\u0307\u0304",
      "\u0150": "O\u030B",
      "\u1E54": "P\u0301",
      "\u1E56": "P\u0307",
      "\u0154": "R\u0301",
      "\u0158": "R\u030C",
      "\u1E58": "R\u0307",
      "\u0156": "R\u0327",
      "\u015A": "S\u0301",
      "\u1E64": "S\u0301\u0307",
      "\u0160": "S\u030C",
      "\u1E66": "S\u030C\u0307",
      "\u015C": "S\u0302",
      "\u1E60": "S\u0307",
      "\u015E": "S\u0327",
      "\u0164": "T\u030C",
      "\u1E6A": "T\u0307",
      "\u0162": "T\u0327",
      "\xDA": "U\u0301",
      "\xD9": "U\u0300",
      "\xDC": "U\u0308",
      "\u01D7": "U\u0308\u0301",
      "\u01DB": "U\u0308\u0300",
      "\u01D5": "U\u0308\u0304",
      "\u01D9": "U\u0308\u030C",
      "\u0168": "U\u0303",
      "\u1E78": "U\u0303\u0301",
      "\u016A": "U\u0304",
      "\u1E7A": "U\u0304\u0308",
      "\u016C": "U\u0306",
      "\u01D3": "U\u030C",
      "\xDB": "U\u0302",
      "\u016E": "U\u030A",
      "\u0170": "U\u030B",
      "\u1E7C": "V\u0303",
      "\u1E82": "W\u0301",
      "\u1E80": "W\u0300",
      "\u1E84": "W\u0308",
      "\u0174": "W\u0302",
      "\u1E86": "W\u0307",
      "\u1E8C": "X\u0308",
      "\u1E8A": "X\u0307",
      "\xDD": "Y\u0301",
      "\u1EF2": "Y\u0300",
      "\u0178": "Y\u0308",
      "\u1EF8": "Y\u0303",
      "\u0232": "Y\u0304",
      "\u0176": "Y\u0302",
      "\u1E8E": "Y\u0307",
      "\u0179": "Z\u0301",
      "\u017D": "Z\u030C",
      "\u1E90": "Z\u0302",
      "\u017B": "Z\u0307",
      "\u03AC": "\u03B1\u0301",
      "\u1F70": "\u03B1\u0300",
      "\u1FB1": "\u03B1\u0304",
      "\u1FB0": "\u03B1\u0306",
      "\u03AD": "\u03B5\u0301",
      "\u1F72": "\u03B5\u0300",
      "\u03AE": "\u03B7\u0301",
      "\u1F74": "\u03B7\u0300",
      "\u03AF": "\u03B9\u0301",
      "\u1F76": "\u03B9\u0300",
      "\u03CA": "\u03B9\u0308",
      "\u0390": "\u03B9\u0308\u0301",
      "\u1FD2": "\u03B9\u0308\u0300",
      "\u1FD1": "\u03B9\u0304",
      "\u1FD0": "\u03B9\u0306",
      "\u03CC": "\u03BF\u0301",
      "\u1F78": "\u03BF\u0300",
      "\u03CD": "\u03C5\u0301",
      "\u1F7A": "\u03C5\u0300",
      "\u03CB": "\u03C5\u0308",
      "\u03B0": "\u03C5\u0308\u0301",
      "\u1FE2": "\u03C5\u0308\u0300",
      "\u1FE1": "\u03C5\u0304",
      "\u1FE0": "\u03C5\u0306",
      "\u03CE": "\u03C9\u0301",
      "\u1F7C": "\u03C9\u0300",
      "\u038E": "\u03A5\u0301",
      "\u1FEA": "\u03A5\u0300",
      "\u03AB": "\u03A5\u0308",
      "\u1FE9": "\u03A5\u0304",
      "\u1FE8": "\u03A5\u0306",
      "\u038F": "\u03A9\u0301",
      "\u1FFA": "\u03A9\u0300"
    };
    Parser = class {
      constructor(input, settings) {
        this.mode = void 0;
        this.gullet = void 0;
        this.settings = void 0;
        this.leftrightDepth = void 0;
        this.nextToken = void 0;
        this.mode = "math";
        this.gullet = new MacroExpander(input, settings, this.mode);
        this.settings = settings;
        this.leftrightDepth = 0;
      }
      expect(text2, consume) {
        if (consume === void 0) {
          consume = true;
        }
        if (this.fetch().text !== text2) {
          throw new ParseError("Expected '" + text2 + "', got '" + this.fetch().text + "'", this.fetch());
        }
        if (consume) {
          this.consume();
        }
      }
      consume() {
        this.nextToken = null;
      }
      fetch() {
        if (this.nextToken == null) {
          this.nextToken = this.gullet.expandNextToken();
        }
        return this.nextToken;
      }
      switchMode(newMode) {
        this.mode = newMode;
        this.gullet.switchMode(newMode);
      }
      parse() {
        if (!this.settings.globalGroup) {
          this.gullet.beginGroup();
        }
        if (this.settings.colorIsTextColor) {
          this.gullet.macros.set("\\color", "\\textcolor");
        }
        try {
          var parse2 = this.parseExpression(false);
          this.expect("EOF");
          if (!this.settings.globalGroup) {
            this.gullet.endGroup();
          }
          return parse2;
        } finally {
          this.gullet.endGroups();
        }
      }
      subparse(tokens) {
        var oldToken = this.nextToken;
        this.consume();
        this.gullet.pushToken(new Token("}"));
        this.gullet.pushTokens(tokens);
        var parse2 = this.parseExpression(false);
        this.expect("}");
        this.nextToken = oldToken;
        return parse2;
      }
      parseExpression(breakOnInfix, breakOnTokenText) {
        var body = [];
        while (true) {
          if (this.mode === "math") {
            this.consumeSpaces();
          }
          var lex = this.fetch();
          if (Parser.endOfExpression.indexOf(lex.text) !== -1) {
            break;
          }
          if (breakOnTokenText && lex.text === breakOnTokenText) {
            break;
          }
          if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {
            break;
          }
          var atom = this.parseAtom(breakOnTokenText);
          if (!atom) {
            break;
          } else if (atom.type === "internal") {
            continue;
          }
          body.push(atom);
        }
        if (this.mode === "text") {
          this.formLigatures(body);
        }
        return this.handleInfixNodes(body);
      }
      handleInfixNodes(body) {
        var overIndex = -1;
        var funcName;
        for (var i4 = 0; i4 < body.length; i4++) {
          if (body[i4].type === "infix") {
            if (overIndex !== -1) {
              throw new ParseError("only one infix operator per group", body[i4].token);
            }
            overIndex = i4;
            funcName = body[i4].replaceWith;
          }
        }
        if (overIndex !== -1 && funcName) {
          var numerNode;
          var denomNode;
          var numerBody = body.slice(0, overIndex);
          var denomBody = body.slice(overIndex + 1);
          if (numerBody.length === 1 && numerBody[0].type === "ordgroup") {
            numerNode = numerBody[0];
          } else {
            numerNode = {
              type: "ordgroup",
              mode: this.mode,
              body: numerBody
            };
          }
          if (denomBody.length === 1 && denomBody[0].type === "ordgroup") {
            denomNode = denomBody[0];
          } else {
            denomNode = {
              type: "ordgroup",
              mode: this.mode,
              body: denomBody
            };
          }
          var node;
          if (funcName === "\\\\abovefrac") {
            node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);
          } else {
            node = this.callFunction(funcName, [numerNode, denomNode], []);
          }
          return [node];
        } else {
          return body;
        }
      }
      handleSupSubscript(name5) {
        var symbolToken = this.fetch();
        var symbol = symbolToken.text;
        this.consume();
        this.consumeSpaces();
        var group = this.parseGroup(name5);
        if (!group) {
          throw new ParseError("Expected group after '" + symbol + "'", symbolToken);
        }
        return group;
      }
      formatUnsupportedCmd(text2) {
        var textordArray = [];
        for (var i4 = 0; i4 < text2.length; i4++) {
          textordArray.push({
            type: "textord",
            mode: "text",
            text: text2[i4]
          });
        }
        var textNode = {
          type: "text",
          mode: this.mode,
          body: textordArray
        };
        var colorNode = {
          type: "color",
          mode: this.mode,
          color: this.settings.errorColor,
          body: [textNode]
        };
        return colorNode;
      }
      parseAtom(breakOnTokenText) {
        var base = this.parseGroup("atom", breakOnTokenText);
        if (this.mode === "text") {
          return base;
        }
        var superscript;
        var subscript;
        while (true) {
          this.consumeSpaces();
          var lex = this.fetch();
          if (lex.text === "\\limits" || lex.text === "\\nolimits") {
            if (base && base.type === "op") {
              var limits = lex.text === "\\limits";
              base.limits = limits;
              base.alwaysHandleSupSub = true;
            } else if (base && base.type === "operatorname") {
              if (base.alwaysHandleSupSub) {
                base.limits = lex.text === "\\limits";
              }
            } else {
              throw new ParseError("Limit controls must follow a math operator", lex);
            }
            this.consume();
          } else if (lex.text === "^") {
            if (superscript) {
              throw new ParseError("Double superscript", lex);
            }
            superscript = this.handleSupSubscript("superscript");
          } else if (lex.text === "_") {
            if (subscript) {
              throw new ParseError("Double subscript", lex);
            }
            subscript = this.handleSupSubscript("subscript");
          } else if (lex.text === "'") {
            if (superscript) {
              throw new ParseError("Double superscript", lex);
            }
            var prime = {
              type: "textord",
              mode: this.mode,
              text: "\\prime"
            };
            var primes = [prime];
            this.consume();
            while (this.fetch().text === "'") {
              primes.push(prime);
              this.consume();
            }
            if (this.fetch().text === "^") {
              primes.push(this.handleSupSubscript("superscript"));
            }
            superscript = {
              type: "ordgroup",
              mode: this.mode,
              body: primes
            };
          } else if (uSubsAndSups[lex.text]) {
            var str = uSubsAndSups[lex.text];
            var isSub = unicodeSubRegEx.test(lex.text);
            this.consume();
            while (true) {
              var token = this.fetch().text;
              if (!uSubsAndSups[token]) {
                break;
              }
              if (unicodeSubRegEx.test(token) !== isSub) {
                break;
              }
              this.consume();
              str += uSubsAndSups[token];
            }
            var body = new Parser(str, this.settings).parse();
            if (isSub) {
              subscript = {
                type: "ordgroup",
                mode: "math",
                body
              };
            } else {
              superscript = {
                type: "ordgroup",
                mode: "math",
                body
              };
            }
          } else {
            break;
          }
        }
        if (superscript || subscript) {
          return {
            type: "supsub",
            mode: this.mode,
            base,
            sup: superscript,
            sub: subscript
          };
        } else {
          return base;
        }
      }
      parseFunction(breakOnTokenText, name5) {
        var token = this.fetch();
        var func = token.text;
        var funcData = functions[func];
        if (!funcData) {
          return null;
        }
        this.consume();
        if (name5 && name5 !== "atom" && !funcData.allowedInArgument) {
          throw new ParseError("Got function '" + func + "' with no arguments" + (name5 ? " as " + name5 : ""), token);
        } else if (this.mode === "text" && !funcData.allowedInText) {
          throw new ParseError("Can't use function '" + func + "' in text mode", token);
        } else if (this.mode === "math" && funcData.allowedInMath === false) {
          throw new ParseError("Can't use function '" + func + "' in math mode", token);
        }
        var {
          args,
          optArgs
        } = this.parseArguments(func, funcData);
        return this.callFunction(func, args, optArgs, token, breakOnTokenText);
      }
      callFunction(name5, args, optArgs, token, breakOnTokenText) {
        var context = {
          funcName: name5,
          parser: this,
          token,
          breakOnTokenText
        };
        var func = functions[name5];
        if (func && func.handler) {
          return func.handler(context, args, optArgs);
        } else {
          throw new ParseError("No function handler for " + name5);
        }
      }
      parseArguments(func, funcData) {
        var totalArgs = funcData.numArgs + funcData.numOptionalArgs;
        if (totalArgs === 0) {
          return {
            args: [],
            optArgs: []
          };
        }
        var args = [];
        var optArgs = [];
        for (var i4 = 0; i4 < totalArgs; i4++) {
          var argType = funcData.argTypes && funcData.argTypes[i4];
          var isOptional = i4 < funcData.numOptionalArgs;
          if (funcData.primitive && argType == null || funcData.type === "sqrt" && i4 === 1 && optArgs[0] == null) {
            argType = "primitive";
          }
          var arg = this.parseGroupOfType("argument to '" + func + "'", argType, isOptional);
          if (isOptional) {
            optArgs.push(arg);
          } else if (arg != null) {
            args.push(arg);
          } else {
            throw new ParseError("Null argument, please report this as a bug");
          }
        }
        return {
          args,
          optArgs
        };
      }
      parseGroupOfType(name5, type, optional) {
        switch (type) {
          case "color":
            return this.parseColorGroup(optional);
          case "size":
            return this.parseSizeGroup(optional);
          case "url":
            return this.parseUrlGroup(optional);
          case "math":
          case "text":
            return this.parseArgumentGroup(optional, type);
          case "hbox": {
            var group = this.parseArgumentGroup(optional, "text");
            return group != null ? {
              type: "styling",
              mode: group.mode,
              body: [group],
              style: "text"
            } : null;
          }
          case "raw": {
            var token = this.parseStringGroup("raw", optional);
            return token != null ? {
              type: "raw",
              mode: "text",
              string: token.text
            } : null;
          }
          case "primitive": {
            if (optional) {
              throw new ParseError("A primitive argument cannot be optional");
            }
            var _group = this.parseGroup(name5);
            if (_group == null) {
              throw new ParseError("Expected group as " + name5, this.fetch());
            }
            return _group;
          }
          case "original":
          case null:
          case void 0:
            return this.parseArgumentGroup(optional);
          default:
            throw new ParseError("Unknown group type as " + name5, this.fetch());
        }
      }
      consumeSpaces() {
        while (this.fetch().text === " ") {
          this.consume();
        }
      }
      parseStringGroup(modeName, optional) {
        var argToken = this.gullet.scanArgument(optional);
        if (argToken == null) {
          return null;
        }
        var str = "";
        var nextToken;
        while ((nextToken = this.fetch()).text !== "EOF") {
          str += nextToken.text;
          this.consume();
        }
        this.consume();
        argToken.text = str;
        return argToken;
      }
      parseRegexGroup(regex, modeName) {
        var firstToken = this.fetch();
        var lastToken = firstToken;
        var str = "";
        var nextToken;
        while ((nextToken = this.fetch()).text !== "EOF" && regex.test(str + nextToken.text)) {
          lastToken = nextToken;
          str += lastToken.text;
          this.consume();
        }
        if (str === "") {
          throw new ParseError("Invalid " + modeName + ": '" + firstToken.text + "'", firstToken);
        }
        return firstToken.range(lastToken, str);
      }
      parseColorGroup(optional) {
        var res = this.parseStringGroup("color", optional);
        if (res == null) {
          return null;
        }
        var match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);
        if (!match) {
          throw new ParseError("Invalid color: '" + res.text + "'", res);
        }
        var color = match[0];
        if (/^[0-9a-f]{6}$/i.test(color)) {
          color = "#" + color;
        }
        return {
          type: "color-token",
          mode: this.mode,
          color
        };
      }
      parseSizeGroup(optional) {
        var res;
        var isBlank = false;
        this.gullet.consumeSpaces();
        if (!optional && this.gullet.future().text !== "{") {
          res = this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/, "size");
        } else {
          res = this.parseStringGroup("size", optional);
        }
        if (!res) {
          return null;
        }
        if (!optional && res.text.length === 0) {
          res.text = "0pt";
          isBlank = true;
        }
        var match = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(res.text);
        if (!match) {
          throw new ParseError("Invalid size: '" + res.text + "'", res);
        }
        var data = {
          number: +(match[1] + match[2]),
          unit: match[3]
        };
        if (!validUnit(data)) {
          throw new ParseError("Invalid unit: '" + data.unit + "'", res);
        }
        return {
          type: "size",
          mode: this.mode,
          value: data,
          isBlank
        };
      }
      parseUrlGroup(optional) {
        this.gullet.lexer.setCatcode("%", 13);
        this.gullet.lexer.setCatcode("~", 12);
        var res = this.parseStringGroup("url", optional);
        this.gullet.lexer.setCatcode("%", 14);
        this.gullet.lexer.setCatcode("~", 13);
        if (res == null) {
          return null;
        }
        var url = res.text.replace(/\\([#$%&~_^{}])/g, "$1");
        return {
          type: "url",
          mode: this.mode,
          url
        };
      }
      parseArgumentGroup(optional, mode) {
        var argToken = this.gullet.scanArgument(optional);
        if (argToken == null) {
          return null;
        }
        var outerMode = this.mode;
        if (mode) {
          this.switchMode(mode);
        }
        this.gullet.beginGroup();
        var expression = this.parseExpression(false, "EOF");
        this.expect("EOF");
        this.gullet.endGroup();
        var result = {
          type: "ordgroup",
          mode: this.mode,
          loc: argToken.loc,
          body: expression
        };
        if (mode) {
          this.switchMode(outerMode);
        }
        return result;
      }
      parseGroup(name5, breakOnTokenText) {
        var firstToken = this.fetch();
        var text2 = firstToken.text;
        var result;
        if (text2 === "{" || text2 === "\\begingroup") {
          this.consume();
          var groupEnd = text2 === "{" ? "}" : "\\endgroup";
          this.gullet.beginGroup();
          var expression = this.parseExpression(false, groupEnd);
          var lastToken = this.fetch();
          this.expect(groupEnd);
          this.gullet.endGroup();
          result = {
            type: "ordgroup",
            mode: this.mode,
            loc: SourceLocation.range(firstToken, lastToken),
            body: expression,
            semisimple: text2 === "\\begingroup" || void 0
          };
        } else {
          result = this.parseFunction(breakOnTokenText, name5) || this.parseSymbol();
          if (result == null && text2[0] === "\\" && !implicitCommands.hasOwnProperty(text2)) {
            if (this.settings.throwOnError) {
              throw new ParseError("Undefined control sequence: " + text2, firstToken);
            }
            result = this.formatUnsupportedCmd(text2);
            this.consume();
          }
        }
        return result;
      }
      formLigatures(group) {
        var n3 = group.length - 1;
        for (var i4 = 0; i4 < n3; ++i4) {
          var a4 = group[i4];
          var v6 = a4.text;
          if (v6 === "-" && group[i4 + 1].text === "-") {
            if (i4 + 1 < n3 && group[i4 + 2].text === "-") {
              group.splice(i4, 3, {
                type: "textord",
                mode: "text",
                loc: SourceLocation.range(a4, group[i4 + 2]),
                text: "---"
              });
              n3 -= 2;
            } else {
              group.splice(i4, 2, {
                type: "textord",
                mode: "text",
                loc: SourceLocation.range(a4, group[i4 + 1]),
                text: "--"
              });
              n3 -= 1;
            }
          }
          if ((v6 === "'" || v6 === "`") && group[i4 + 1].text === v6) {
            group.splice(i4, 2, {
              type: "textord",
              mode: "text",
              loc: SourceLocation.range(a4, group[i4 + 1]),
              text: v6 + v6
            });
            n3 -= 1;
          }
        }
      }
      parseSymbol() {
        var nucleus = this.fetch();
        var text2 = nucleus.text;
        if (/^\\verb[^a-zA-Z]/.test(text2)) {
          this.consume();
          var arg = text2.slice(5);
          var star = arg.charAt(0) === "*";
          if (star) {
            arg = arg.slice(1);
          }
          if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {
            throw new ParseError("\\verb assertion failed --\n                    please report what input caused this bug");
          }
          arg = arg.slice(1, -1);
          return {
            type: "verb",
            mode: "text",
            body: arg,
            star
          };
        }
        if (unicodeSymbols.hasOwnProperty(text2[0]) && !symbols[this.mode][text2[0]]) {
          if (this.settings.strict && this.mode === "math") {
            this.settings.reportNonstrict("unicodeTextInMathMode", 'Accented Unicode text character "' + text2[0] + '" used in math mode', nucleus);
          }
          text2 = unicodeSymbols[text2[0]] + text2.slice(1);
        }
        var match = combiningDiacriticalMarksEndRegex.exec(text2);
        if (match) {
          text2 = text2.substring(0, match.index);
          if (text2 === "i") {
            text2 = "\u0131";
          } else if (text2 === "j") {
            text2 = "\u0237";
          }
        }
        var symbol;
        if (symbols[this.mode][text2]) {
          if (this.settings.strict && this.mode === "math" && extraLatin.indexOf(text2) >= 0) {
            this.settings.reportNonstrict("unicodeTextInMathMode", 'Latin-1/Unicode text character "' + text2[0] + '" used in math mode', nucleus);
          }
          var group = symbols[this.mode][text2].group;
          var loc = SourceLocation.range(nucleus);
          var s6;
          if (ATOMS.hasOwnProperty(group)) {
            var family = group;
            s6 = {
              type: "atom",
              mode: this.mode,
              family,
              loc,
              text: text2
            };
          } else {
            s6 = {
              type: group,
              mode: this.mode,
              loc,
              text: text2
            };
          }
          symbol = s6;
        } else if (text2.charCodeAt(0) >= 128) {
          if (this.settings.strict) {
            if (!supportedCodepoint(text2.charCodeAt(0))) {
              this.settings.reportNonstrict("unknownSymbol", 'Unrecognized Unicode character "' + text2[0] + '"' + (" (" + text2.charCodeAt(0) + ")"), nucleus);
            } else if (this.mode === "math") {
              this.settings.reportNonstrict("unicodeTextInMathMode", 'Unicode text character "' + text2[0] + '" used in math mode', nucleus);
            }
          }
          symbol = {
            type: "textord",
            mode: "text",
            loc: SourceLocation.range(nucleus),
            text: text2
          };
        } else {
          return null;
        }
        this.consume();
        if (match) {
          for (var i4 = 0; i4 < match[0].length; i4++) {
            var accent2 = match[0][i4];
            if (!unicodeAccents[accent2]) {
              throw new ParseError("Unknown accent ' " + accent2 + "'", nucleus);
            }
            var command = unicodeAccents[accent2][this.mode] || unicodeAccents[accent2].text;
            if (!command) {
              throw new ParseError("Accent " + accent2 + " unsupported in " + this.mode + " mode", nucleus);
            }
            symbol = {
              type: "accent",
              mode: this.mode,
              loc: SourceLocation.range(nucleus),
              label: command,
              isStretchy: false,
              isShifty: true,
              base: symbol
            };
          }
        }
        return symbol;
      }
    };
    Parser.endOfExpression = ["}", "\\endgroup", "\\end", "\\right", "&"];
    parseTree = function parseTree2(toParse, settings) {
      if (!(typeof toParse === "string" || toParse instanceof String)) {
        throw new TypeError("KaTeX can only parse string typed expression");
      }
      var parser = new Parser(toParse, settings);
      delete parser.gullet.macros.current["\\df@tag"];
      var tree = parser.parse();
      delete parser.gullet.macros.current["\\current@color"];
      delete parser.gullet.macros.current["\\color"];
      if (parser.gullet.macros.get("\\df@tag")) {
        if (!settings.displayMode) {
          throw new ParseError("\\tag works only in display equations");
        }
        tree = [{
          type: "tag",
          mode: "text",
          body: tree,
          tag: parser.subparse([new Token("\\df@tag")])
        }];
      }
      return tree;
    };
    render = function render2(expression, baseNode, options) {
      baseNode.textContent = "";
      var node = renderToDomTree(expression, options).toNode();
      baseNode.appendChild(node);
    };
    if (typeof document !== "undefined") {
      if (document.compatMode !== "CSS1Compat") {
        typeof console !== "undefined" && console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype.");
        render = function render3() {
          throw new ParseError("KaTeX doesn't work in quirks mode.");
        };
      }
    }
    renderToString = function renderToString2(expression, options) {
      var markup = renderToDomTree(expression, options).toMarkup();
      return markup;
    };
    generateParseTree = function generateParseTree2(expression, options) {
      var settings = new Settings(options);
      return parseTree(expression, settings);
    };
    renderError = function renderError2(error, expression, options) {
      if (options.throwOnError || !(error instanceof ParseError)) {
        throw error;
      }
      var node = buildCommon.makeSpan(["katex-error"], [new SymbolNode(expression)]);
      node.setAttribute("title", error.toString());
      node.setAttribute("style", "color:" + options.errorColor);
      return node;
    };
    renderToDomTree = function renderToDomTree2(expression, options) {
      var settings = new Settings(options);
      try {
        var tree = parseTree(expression, settings);
        return buildTree(tree, expression, settings);
      } catch (error) {
        return renderError(error, expression, settings);
      }
    };
    renderToHTMLTree = function renderToHTMLTree2(expression, options) {
      var settings = new Settings(options);
      try {
        var tree = parseTree(expression, settings);
        return buildHTMLTree(tree, expression, settings);
      } catch (error) {
        return renderError(error, expression, settings);
      }
    };
    katex = {
      version: "0.16.4",
      render,
      renderToString,
      ParseError,
      SETTINGS_SCHEMA,
      __parse: generateParseTree,
      __renderToDomTree: renderToDomTree,
      __renderToHTMLTree: renderToHTMLTree,
      __setFontMetrics: setFontMetrics,
      __defineSymbol: defineSymbol,
      __defineMacro: defineMacro,
      __domTree: {
        Span,
        Anchor,
        SymbolNode,
        SvgNode,
        PathNode,
        LineNode
      }
    };
  }
});

// .svelte-kit/output/server/entries/pages/katex/_page.svx.js
var page_svx_exports = {};
__export(page_svx_exports, {
  default: () => z5
});
var v3, r2, z5;
var init_page_svx = __esm({
  ".svelte-kit/output/server/entries/pages/katex/_page.svx.js"() {
    init_chunks();
    init_katex();
    init_store();
    v3 = I((s6, m8, d6, c4) => `





${s6.head += '<!-- HEAD_svelte-ztscxf_START --><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.2/dist/katex.min.css" integrity="sha384-bYdxxUwYipFNohQlHt0bjN/LCpueqWz13HufFEV1SUatKs1cm4L6fFgCi1jT643X" crossorigin="anonymous"><!-- HEAD_svelte-ztscxf_END -->', ""}`);
    r2 = 1e3;
    z5 = I((s6, m8, d6, c4) => {
      let n3, i4, o4;
      o4 = x(d3, (l4) => i4 = l4);
      let e7 = r2, $5 = ["\\int_{M}d\\omega=\\int_{\\partial M}\\omega", "G_{\\mu\\nu}\\,+\\,\\Lambda g_{\\mu\\nu}\\,=\\,\\kappa T_{\\mu\\nu}", " (i\\hbar\\gamma^\\mu \\partial_\\mu  - mc) \\ \\psi = 0 ", "\\left\\langle{e^{-\\beta\\,W}}\\right\\rangle = \\,{e^{-\\beta\\,\\triangle\\,F}}", "z_{n+1}\\,=\\,z_{n}^{2}\\,+\\,c"];
      return n3 = i4 ? "prose-invert" : "", o4(), `${G(v3, "MathLazyRenderer").$$render(s6, {}, {}, {})}
<article class="${"prose lg:prose-lg " + j(n3, true)}"><h1>This page lazy-rendered using Katex</h1>
<input type="number" min="1"${M("max", r2, 0)}${M("value", e7, 0)}>
<input type="range" min="1"${M("max", r2, 0)}${M("value", e7, 0)}>
<h2>${j(e7)} sections; ${j(e7 * $5.length)} equations below</h2>
${D(Array(e7), (l4, g6) => `<div>${j(g6 + 1)}</div>
    ${D($5, (_6) => `<p class="p-1 text-indigo-700" d${M("k", _6, 0)}></p>`)}`)}</article>`;
    });
  }
});

// .svelte-kit/output/server/nodes/7.js
var __exports8 = {};
__export(__exports8, {
  component: () => component8,
  file: () => file8,
  fonts: () => fonts8,
  imports: () => imports8,
  index: () => index8,
  stylesheets: () => stylesheets8,
  universal: () => page_exports2
});
var index8, component8, file8, imports8, stylesheets8, fonts8;
var init__8 = __esm({
  ".svelte-kit/output/server/nodes/7.js"() {
    init_page2();
    index8 = 7;
    component8 = async () => (await Promise.resolve().then(() => (init_page_svx(), page_svx_exports))).default;
    file8 = "_app/immutable/components/pages/katex/_page.svx-d2694e8c.js";
    imports8 = ["_app/immutable/components/pages/katex/_page.svx-d2694e8c.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/katex-589a4957.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/modules/pages/katex/_page.js-7dc16dc1.js", "_app/immutable/chunks/_page-4039aba4.js"];
    stylesheets8 = [];
    fonts8 = [];
  }
});

// .svelte-kit/output/server/entries/pages/login/_page.svelte.js
var page_svelte_exports6 = {};
__export(page_svelte_exports6, {
  default: () => $4
});
var $4;
var init_page_svelte6 = __esm({
  ".svelte-kit/output/server/entries/pages/login/_page.svelte.js"() {
    init_chunks();
    init_LoginCard();
    $4 = I((o4, e7, a4, s6) => `


${G(te3, "LoginCard").$$render(o4, { noTransition: true }, {}, {})}`);
  }
});

// .svelte-kit/output/server/nodes/8.js
var __exports9 = {};
__export(__exports9, {
  component: () => component9,
  file: () => file9,
  fonts: () => fonts9,
  imports: () => imports9,
  index: () => index9,
  stylesheets: () => stylesheets9
});
var index9, component9, file9, imports9, stylesheets9, fonts9;
var init__9 = __esm({
  ".svelte-kit/output/server/nodes/8.js"() {
    index9 = 8;
    component9 = async () => (await Promise.resolve().then(() => (init_page_svelte6(), page_svelte_exports6))).default;
    file9 = "_app/immutable/components/pages/login/_page.svelte-ce259b98.js";
    imports9 = ["_app/immutable/components/pages/login/_page.svelte-ce259b98.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/LoginCard-029fb781.js", "_app/immutable/chunks/preload-helper-41c905a7.js", "_app/immutable/chunks/firebase-c41625c4.js", "_app/immutable/chunks/public-520e6fd8.js", "_app/immutable/chunks/navigation-58fa1539.js", "_app/immutable/chunks/singletons-d150de80.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-1b1ee987.js", "_app/immutable/chunks/utils-333b22ed.js"];
    stylesheets9 = ["_app/immutable/assets/LoginCard-b78ac858.css"];
    fonts9 = [];
  }
});

// .svelte-kit/output/server/entries/pages/math/_page.js
var page_exports3 = {};
__export(page_exports3, {
  prerender: () => e3
});
var e3;
var init_page3 = __esm({
  ".svelte-kit/output/server/entries/pages/math/_page.js"() {
    e3 = false;
  }
});

// .svelte-kit/output/server/chunks/Kajax.js
var r3;
var init_Kajax = __esm({
  ".svelte-kit/output/server/chunks/Kajax.js"() {
    init_chunks();
    init_katex();
    r3 = I((t3, e7, a4, c4) => `

${t3.head += `<!-- HEAD_svelte-15ncbow_START --><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.2/dist/katex.min.css" integrity="sha384-bYdxxUwYipFNohQlHt0bjN/LCpueqWz13HufFEV1SUatKs1cm4L6fFgCi1jT643X" crossorigin="anonymous"><script>MathJax = {
      // startup: { typeset: false },
      // startup: { elements: ["[m]"] },
      loader: { load: ["[tex]/physics", "[tex]/cancel"] },
      tex: {
        packages: {
          "[+]": ["physics", "cancel"],
        },
        inlineMath: [
          ["$", "$"],
          ["\\\\(", "\\\\)"],
        ],
      },
      svg: {
        fontCache: "global",
      },
    };
  <\/script><script type="text/javascript" id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js"><\/script><!-- HEAD_svelte-15ncbow_END -->`, ""}`);
  }
});

// .svelte-kit/output/server/entries/pages/math/_page.svx.js
var page_svx_exports2 = {};
__export(page_svx_exports2, {
  default: () => L4
});
var f3, k5, d5, T5, L4;
var init_page_svx2 = __esm({
  ".svelte-kit/output/server/entries/pages/math/_page.svx.js"() {
    init_chunks();
    init_katex();
    init_store();
    init_Kajax();
    f3 = I((p6, i4, l4, v6) => {
      let t3, { d: s6 = false } = i4, { m: n3 } = i4;
      const e7 = { displayMode: s6, throwOnError: false };
      return i4.d === void 0 && l4.d && s6 !== void 0 && l4.d(s6), i4.m === void 0 && l4.m && n3 !== void 0 && l4.m(n3), t3 = katex.renderToString(n3, e7), `${p6.head += '<!-- HEAD_svelte-bnfb8z_START --><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css" integrity="sha384-AfEj0r4/OFrOo5t7NnNe46zW/tFgW6x/bCJG8FqQCEo3+Aro6EYUG4+cU+KJWu/X" crossorigin="anonymous"><!-- HEAD_svelte-bnfb8z_END -->', ""}

<!-- HTML_TAG_START -->${t3}<!-- HTML_TAG_END -->`;
    });
    k5 = I((p6, i4, l4, v6) => {
      let t3, s6;
      s6 = x(d3, (e7) => t3 = e7);
      let n3 = ["\\int_{M}d\\omega=\\int_{\\partial M}\\omega", "G_{\\mu\\nu}\\,+\\,\\Lambda g_{\\mu\\nu}\\,=\\,\\kappa T_{\\mu\\nu}", " (i\\hbar\\gamma^\\mu \\partial_\\mu  - mc) \\ \\psi = 0 ", "\\left\\langle{e^{-\\beta\\,W}}\\right\\rangle = \\,{e^{-\\beta\\,\\triangle\\,F}}", "z_{n+1}\\,=\\,z_{n}^{2}\\,+\\,c", "e^{i x}=\\cos x+i\\sin x"];
      return s6(), `<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 w-full">${D(n3, (e7, o4) => `
    <p${M("class", t3 ? "text-blue-100" : "text-indigo-900", 0)}>${G(f3, "K").$$render(p6, { d: true, m: e7 }, {}, {})}
    </p>`)}</div>`;
    });
    d5 = 1e3;
    T5 = 1;
    L4 = I((p6, i4, l4, v6) => {
      let t3, s6, n3, e7, o4;
      o4 = x(d3, (h3) => e7 = h3);
      let b6 = ["\\int_{M}d\\omega=\\int_{\\partial M}\\omega", "G_{\\mu\\nu}\\,+\\,\\Lambda g_{\\mu\\nu}\\,=\\,\\kappa T_{\\mu\\nu}", " (i\\hbar\\gamma^\\mu \\partial_\\mu  - mc) \\ \\psi = 0 ", "\\left\\langle{e^{-\\beta\\,W}}\\right\\rangle = \\,{e^{-\\beta\\,\\triangle\\,F}}", "z_{n+1}\\,=\\,z_{n}^{2}\\,+\\,c"], c4 = 2;
      return t3 = d5, s6 = T5, n3 = e7 ? "prose-invert" : "", o4(), `${G(r3, "Kajax").$$render(p6, {}, {}, {})}


<article class="${"prose lg:prose-lg " + j(n3, true)}"><p>ayo</p>
${G(k5, "SixMathEqnAnim").$$render(p6, {}, {}, {})}
  
  

<div class="math math-display"><!-- HTML_TAG_START --><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><munder><mrow><msup><mi>u</mi><mo mathvariant="normal" lspace="0em" rspace="0em">\u2032</mo></msup><mo>\u2212</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mi>u</mi><mn>2</mn></msup><mo>\u2212</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>u</mi><mo>\u2212</mo><mi>R</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">\u23DF</mo></munder><mrow><mtext>=0,\xA0since\xA0</mtext><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle><mtext>\xA0is\xA0a\xA0particular\xA0solution.</mtext></mrow></munder></mrow><annotation encoding="application/x-tex">\\underbrace{u&#x27;-P(x)u^2-Q(x)u-R(x)}_{\\text{=0, since~$u$ is a particular solution.}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5843em;vertical-align:-1.7202em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-1.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">=0,\xA0since</span><span class="mord mtight nobreak">\xA0</span><span class="mord mathnormal sizing reset-size3 size6">u</span><span class="mord mtight">\xA0is\xA0a\xA0particular\xA0solution.</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">\u2032</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\u2212</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\u2212</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\u2212</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:1.7202em;"><span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></div>
<span class="text-7xl flex justify-center"><p>${j(c4)}<span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></span>=${j(c4 ** 2)}</p></span>
<div class="flex justify-center"><input type="range" min="1"${M("value", c4, 0)}></div>
<h1>The content of this page is written in a markdown file with svelte components (tailwind too), possible due to MDsveX!</h1>
<h2>The <strong>math</strong> on this page is written in markdown using Katex (black), Katex (green), and Mathjax (blue), the latter two of which are lazy rendered with the Intersection Observer API!</h2>
<ul><li>the square-slider above using svelte binding of a JS variable \u2026 again this is possible due to MDsveX<ul><li>the newest version of mathjax is about as performant as katex; mathjax has a wider adoption of latex functionality</li>
<li>the math markdown uses katex as a plugin and is not lazy-rendered \u2026 it is however easier to write</li></ul></li></ul>

<div class="p-4"><input type="number" min="1"${M("value", s6, 0)}>
    <input type="range" min="1"${M("value", s6, 0)}></div>
<h1>${j(s6)} lines of markdown immediately below</h1>
${D(Array(s6), (h3, g6) => `<p>${j(g6 + 1)}</p>
<div class="math math-display"><!-- HTML_TAG_START --><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E=mc^2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></div>`)}

<ul><li>pull this slider over to show that more equations doesnt slow the page down (capped at 10,000 but could be larger)</li></ul>
<input type="number" min="1"${M("max", d5, 0)}${M("value", t3, 0)}>
<input type="range" min="1"${M("max", d5, 0)}${M("value", t3, 0)}>
${D(Array(t3), (h3, g6) => `<p>${j(g6 + 1)}</p>
        <p class="p-1 text-indigo-700" d${M("m", "\\cancelto{0}{\\int\\limits_{-\\infty}^{\\infty} e^{-x^{2}} \\, dx = \\sqrt{\\pi}}", 0)}></p>
        <p class="p-1 text-green-700" d${M("k", "\\int\\limits_{-\\infty}^{\\infty} e^{-x^{2}} \\, dx = \\sqrt{\\pi}", 0)}></p>
    ${D(b6, (y7, z6) => `<div><p class="p-1 text-indigo-700" d${M("k", y7, 0)}></p>
        <p class="p-1 text-green-700" d${M("m", y7, 0)}></p>
    </div>`)}`)}</article>

`;
    });
  }
});

// .svelte-kit/output/server/nodes/9.js
var __exports10 = {};
__export(__exports10, {
  component: () => component10,
  file: () => file10,
  fonts: () => fonts10,
  imports: () => imports10,
  index: () => index10,
  stylesheets: () => stylesheets10,
  universal: () => page_exports3
});
var index10, component10, file10, imports10, stylesheets10, fonts10;
var init__10 = __esm({
  ".svelte-kit/output/server/nodes/9.js"() {
    init_page3();
    index10 = 9;
    component10 = async () => (await Promise.resolve().then(() => (init_page_svx2(), page_svx_exports2))).default;
    file10 = "_app/immutable/components/pages/math/_page.svx-1e340093.js";
    imports10 = ["_app/immutable/components/pages/math/_page.svx-1e340093.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/katex-589a4957.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/chunks/index-1b1ee987.js", "_app/immutable/chunks/Kajax-a6b1bd4f.js", "_app/immutable/modules/pages/math/_page.js-7dc16dc1.js", "_app/immutable/chunks/_page-bfda8c82.js"];
    stylesheets10 = [];
    fonts10 = [];
  }
});

// .svelte-kit/output/server/entries/pages/mathjax/_page.js
var page_exports4 = {};
__export(page_exports4, {
  prerender: () => e4
});
var e4;
var init_page4 = __esm({
  ".svelte-kit/output/server/entries/pages/mathjax/_page.js"() {
    e4 = false;
  }
});

// .svelte-kit/output/server/entries/pages/mathjax/_page.svx.js
var page_svx_exports3 = {};
__export(page_svx_exports3, {
  default: () => f4
});
var v4, r4, f4;
var init_page_svx3 = __esm({
  ".svelte-kit/output/server/entries/pages/mathjax/_page.svx.js"() {
    init_chunks();
    init_store();
    v4 = I((s6, o4, u, d6) => `${s6.head += `<!-- HEAD_svelte-1fd20gn_START --><script>MathJax = {
      // startup: { typeset: false },
      // startup: { elements: ["[m]"] },
      loader: { load: ["[tex]/physics", "[tex]/cancel"] },
      tex: {
        packages: {
          "[+]": ["physics", "cancel"],
        },
        inlineMath: [
          ["$", "$"],
          ["\\\\(", "\\\\)"],
        ],
      },
      svg: {
        fontCache: "global",
      },
    };
  <\/script><script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"><\/script><!-- HEAD_svelte-1fd20gn_END -->`, ""}`);
    r4 = 1e3;
    f4 = I((s6, o4, u, d6) => {
      let n3, i4, l4;
      l4 = x(d3, (c4) => i4 = c4);
      let e7 = r4, p6 = ["\\int_{M}d\\omega=\\int_{\\partial M}\\omega", "G_{\\mu\\nu}\\,+\\,\\Lambda g_{\\mu\\nu}\\,=\\,\\kappa T_{\\mu\\nu}", " (i\\hbar\\gamma^\\mu \\partial_\\mu  - mc) \\ \\psi = 0 ", "\\left\\langle{e^{-\\beta\\,W}}\\right\\rangle = \\,{e^{-\\beta\\,\\triangle\\,F}}", "z_{n+1}\\,=\\,z_{n}^{2}\\,+\\,c"];
      return n3 = i4 ? "prose-invert" : "", l4(), `${G(v4, "MathLazyRenderer").$$render(s6, {}, {}, {})}
<article class="${"prose lg:prose-lg " + j(n3, true)}"><h1>This page lazy-rendered using Mathjax (using tex-mml-chtml.js NOT svg)</h1>
<input type="number" min="1"${M("max", r4, 0)}${M("value", e7, 0)}>
<input type="range" min="1"${M("max", r4, 0)}${M("value", e7, 0)}>
<h2>${j(e7)} sections; ${j(e7 * p6.length)} equations below</h2>
${D(Array(e7), (c4, g6) => `<div>${j(g6 + 1)}</div>
    ${D(p6, (h3) => `<p class="p-1 text-red-400" d${M("m", h3, 0)}></p>`)}`)}</article>`;
    });
  }
});

// .svelte-kit/output/server/nodes/10.js
var __exports11 = {};
__export(__exports11, {
  component: () => component11,
  file: () => file11,
  fonts: () => fonts11,
  imports: () => imports11,
  index: () => index11,
  stylesheets: () => stylesheets11,
  universal: () => page_exports4
});
var index11, component11, file11, imports11, stylesheets11, fonts11;
var init__11 = __esm({
  ".svelte-kit/output/server/nodes/10.js"() {
    init_page4();
    index11 = 10;
    component11 = async () => (await Promise.resolve().then(() => (init_page_svx3(), page_svx_exports3))).default;
    file11 = "_app/immutable/components/pages/mathjax/_page.svx-d96dec71.js";
    imports11 = ["_app/immutable/components/pages/mathjax/_page.svx-d96dec71.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/modules/pages/mathjax/_page.js-7dc16dc1.js", "_app/immutable/chunks/_page-621564aa.js"];
    stylesheets11 = [];
    fonts11 = [];
  }
});

// .svelte-kit/output/server/entries/pages/physics/_page.js
var page_exports5 = {};
__export(page_exports5, {
  prerender: () => e5
});
var e5;
var init_page5 = __esm({
  ".svelte-kit/output/server/entries/pages/physics/_page.js"() {
    e5 = false;
  }
});

// .svelte-kit/output/server/entries/pages/physics/_page.svelte.js
var page_svelte_exports7 = {};
__export(page_svelte_exports7, {
  default: () => f5
});
var y6, v5, f5;
var init_page_svelte7 = __esm({
  ".svelte-kit/output/server/entries/pages/physics/_page.svelte.js"() {
    init_chunks();
    init_Kajax();
    init_store();
    y6 = { code: ".hScroll.svelte-zoca3o{overflow:auto;white-space:nowrap;margin:0 30;background-color:var(--correctColour)}", map: null };
    v5 = I((s6, m8, i4, r6) => (s6.css.add(y6), `${G(r3, "MathRenderer").$$render(s6, {}, {}, {})}

<p class="text-3xl flex justify-center" d${M("m", "\\cancelto{0}{x}", 0)}></p>
<p class="text-3xl flex justify-center" d${M("k", "\\cancel{x}", 0)}></p>
<div id="charges-1"><h2>Two isolated point charges as shown are at a fixed distance apart (segment BC). At which point is it possible for the electric field strength to be zero?</h2>
  <img style="margin: 0 auto; display:flex; width: 65vw; min-width: 280px; max-width: 600px;" src=" https://raw.githubusercontent.com/brightowltutoring/web/main/two-charges.png">
<p>The electric fields due to charges <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">Q_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></span> and <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">Q_C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></span> for:</p>
<ul><li><strong>segment BC:</strong> both point from C to B</li>
<li><strong>segment CD:</strong> point in opposite directions</li>
<li><strong>segment AB:</strong> point in opposite directions</li></ul>
<p>Therefore only the outer segments CD and AB are feasible for the net electric field to cancel \u2014 i.e. we need only compare the magnitudes from each charge.</p>
<ul><li>Since the magnitude of the electric field depends on both the charge magnitude, and \u201Csquare-inversely\u201D to the separation distance \u2014 i.e. <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>\u223C</mo><mi mathvariant="normal">\u2223</mi><mi>Q</mi><mi mathvariant="normal">\u2223</mi><mi mathvariant="normal">/</mi><msup><mi>d</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E \\sim |Q|/d^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">\u223C</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">\u2223</span><span class="mord mathnormal">Q</span><span class="mord">\u2223/</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></span> \u2014 then only a point, call it X, in segment CD is feasible as it is \u201Cclose to a weak source and far from a strong source\u201D</li></ul>
<h3>Explicit calculation</h3>
<p>If we can assume the fields are in opposite directions then we need only equate the magnitudes for cancellation to occur:</p>
  <div class="hScroll svelte-zoca3o"><div class="math math-display"><!-- HTML_TAG_START --><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left right left" columnspacing="0em 1em 0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">\u2223</mi><msub><mi>E</mi><mi>B</mi></msub><mi mathvariant="normal">\u2223</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi mathvariant="normal">\u2223</mi><msub><mi>E</mi><mi>C</mi></msub><mi mathvariant="normal">\u2223</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mfrac><mrow><menclose notation="updiagonalstrike"><mi>k</mi></menclose><mi mathvariant="normal">\u2223</mi><msub><mi>Q</mi><mi>B</mi></msub><mi mathvariant="normal">\u2223</mi></mrow><mrow><mi mathvariant="normal">\u2223</mi><mi>B</mi><mi>X</mi><msup><mi mathvariant="normal">\u2223</mi><mn>2</mn></msup></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><menclose notation="updiagonalstrike"><mi>k</mi></menclose><mi mathvariant="normal">\u2223</mi><msub><mi>Q</mi><mi>C</mi></msub><mi mathvariant="normal">\u2223</mi></mrow><mrow><mi mathvariant="normal">\u2223</mi><mi>C</mi><mi>X</mi><msup><mi mathvariant="normal">\u2223</mi><mn>2</mn></msup></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>where\xA0X\xA0is\xA0some\xA0variable\xA0point\xA0on\xA0the\xA0interval</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>\u2234</mo><mi mathvariant="normal">\u2223</mi><mi>B</mi><mi>X</mi><mi mathvariant="normal">\u2223</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msqrt><mfrac><mn>7</mn><mn>2</mn></mfrac></msqrt><mi mathvariant="normal">\u2223</mi><mi>C</mi><mi>X</mi><mi mathvariant="normal">\u2223</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>\u2234</mo><mi mathvariant="normal">\u2223</mi><mi>B</mi><mi>X</mi><mi mathvariant="normal">\u2223</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>&gt;</mo><mi mathvariant="normal">\u2223</mi><mi>C</mi><mi>X</mi><mi mathvariant="normal">\u2223</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
  \\begin{aligned}
  |E_B| &amp;= |E_C|  \\\\ \\\\
    \\frac{  \\cancel{ k } |Q_B| }{ |BX|^2 } &amp;= \\frac{  \\cancel{ k } |Q_C| }{ |CX|^2 }  &amp;&amp; \\text{where X is some variable point on the interval} \\\\  \\\\
  %  \\frac{ \\cancelto{7 \\mu C}{ |Q_B| } }{  \\cancelto{2 \\mu C}{ |Q_C|  }} &amp;= \\frac{   |BX|^2 }{ |CX|^2 } \\\\
    \\therefore |BX| &amp;= \\sqrt{\\frac{ 7 }{ 2} }|CX| \\\\ \\\\
    \\therefore |BX| &amp; &gt; |CX| \\\\
\\end{aligned}

</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12.903em;vertical-align:-6.2015em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.7015em;"><span style="top:-9.5131em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"><span class="mord">\u2223</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">\u2223</span></span></span><span style="top:-8.0131em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"></span></span><span style="top:-5.9261em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">\u2223</span><span class="mord mathnormal" style="margin-right:0.07847em;">BX</span><span class="mord"><span class="mord">\u2223</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8944em;"><span style="top:-3.0944em;"><span class="pstrut" style="height:3.0944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span class="svg-align" style="top:-2.8944em;"><span class="pstrut" style="height:3.0944em;"></span><span style="height:1.0944em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='1.0944em'><line x1='0' y1='100%' x2='100%' y2='0' stroke-width='0.046em'/></svg></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mord">\u2223</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">\u2223</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.8501em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"></span></span><span style="top:-1.5385em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"><span class="mrel amsrm">\u2234</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">\u2223</span><span class="mord mathnormal" style="margin-right:0.07847em;">BX</span><span class="mord">\u2223</span></span></span><span style="top:0.3899em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"></span></span><span style="top:1.8899em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"><span class="mrel amsrm">\u2234</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">\u2223</span><span class="mord mathnormal" style="margin-right:0.07847em;">BX</span><span class="mord">\u2223</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:6.2015em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.7015em;"><span style="top:-9.5131em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">\u2223</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">\u2223</span></span></span><span style="top:-5.9261em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">\u2223</span><span class="mord mathnormal" style="margin-right:0.07847em;">CX</span><span class="mord"><span class="mord">\u2223</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8944em;"><span style="top:-3.0944em;"><span class="pstrut" style="height:3.0944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span class="svg-align" style="top:-2.8944em;"><span class="pstrut" style="height:3.0944em;"></span><span style="height:1.0944em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='1.0944em'><line x1='0' y1='100%' x2='100%' y2='0' stroke-width='0.046em'/></svg></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mord">\u2223</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">\u2223</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5385em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6516em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6116em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478
c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514
c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20
s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121
s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081
l0 -0c4,-6.7,10,-10,18,-10 H400000
v40H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185
c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M1001 80
h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.7884em;"><span></span></span></span></span></span><span class="mord">\u2223</span><span class="mord mathnormal" style="margin-right:0.07847em;">CX</span><span class="mord">\u2223</span></span></span><span style="top:1.8899em;"><span class="pstrut" style="height:3.6516em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">\u2223</span><span class="mord mathnormal" style="margin-right:0.07847em;">CX</span><span class="mord">\u2223</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:6.2015em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-r"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:3.7015em;"><span style="top:-5.7015em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:3.7015em;"><span style="top:-5.7015em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord">where\xA0X\xA0is\xA0some\xA0variable\xA0point\xA0on\xA0the\xA0interval</span></span></span></span></span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></div></div>
<p>Since we were limited to segments AB and CD, this result forces the point X to be in CD.</p></div>
<div id="charges-2"><h2>Four point charges have the same magnitude of 2.4 \xD7 10\u207B\xB9\xB2 C and are fixed to the corners of a square that is 4.0 cm on a side. Three of the charges are positive and one is negative. What is the magnitude and direction of the net electric field that exists at the centre of the square?</h2>
<p>Using symmetry arguments, at the center of the square:</p>
<ul><li>the diagonally like-charges cancel along their joining diagonals</li>
<li>the diagonally opposite-charges add along their joining diagonals, going from positive to negative</li></ul>
<p>With this information therefore the magnitude is twice the magnitude along the positive-negative direction. If we call <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span><!-- HTML_TAG_END --></span> the diagonal-to-center distance, and <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span><!-- HTML_TAG_END --></span> as the side-length of the square</p>
<p>where <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mn>2</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mfrac><mi>a</mi><mn>2</mn></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mfrac><mi>a</mi><mn>2</mn></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><mfrac><mi>a</mi><mn>2</mn></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">D^2 = (\\frac{a}{2})^2 +  (\\frac{a}{2})^2 = 2(\\frac{a}{2})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1591em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1591em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1591em;vertical-align:-0.345em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></span> results from Pythagoras\u2019 Theorem. Converting everything to SI units (and then omitting the SI unit in the calculation below):</p>
  <div class="hScroll svelte-zoca3o"><div class="math math-display"><!-- HTML_TAG_START --><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">\u2223</mi><msub><mover accent="true"><mi>E</mi><mo>\u20D7</mo></mover><mtext>\xA0net\xA0@center\xA0</mtext></msub><mi mathvariant="normal">\u2223</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>4</mn><mo>\u22C5</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>9</mn><mo>\xD7</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2.4</mn><mo>\xD7</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>\u2212</mo><mn>12</mn></mrow></msup><mo stretchy="false">)</mo></mrow><mrow><mo stretchy="false">(</mo><mn>4</mn><mo>\xD7</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>\u2212</mo><mn>2</mn></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>4</mn><mo>\u22C5</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>9</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2.4</mn><mo stretchy="false">)</mo></mrow><mn>16</mn></mfrac><mo>\xD7</mo><mn>1</mn><msup><mn>0</mn><mrow><mn>9</mn><mo>\u2212</mo><mn>12</mn><mo>\u2212</mo><mo stretchy="false">(</mo><mo>\u2212</mo><mn>4</mn><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>5.4</mn><mo>\xD7</mo><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup><mtext>\xA0N\xA0</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
    \\begin{aligned} 
  |\\vec{E}_{ \\text{ net @center }}| 
  &amp; = 4 \\cdot \\frac{ (9 \\times 10^{9}) (2.4 \\times 10^{-12}) }{  (4 \\times 10^{-2})^2 }  \\\\
  &amp; = 4 \\cdot \\frac{ (9 ) (2.4) }{  16  }  \\times 10^{9-12-(-4)}\\\\ 
  &amp; = 5.4 \\times 10^{1} \\text{ N } 
\\end{aligned}

</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.6642em;vertical-align:-3.0821em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5821em;"><span style="top:-5.5821em;"><span class="pstrut" style="height:3.4911em;"></span><span class="mord"><span class="mord">\u2223</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">\xA0net\xA0@center\xA0</span></span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">\u2223</span></span></span><span style="top:-2.9191em;"><span class="pstrut" style="height:3.4911em;"></span><span class="mord"></span></span><span style="top:-1.069em;"><span class="pstrut" style="height:3.4911em;"></span><span class="mord"></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:3.0821em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5821em;"><span style="top:-5.5821em;"><span class="pstrut" style="height:3.4911em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\u22C5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\xD7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">\u2212</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\xD7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2.4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\xD7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">\u2212</span><span class="mord mtight">12</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.9191em;"><span class="pstrut" style="height:3.4911em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\u22C5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">16</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">9</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2.4</span><span class="mclose">)</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\xD7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span><span class="mbin mtight">\u2212</span><span class="mord mtight">12</span><span class="mbin mtight">\u2212</span><span class="mopen mtight">(</span><span class="mord mtight">\u2212</span><span class="mord mtight">4</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.069em;"><span class="pstrut" style="height:3.4911em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">5.4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\xD7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord text"><span class="mord">\xA0N\xA0</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:3.0821em;"><span></span></span></span></span></span></span></span></span></span></span></span><!-- HTML_TAG_END --></div></div>
  <div class="hScroll svelte-zoca3o"><div class="math math-display"><!-- HTML_TAG_START --><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>\u2234</mo><msub><mover accent="true"><mi>E</mi><mo>\u20D7</mo></mover><mtext>\xA0net\xA0@center\xA0</mtext></msub><mo>=</mo><mrow><mtext>\xA0</mtext><mtext mathvariant="bold">54</mtext><mtext>\xA0</mtext><mtext mathvariant="bold">N,</mtext><mtext>\xA0</mtext><mtext mathvariant="bold">along</mtext><mtext>\xA0</mtext><mtext mathvariant="bold">diagonal</mtext><mtext>\xA0</mtext><mtext mathvariant="bold">from</mtext><mtext>\xA0</mtext><mtext mathvariant="bold">positive</mtext><mtext>\xA0</mtext><mtext mathvariant="bold">to</mtext><mtext>\xA0</mtext><mtext mathvariant="bold">negative</mtext><mtext>\xA0</mtext><mtext mathvariant="bold">charge</mtext></mrow></mrow><annotation encoding="application/x-tex">\\therefore \\vec{E}_{ \\text{ net @center }} = \\textbf{ 54 N, along diagonal from positive to negative charge} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6922em;"></span><span class="mrel amsrm">\u2234</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1163em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1522em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">\xA0net\xA0@center\xA0</span></span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord textbf">\xA054\xA0N,\xA0along\xA0diagonal\xA0from\xA0positive\xA0to\xA0negative\xA0charge</span></span></span></span></span></span><!-- HTML_TAG_END --></div></div></div>
 <div id="circuits-1"><h2>A cell has an emf of 8.0 V and an internal resistance of 2.0 \u03A9. The ideal voltmeter reads 6.4 V. What is the resistance of R?</h2>
<ul><li>A. 0.8 \u03A9</li>
<li>B. 2.0 \u03A9</li>
<li>C. 4.0 \u03A9</li>
<li>D. 8.0 \u03A9</li></ul>
  <img style="margin: 0 auto; display:flex;width: 65vw;min-width: 280px;max-width: 600px;" src="https://raw.githubusercontent.com/brightowltutoring/web/main/circuits-1.png"></div>`));
    f5 = I((s6, m8, i4, r6) => {
      let a4, n3, t3;
      return t3 = x(d3, (c4) => n3 = c4), a4 = n3 ? "prose-invert" : "", t3(), `<div class="${"prose lg:prose-lg " + j(a4, true)}">${G(v5, "E").$$render(s6, {}, {}, {})}</div>`;
    });
  }
});

// .svelte-kit/output/server/nodes/11.js
var __exports12 = {};
__export(__exports12, {
  component: () => component12,
  file: () => file12,
  fonts: () => fonts12,
  imports: () => imports12,
  index: () => index12,
  stylesheets: () => stylesheets12,
  universal: () => page_exports5
});
var index12, component12, file12, imports12, stylesheets12, fonts12;
var init__12 = __esm({
  ".svelte-kit/output/server/nodes/11.js"() {
    init_page5();
    index12 = 11;
    component12 = async () => (await Promise.resolve().then(() => (init_page_svelte7(), page_svelte_exports7))).default;
    file12 = "_app/immutable/components/pages/physics/_page.svelte-123e9f6b.js";
    imports12 = ["_app/immutable/components/pages/physics/_page.svelte-123e9f6b.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/Kajax-a6b1bd4f.js", "_app/immutable/chunks/katex-589a4957.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/modules/pages/physics/_page.js-7dc16dc1.js", "_app/immutable/chunks/_page-37f6be6a.js"];
    stylesheets12 = ["_app/immutable/assets/_page-fcf51fa8.css"];
    fonts12 = [];
  }
});

// .svelte-kit/output/server/entries/pages/plans/_page.svelte.js
var page_svelte_exports8 = {};
__export(page_svelte_exports8, {
  default: () => p5
});
var p5;
var init_page_svelte8 = __esm({
  ".svelte-kit/output/server/entries/pages/plans/_page.svelte.js"() {
    init_chunks();
    init_PlansSection();
    p5 = I((o4, r6, s6, a4) => `${G(D3, "PlansSection").$$render(o4, {}, {}, {})}





`);
  }
});

// .svelte-kit/output/server/nodes/12.js
var __exports13 = {};
__export(__exports13, {
  component: () => component13,
  file: () => file13,
  fonts: () => fonts13,
  imports: () => imports13,
  index: () => index13,
  stylesheets: () => stylesheets13
});
var index13, component13, file13, imports13, stylesheets13, fonts13;
var init__13 = __esm({
  ".svelte-kit/output/server/nodes/12.js"() {
    index13 = 12;
    component13 = async () => (await Promise.resolve().then(() => (init_page_svelte8(), page_svelte_exports8))).default;
    file13 = "_app/immutable/components/pages/plans/_page.svelte-c3fb650c.js";
    imports13 = ["_app/immutable/components/pages/plans/_page.svelte-c3fb650c.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/PlansSection-9608209e.js", "_app/immutable/chunks/Modal-b1553996.js", "_app/immutable/chunks/store-e723d68b.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/chunks/index-1b1ee987.js"];
    stylesheets13 = [];
    fonts13 = [];
  }
});

// .svelte-kit/output/server/entries/pages/samplequiz/_page.md.js
var page_md_exports = {};
__export(page_md_exports, {
  default: () => i2
});
var i2;
var init_page_md = __esm({
  ".svelte-kit/output/server/entries/pages/samplequiz/_page.md.js"() {
    init_chunks();
    i2 = I((e7, t3, a4, o4) => `
${D(Array(1e3), ($5, n3) => `<div class="bg-red-100">
  </div>`)}`);
  }
});

// .svelte-kit/output/server/nodes/13.js
var __exports14 = {};
__export(__exports14, {
  component: () => component14,
  file: () => file14,
  fonts: () => fonts14,
  imports: () => imports14,
  index: () => index14,
  stylesheets: () => stylesheets14
});
var index14, component14, file14, imports14, stylesheets14, fonts14;
var init__14 = __esm({
  ".svelte-kit/output/server/nodes/13.js"() {
    index14 = 13;
    component14 = async () => (await Promise.resolve().then(() => (init_page_md(), page_md_exports))).default;
    file14 = "_app/immutable/components/pages/samplequiz/_page.md-c9425cee.js";
    imports14 = ["_app/immutable/components/pages/samplequiz/_page.md-c9425cee.js", "_app/immutable/chunks/index-06adba90.js"];
    stylesheets14 = [];
    fonts14 = [];
  }
});

// node_modules/@firebase/functions/dist/index.esm2017.js
function connectFunctionsEmulator$1(functionsInstance, host, port) {
  functionsInstance.emulatorOrigin = `http://${host}:${port}`;
}
function registerFunctions(fetchImpl, variant) {
  const factory = (container, { instanceIdentifier: regionOrCustomDomain }) => {
    const app = container.getProvider("app").getImmediate();
    const authProvider = container.getProvider(AUTH_INTERNAL_NAME);
    const messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);
    const appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME);
    return new FunctionsService(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain, fetchImpl);
  };
  _registerComponent(new Component(FUNCTIONS_TYPE, factory, "PUBLIC").setMultipleInstances(true));
  registerVersion(name4, version4, variant);
  registerVersion(name4, version4, "esm2017");
}
function getFunctions(app = getApp(), regionOrCustomDomain = DEFAULT_REGION) {
  const functionsProvider = _getProvider(getModularInstance(app), FUNCTIONS_TYPE);
  const functionsInstance = functionsProvider.getImmediate({
    identifier: regionOrCustomDomain
  });
  const emulator = getDefaultEmulatorHostnameAndPort("functions");
  if (emulator) {
    connectFunctionsEmulator(functionsInstance, ...emulator);
  }
  return functionsInstance;
}
function connectFunctionsEmulator(functionsInstance, host, port) {
  connectFunctionsEmulator$1(getModularInstance(functionsInstance), host, port);
}
var FUNCTIONS_TYPE, ContextProvider, DEFAULT_REGION, FunctionsService, name4, version4, AUTH_INTERNAL_NAME, APP_CHECK_INTERNAL_NAME, MESSAGING_INTERNAL_NAME;
var init_index_esm20175 = __esm({
  "node_modules/@firebase/functions/dist/index.esm2017.js"() {
    init_index_esm20174();
    init_index_esm2017();
    init_index_esm20172();
    FUNCTIONS_TYPE = "functions";
    ContextProvider = class {
      constructor(authProvider, messagingProvider, appCheckProvider) {
        this.auth = null;
        this.messaging = null;
        this.appCheck = null;
        this.auth = authProvider.getImmediate({ optional: true });
        this.messaging = messagingProvider.getImmediate({
          optional: true
        });
        if (!this.auth) {
          authProvider.get().then((auth) => this.auth = auth, () => {
          });
        }
        if (!this.messaging) {
          messagingProvider.get().then((messaging) => this.messaging = messaging, () => {
          });
        }
        if (!this.appCheck) {
          appCheckProvider.get().then((appCheck) => this.appCheck = appCheck, () => {
          });
        }
      }
      async getAuthToken() {
        if (!this.auth) {
          return void 0;
        }
        try {
          const token = await this.auth.getToken();
          return token === null || token === void 0 ? void 0 : token.accessToken;
        } catch (e7) {
          return void 0;
        }
      }
      async getMessagingToken() {
        if (!this.messaging || !("Notification" in self) || Notification.permission !== "granted") {
          return void 0;
        }
        try {
          return await this.messaging.getToken();
        } catch (e7) {
          return void 0;
        }
      }
      async getAppCheckToken() {
        if (this.appCheck) {
          const result = await this.appCheck.getToken();
          if (result.error) {
            return null;
          }
          return result.token;
        }
        return null;
      }
      async getContext() {
        const authToken = await this.getAuthToken();
        const messagingToken = await this.getMessagingToken();
        const appCheckToken = await this.getAppCheckToken();
        return { authToken, messagingToken, appCheckToken };
      }
    };
    DEFAULT_REGION = "us-central1";
    FunctionsService = class {
      constructor(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain = DEFAULT_REGION, fetchImpl) {
        this.app = app;
        this.fetchImpl = fetchImpl;
        this.emulatorOrigin = null;
        this.contextProvider = new ContextProvider(authProvider, messagingProvider, appCheckProvider);
        this.cancelAllRequests = new Promise((resolve) => {
          this.deleteService = () => {
            return Promise.resolve(resolve());
          };
        });
        try {
          const url = new URL(regionOrCustomDomain);
          this.customDomain = url.origin;
          this.region = DEFAULT_REGION;
        } catch (e7) {
          this.customDomain = null;
          this.region = regionOrCustomDomain;
        }
      }
      _delete() {
        return this.deleteService();
      }
      _url(name5) {
        const projectId = this.app.options.projectId;
        if (this.emulatorOrigin !== null) {
          const origin = this.emulatorOrigin;
          return `${origin}/${projectId}/${this.region}/${name5}`;
        }
        if (this.customDomain !== null) {
          return `${this.customDomain}/${name5}`;
        }
        return `https://${this.region}-${projectId}.cloudfunctions.net/${name5}`;
      }
    };
    name4 = "@firebase/functions";
    version4 = "0.9.0";
    AUTH_INTERNAL_NAME = "auth-internal";
    APP_CHECK_INTERNAL_NAME = "app-check-internal";
    MESSAGING_INTERNAL_NAME = "messaging-internal";
    registerFunctions(fetch.bind(self));
  }
});

// node_modules/firebase/functions/dist/esm/index.esm.js
var init_index_esm5 = __esm({
  "node_modules/firebase/functions/dist/esm/index.esm.js"() {
    init_index_esm20175();
  }
});

// .svelte-kit/output/server/entries/pages/stripe/_page.svelte.js
var page_svelte_exports9 = {};
__export(page_svelte_exports9, {
  default: () => m7
});
var i3, m7;
var init_page_svelte9 = __esm({
  ".svelte-kit/output/server/entries/pages/stripe/_page.svelte.js"() {
    init_chunks();
    init_firebase();
    init_index_esm5();
    i3 = { code: '.loading.svelte-tci3t6:after{content:" . . .";animation:svelte-tci3t6-dots 1s steps(5, end) infinite}@keyframes svelte-tci3t6-dots{0%,40%{color:rgba(0, 0, 0, 0)}}', map: null };
    m7 = I((t3, n3, c4, a4) => (getFunctions(E2), t3.css.add(i3), `${t3.head += `<!-- HEAD_svelte-1jxl9zf_START -->${t3.title = "<title>Stripe Checkout</title>", ""}<script src="https://js.stripe.com/v3/"><\/script><!-- HEAD_svelte-1jxl9zf_END -->`, ""}

<main></main>






`));
  }
});

// .svelte-kit/output/server/nodes/14.js
var __exports15 = {};
__export(__exports15, {
  component: () => component15,
  file: () => file15,
  fonts: () => fonts15,
  imports: () => imports15,
  index: () => index15,
  stylesheets: () => stylesheets15
});
var index15, component15, file15, imports15, stylesheets15, fonts15;
var init__15 = __esm({
  ".svelte-kit/output/server/nodes/14.js"() {
    index15 = 14;
    component15 = async () => (await Promise.resolve().then(() => (init_page_svelte9(), page_svelte_exports9))).default;
    file15 = "_app/immutable/components/pages/stripe/_page.svelte-00794a46.js";
    imports15 = ["_app/immutable/components/pages/stripe/_page.svelte-00794a46.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/public-520e6fd8.js", "_app/immutable/chunks/index-1b1ee987.js", "_app/immutable/chunks/firebase-c41625c4.js"];
    stylesheets15 = ["_app/immutable/assets/_page-5c304dd7.css"];
    fonts15 = [];
  }
});

// .svelte-kit/output/server/index.js
init_chunks();
init_prod_ssr();

// node_modules/devalue/src/utils.js
var escaped = {
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\u0000",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var DevalueError = class extends Error {
  constructor(message, keys) {
    super(message);
    this.name = "DevalueError";
    this.path = keys.join("");
  }
};
function is_primitive(thing) {
  return Object(thing) !== thing;
}
var object_proto_names = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function is_plain_object(thing) {
  const proto = Object.getPrototypeOf(thing);
  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join("\0") === object_proto_names;
}
function get_type(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function stringify_string(str) {
  let result = '"';
  for (let i4 = 0; i4 < str.length; i4 += 1) {
    const char = str.charAt(i4);
    const code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped) {
      result += escaped[char];
    } else if (code >= 55296 && code <= 57343) {
      const next = str.charCodeAt(i4 + 1);
      if (code <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str[++i4];
      } else {
        result += `\\u${code.toString(16).toUpperCase()}`;
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}

// node_modules/devalue/src/uneval.js
var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
var unsafe_chars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
var reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
var object_proto_names2 = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function uneval(value) {
  const counts = /* @__PURE__ */ new Map();
  const keys = [];
  function walk(thing) {
    if (typeof thing === "function") {
      throw new DevalueError(`Cannot stringify a function`, keys);
    }
    if (!is_primitive(thing)) {
      if (counts.has(thing)) {
        counts.set(thing, counts.get(thing) + 1);
        return;
      }
      counts.set(thing, 1);
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "BigInt":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach((value2, i4) => {
            keys.push(`[${i4}]`);
            walk(value2);
            keys.pop();
          });
          break;
        case "Set":
          Array.from(thing).forEach(walk);
          break;
        case "Map":
          for (const [key, value2] of thing) {
            keys.push(
              `.get(${is_primitive(key) ? stringify_primitive(key) : "..."})`
            );
            walk(value2);
            keys.pop();
          }
          break;
        default:
          const proto = Object.getPrototypeOf(thing);
          if (proto !== Object.prototype && proto !== null && Object.getOwnPropertyNames(proto).sort().join("\0") !== object_proto_names2) {
            throw new DevalueError(
              `Cannot stringify arbitrary non-POJOs`,
              keys
            );
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new DevalueError(
              `Cannot stringify POJOs with symbolic keys`,
              keys
            );
          }
          for (const key in thing) {
            keys.push(`.${key}`);
            walk(thing[key]);
            keys.pop();
          }
      }
    }
  }
  walk(value);
  const names = /* @__PURE__ */ new Map();
  Array.from(counts).filter((entry) => entry[1] > 1).sort((a4, b6) => b6[1] - a4[1]).forEach((entry, i4) => {
    names.set(entry[0], get_name(i4));
  });
  function stringify2(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (is_primitive(thing)) {
      return stringify_primitive(thing);
    }
    const type = get_type(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return `Object(${stringify2(thing.valueOf())})`;
      case "RegExp":
        return `new RegExp(${stringify_string(thing.source)}, "${thing.flags}")`;
      case "Date":
        return `new Date(${thing.getTime()})`;
      case "Array":
        const members = thing.map(
          (v6, i4) => i4 in thing ? stringify2(v6) : ""
        );
        const tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return `[${members.join(",")}${tail}]`;
      case "Set":
      case "Map":
        return `new ${type}([${Array.from(thing).map(stringify2).join(",")}])`;
      default:
        const obj = `{${Object.keys(thing).map((key) => `${safe_key(key)}:${stringify2(thing[key])}`).join(",")}}`;
        const proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? `Object.assign(Object.create(null),${obj})` : `Object.create(null)`;
        }
        return obj;
    }
  }
  const str = stringify2(value);
  if (names.size) {
    const params = [];
    const statements = [];
    const values = [];
    names.forEach((name5, thing) => {
      params.push(name5);
      if (is_primitive(thing)) {
        values.push(stringify_primitive(thing));
        return;
      }
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values.push(`Object(${stringify2(thing.valueOf())})`);
          break;
        case "RegExp":
          values.push(thing.toString());
          break;
        case "Date":
          values.push(`new Date(${thing.getTime()})`);
          break;
        case "Array":
          values.push(`Array(${thing.length})`);
          thing.forEach((v6, i4) => {
            statements.push(`${name5}[${i4}]=${stringify2(v6)}`);
          });
          break;
        case "Set":
          values.push(`new Set`);
          statements.push(
            `${name5}.${Array.from(thing).map((v6) => `add(${stringify2(v6)})`).join(".")}`
          );
          break;
        case "Map":
          values.push(`new Map`);
          statements.push(
            `${name5}.${Array.from(thing).map(([k6, v6]) => `set(${stringify2(k6)}, ${stringify2(v6)})`).join(".")}`
          );
          break;
        default:
          values.push(
            Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}"
          );
          Object.keys(thing).forEach((key) => {
            statements.push(
              `${name5}${safe_prop(key)}=${stringify2(thing[key])}`
            );
          });
      }
    });
    statements.push(`return ${str}`);
    return `(function(${params.join(",")}){${statements.join(
      ";"
    )}}(${values.join(",")}))`;
  } else {
    return str;
  }
}
function get_name(num) {
  let name5 = "";
  do {
    name5 = chars[num % chars.length] + name5;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name5) ? `${name5}0` : name5;
}
function escape_unsafe_char(c4) {
  return escaped[c4] || c4;
}
function escape_unsafe_chars(str) {
  return str.replace(unsafe_chars, escape_unsafe_char);
}
function safe_key(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? key : escape_unsafe_chars(JSON.stringify(key));
}
function safe_prop(key) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key) ? `.${key}` : `[${escape_unsafe_chars(JSON.stringify(key))}]`;
}
function stringify_primitive(thing) {
  if (typeof thing === "string")
    return stringify_string(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  const str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  if (typeof thing === "bigint")
    return thing + "n";
  return str;
}

// node_modules/devalue/src/constants.js
var UNDEFINED = -1;
var HOLE = -2;
var NAN = -3;
var POSITIVE_INFINITY = -4;
var NEGATIVE_INFINITY = -5;
var NEGATIVE_ZERO = -6;

// node_modules/devalue/src/stringify.js
function stringify(value) {
  const stringified = [];
  const indexes = /* @__PURE__ */ new Map();
  const keys = [];
  let p6 = 0;
  function flatten(thing) {
    if (typeof thing === "function") {
      throw new DevalueError(`Cannot stringify a function`, keys);
    }
    if (indexes.has(thing))
      return indexes.get(thing);
    if (thing === void 0)
      return UNDEFINED;
    if (Number.isNaN(thing))
      return NAN;
    if (thing === Infinity)
      return POSITIVE_INFINITY;
    if (thing === -Infinity)
      return NEGATIVE_INFINITY;
    if (thing === 0 && 1 / thing < 0)
      return NEGATIVE_ZERO;
    const index17 = p6++;
    indexes.set(thing, index17);
    let str = "";
    if (is_primitive(thing)) {
      str = stringify_primitive2(thing);
    } else {
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          str = `["Object",${stringify_primitive2(thing)}]`;
          break;
        case "BigInt":
          str = `["BigInt",${thing}]`;
          break;
        case "Date":
          str = `["Date","${thing.toISOString()}"]`;
          break;
        case "RegExp":
          const { source, flags } = thing;
          str = flags ? `["RegExp",${stringify_string(source)},"${flags}"]` : `["RegExp",${stringify_string(source)}]`;
          break;
        case "Array":
          str = "[";
          for (let i4 = 0; i4 < thing.length; i4 += 1) {
            if (i4 > 0)
              str += ",";
            if (i4 in thing) {
              keys.push(`[${i4}]`);
              str += flatten(thing[i4]);
              keys.pop();
            } else {
              str += HOLE;
            }
          }
          str += "]";
          break;
        case "Set":
          str = '["Set"';
          for (const value2 of thing) {
            str += `,${flatten(value2)}`;
          }
          str += "]";
          break;
        case "Map":
          str = '["Map"';
          for (const [key, value2] of thing) {
            keys.push(
              `.get(${is_primitive(key) ? stringify_primitive2(key) : "..."})`
            );
            str += `,${flatten(key)},${flatten(value2)}`;
          }
          str += "]";
          break;
        default:
          if (!is_plain_object(thing)) {
            throw new DevalueError(
              `Cannot stringify arbitrary non-POJOs`,
              keys
            );
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new DevalueError(
              `Cannot stringify POJOs with symbolic keys`,
              keys
            );
          }
          if (Object.getPrototypeOf(thing) === null) {
            str = '["null"';
            for (const key in thing) {
              keys.push(`.${key}`);
              str += `,${stringify_string(key)},${flatten(thing[key])}`;
              keys.pop();
            }
            str += "]";
          } else {
            str = "{";
            let started = false;
            for (const key in thing) {
              if (started)
                str += ",";
              started = true;
              keys.push(`.${key}`);
              str += `${stringify_string(key)}:${flatten(thing[key])}`;
              keys.pop();
            }
            str += "}";
          }
      }
    }
    stringified[index17] = str;
    return index17;
  }
  const index16 = flatten(value);
  if (index16 < 0)
    return `${index16}`;
  return `[${stringified.join(",")}]`;
}
function stringify_primitive2(thing) {
  const type = typeof thing;
  if (type === "string")
    return stringify_string(thing);
  if (thing instanceof String)
    return stringify_string(thing.toString());
  if (thing === void 0)
    return UNDEFINED.toString();
  if (thing === 0 && 1 / thing < 0)
    return NEGATIVE_ZERO.toString();
  if (type === "bigint")
    return `["BigInt","${thing}"]`;
  return String(thing);
}

// .svelte-kit/output/server/index.js
init_index2();
var import_cookie = __toESM(require_cookie(), 1);
var le = __toESM(require_set_cookie(), 1);
var Ze = I((e7, t3, r6, n3) => {
  let { stores: s6 } = t3, { page: o4 } = t3, { components: a4 } = t3, { form: i4 } = t3, { data_0: c4 = null } = t3, { data_1: f6 = null } = t3;
  return C("__svelte__", s6), s6.page.notify, t3.stores === void 0 && r6.stores && s6 !== void 0 && r6.stores(s6), t3.page === void 0 && r6.page && o4 !== void 0 && r6.page(o4), t3.components === void 0 && r6.components && a4 !== void 0 && r6.components(a4), t3.form === void 0 && r6.form && i4 !== void 0 && r6.form(i4), t3.data_0 === void 0 && r6.data_0 && c4 !== void 0 && r6.data_0(c4), t3.data_1 === void 0 && r6.data_1 && f6 !== void 0 && r6.data_1(f6), s6.page.set(o4), `


${a4[1] ? `${G(a4[0] || F, "svelte:component").$$render(e7, { data: c4 }, {}, { default: () => `${G(a4[1] || F, "svelte:component").$$render(e7, { data: f6, form: i4 }, {}, {})}` })}` : `${G(a4[0] || F, "svelte:component").$$render(e7, { data: c4, form: i4 }, {}, {})}`}

`;
});
function Z(e7, t3) {
  const r6 = [];
  e7.split(",").forEach((o4, a4) => {
    const i4 = /([^/]+)\/([^;]+)(?:;q=([0-9.]+))?/.exec(o4);
    if (i4) {
      const [, c4, f6, y7 = "1"] = i4;
      r6.push({ type: c4, subtype: f6, q: +y7, i: a4 });
    }
  }), r6.sort((o4, a4) => o4.q !== a4.q ? a4.q - o4.q : o4.subtype === "*" != (a4.subtype === "*") ? o4.subtype === "*" ? 1 : -1 : o4.type === "*" != (a4.type === "*") ? o4.type === "*" ? 1 : -1 : o4.i - a4.i);
  let n3, s6 = 1 / 0;
  for (const o4 of t3) {
    const [a4, i4] = o4.split("/"), c4 = r6.findIndex((f6) => (f6.type === a4 || f6.type === "*") && (f6.subtype === i4 || f6.subtype === "*"));
    c4 !== -1 && c4 < s6 && (n3 = o4, s6 = c4);
  }
  return n3;
}
function et(e7, ...t3) {
  const r6 = e7.headers.get("content-type")?.split(";", 1)[0].trim() ?? "";
  return t3.includes(r6);
}
function xe(e7) {
  return et(e7, "application/x-www-form-urlencoded", "multipart/form-data");
}
var C2 = class {
  constructor(t3, r6) {
    this.status = t3, typeof r6 == "string" ? this.body = { message: r6 } : r6 ? this.body = r6 : this.body = { message: `Error: ${t3}` };
  }
  toString() {
    return JSON.stringify(this.body);
  }
};
var U = class {
  constructor(t3, r6) {
    this.status = t3, this.location = r6;
  }
};
var ee = class {
  constructor(t3, r6) {
    this.status = t3, this.data = r6;
  }
};
function tt(e7) {
  return e7 instanceof Error || e7 && e7.name && e7.message ? e7 : new Error(JSON.stringify(e7));
}
function te(e7, t3) {
  return e7 === "/" || t3 === "ignore" ? e7 : t3 === "never" ? e7.endsWith("/") ? e7.slice(0, -1) : e7 : t3 === "always" && !e7.endsWith("/") ? e7 + "/" : e7;
}
function rt(e7) {
  return e7.split("%25").map(decodeURI).join("%25");
}
function nt(e7) {
  for (const t3 in e7)
    e7[t3] = decodeURIComponent(e7[t3]);
  return e7;
}
var st = ["href", "pathname", "search", "searchParams", "toString", "toJSON"];
function ot(e7, t3) {
  const r6 = new URL(e7);
  for (const n3 of st) {
    let s6 = r6[n3];
    Object.defineProperty(r6, n3, { get() {
      return t3(), s6;
    }, enumerable: true, configurable: true });
  }
  return r6[Symbol.for("nodejs.util.inspect.custom")] = (n3, s6, o4) => o4(e7, s6), at(r6), r6;
}
function at(e7) {
  Object.defineProperty(e7, "hash", { get() {
    throw new Error("Cannot access event.url.hash. Consider using `$page.url.hash` inside a component instead");
  } });
}
function Re(e7) {
  for (const t3 of ["search", "searchParams"])
    Object.defineProperty(e7, t3, { get() {
      throw new Error(`Cannot access url.${t3} on a page with prerendering enabled`);
    } });
}
var re = "/__data.json";
function $e(e7) {
  return e7.endsWith(re);
}
function it(e7) {
  return e7.replace(/\/$/, "") + re;
}
function de(e7) {
  return e7.slice(0, -re.length);
}
var ve = { id: "__error" };
function ct(e7, t3) {
  return new Response(`${t3} method not allowed`, { status: 405, headers: { allow: lt(e7).join(", ") } });
}
function lt(e7) {
  const t3 = [];
  for (const r6 in ["GET", "POST", "PUT", "PATCH", "DELETE"])
    r6 in e7 && t3.push(r6);
  return (e7.GET || e7.HEAD) && t3.push("HEAD"), t3;
}
function P(e7, t3) {
  return e7.reduce((r6, n3) => n3?.universal?.[t3] ?? n3?.server?.[t3] ?? r6, void 0);
}
function ne(e7, t3, r6) {
  return new Response(e7.error_template({ status: t3, message: r6 }), { headers: { "content-type": "text/html; charset=utf-8" }, status: t3 });
}
async function ue(e7, t3, r6) {
  r6 = r6 instanceof C2 ? r6 : tt(r6);
  const n3 = r6 instanceof C2 ? r6.status : 500, s6 = await z3(e7, t3, r6), o4 = Z(e7.request.headers.get("accept") || "text/html", ["application/json", "text/html"]);
  return $e(new URL(e7.request.url).pathname) || o4 === "application/json" ? new Response(JSON.stringify(s6), { status: n3, headers: { "content-type": "application/json; charset=utf-8" } }) : ne(t3, n3, s6.message);
}
function z3(e7, t3, r6) {
  return r6 instanceof C2 ? r6.body : t3.handle_error(r6, e7);
}
function B(e7, t3) {
  return new Response(void 0, { status: e7, headers: { location: t3 } });
}
function Se(e7, t3) {
  return t3.path ? `Data returned from \`load\` while rendering ${e7.route.id} is not serializable: ${t3.message} (data${t3.path})` : t3.path === "" ? `Data returned from \`load\` while rendering ${e7.route.id} is not a plain object` : t3.message;
}
function Oe(e7) {
  if (!e7)
    return "null";
  if (e7.type === "error" || e7.type === "skip")
    return JSON.stringify(e7);
  const t3 = stringify(e7.data), r6 = [];
  return e7.uses.dependencies.size > 0 && r6.push(`"dependencies":${JSON.stringify(Array.from(e7.uses.dependencies))}`), e7.uses.params.size > 0 && r6.push(`"params":${JSON.stringify(Array.from(e7.uses.params))}`), e7.uses.parent && r6.push('"parent":1'), e7.uses.route && r6.push('"route":1'), e7.uses.url && r6.push('"url":1'), `{"type":"data","data":${t3},"uses":{${r6.join(",")}}${e7.slash ? `,"slash":${JSON.stringify(e7.slash)}` : ""}}`;
}
async function dt(e7, t3, r6) {
  const n3 = e7.request.method;
  let s6 = t3[n3];
  if (!s6 && n3 === "HEAD" && (s6 = t3.GET), !s6)
    return ct(t3, n3);
  const o4 = t3.prerender ?? r6.prerender_default;
  if (o4 && (t3.POST || t3.PATCH || t3.PUT || t3.DELETE))
    throw new Error("Cannot prerender endpoints that have mutative methods");
  if (r6.prerendering && !o4) {
    if (r6.initiator)
      throw new Error(`${e7.route.id} is not prerenderable`);
    return new Response(void 0, { status: 204 });
  }
  try {
    const a4 = await s6(e7);
    if (!(a4 instanceof Response))
      throw new Error(`Invalid response from route ${e7.url.pathname}: handler should return a Response object`);
    return r6.prerendering && a4.headers.set("x-sveltekit-prerender", String(o4)), a4;
  } catch (a4) {
    if (a4 instanceof U)
      return new Response(void 0, { status: a4.status, headers: { location: a4.location } });
    throw a4;
  }
}
function ut(e7) {
  const { method: t3, headers: r6 } = e7.request;
  if (t3 === "PUT" || t3 === "PATCH" || t3 === "DELETE")
    return true;
  if (t3 === "POST" && r6.get("x-sveltekit-action") === "true")
    return false;
  const n3 = e7.request.headers.get("accept") ?? "*/*";
  return Z(n3, ["*", "text/html"]) !== "text/html";
}
function fe(e7) {
  return e7.filter((t3) => t3 != null);
}
function se(e7, t3) {
  if (isNaN(e7) || e7 < 400 || e7 > 599)
    throw new Error(`HTTP error status codes must be between 400 and 599 \u2014 ${e7} is invalid`);
  return new C2(e7, t3);
}
function Pe(e7, t3) {
  const r6 = new Headers(t3?.headers);
  return r6.has("content-type") || r6.set("content-type", "application/json"), new Response(JSON.stringify(e7), { ...t3, headers: r6 });
}
function ft(e7) {
  return Z(e7.request.headers.get("accept") ?? "*/*", ["application/json", "text/html"]) === "application/json" && e7.request.method === "POST";
}
async function ht(e7, t3, r6) {
  const n3 = r6?.actions;
  if (!n3) {
    r6 && Ce(r6);
    const s6 = se(405, "POST method not allowed. No actions exist for this page");
    return L({ type: "error", error: await z3(e7, t3, s6) }, { status: s6.status, headers: { allow: "GET" } });
  }
  qe(n3);
  try {
    const s6 = await Ae(e7, n3);
    return s6 instanceof ee ? L({ type: "failure", status: s6.status, data: he(s6.data, e7.route.id) }) : L({ type: "success", status: s6 ? 200 : 204, data: he(s6, e7.route.id) });
  } catch (s6) {
    const o4 = s6;
    return o4 instanceof U ? L({ type: "redirect", status: o4.status, location: o4.location }) : L({ type: "error", error: await z3(e7, t3, Te(o4)) }, { status: o4 instanceof C2 ? o4.status : 500 });
  }
}
function Te(e7) {
  return e7 instanceof ee ? new Error('Cannot "throw fail()". Use "return fail()"') : e7;
}
function L(e7, t3) {
  return Pe(e7, t3);
}
function pt(e7, t3) {
  return t3.server && e7.request.method !== "GET" && e7.request.method !== "HEAD";
}
async function mt(e7, t3) {
  const r6 = t3.actions;
  if (!r6)
    return Ce(t3), e7.setHeaders({ allow: "GET" }), { type: "error", error: se(405, "POST method not allowed. No actions exist for this page") };
  qe(r6);
  try {
    const n3 = await Ae(e7, r6);
    return n3 instanceof ee ? { type: "failure", status: n3.status, data: n3.data } : { type: "success", status: 200, data: n3 };
  } catch (n3) {
    const s6 = n3;
    return s6 instanceof U ? { type: "redirect", status: s6.status, location: s6.location } : { type: "error", error: Te(s6) };
  }
}
function qe(e7) {
  if (e7.default && Object.keys(e7).length > 1)
    throw new Error("When using named actions, the default action cannot be used. See the docs for more info: https://kit.svelte.dev/docs/form-actions#named-actions");
}
async function Ae(e7, t3) {
  const r6 = new URL(e7.request.url);
  let n3 = "default";
  for (const o4 of r6.searchParams)
    if (o4[0].startsWith("/")) {
      if (n3 = o4[0].slice(1), n3 === "default")
        throw new Error('Cannot use reserved action name "default"');
      break;
    }
  const s6 = t3[n3];
  if (!s6)
    throw new Error(`No action with name '${n3}' found`);
  if (!xe(e7.request))
    throw new Error(`Actions expect form-encoded data (received ${e7.request.headers.get("content-type")}`);
  return s6(e7);
}
function Ce(e7) {
  for (const t3 of ["POST", "PUT", "PATCH", "DELETE"])
    if (e7[t3])
      throw new Error(`${t3} method no longer allowed in +page.server, use actions instead. See the PR for more info: https://github.com/sveltejs/kit/pull/6469`);
}
function _t(e7, t3) {
  return Ue(e7, uneval, t3);
}
function he(e7, t3) {
  return Ue(e7, stringify, t3);
}
function Ue(e7, t3, r6) {
  try {
    return t3(e7);
  } catch (n3) {
    const s6 = n3;
    if ("path" in s6) {
      let o4 = `Data returned from action inside ${r6} is not serializable: ${s6.message}`;
      throw s6.path !== "" && (o4 += ` (data.${s6.path})`), new Error(o4);
    }
    throw s6;
  }
}
async function ze(e7) {
  for (const t3 in e7)
    if (typeof e7[t3]?.then == "function")
      return Object.fromEntries(await Promise.all(Object.entries(e7).map(async ([r6, n3]) => [r6, await n3])));
  return e7;
}
async function oe({ event: e7, options: t3, state: r6, node: n3, parent: s6 }) {
  if (!n3?.server)
    return null;
  const o4 = { dependencies: /* @__PURE__ */ new Set(), params: /* @__PURE__ */ new Set(), parent: false, route: false, url: false }, a4 = ot(e7.url, () => {
    o4.url = true;
  });
  r6.prerendering && Re(a4);
  const i4 = await n3.server.load?.call(null, { ...e7, depends: (...f6) => {
    for (const y7 of f6) {
      const { href: k6 } = new URL(y7, e7.url);
      o4.dependencies.add(k6);
    }
  }, params: new Proxy(e7.params, { get: (f6, y7) => (o4.params.add(y7), f6[y7]) }), parent: async () => (o4.parent = true, s6()), route: { get id() {
    return o4.route = true, e7.route.id;
  } }, url: a4 }), c4 = i4 ? await ze(i4) : null;
  return t3.dev && He(c4, e7.route.id), { type: "data", data: c4, uses: o4, slash: n3.server.trailingSlash };
}
async function Ne({ event: e7, fetched: t3, node: r6, parent: n3, server_data_promise: s6, state: o4, resolve_opts: a4, csr: i4 }) {
  const c4 = await s6;
  if (!r6?.universal?.load)
    return c4?.data ?? null;
  const f6 = await r6.universal.load.call(null, { url: e7.url, params: e7.params, data: c4?.data ?? null, route: e7.route, fetch: async (k6, u) => {
    const _6 = k6 instanceof Request && k6.body ? k6.clone().body : null, l4 = await e7.fetch(k6, u), d6 = new URL(k6 instanceof Request ? k6.url : k6, e7.url), p6 = d6.origin === e7.url.origin;
    let m8;
    if (p6)
      o4.prerendering && (m8 = { response: l4, body: null }, o4.prerendering.dependencies.set(d6.pathname, m8));
    else if ((k6 instanceof Request ? k6.mode : u?.mode ?? "cors") !== "no-cors") {
      const g6 = l4.headers.get("access-control-allow-origin");
      if (!g6 || g6 !== e7.url.origin && g6 !== "*")
        throw new Error(`CORS error: ${g6 ? "Incorrect" : "No"} 'Access-Control-Allow-Origin' header is present on the requested resource`);
    }
    const E4 = new Proxy(l4, { get(h3, g6, R5) {
      async function b6() {
        const j3 = await h3.text();
        if (!j3 || typeof j3 == "string") {
          const O4 = Number(h3.status);
          if (isNaN(O4))
            throw new Error(`response.status is not a number. value: "${h3.status}" type: ${typeof h3.status}`);
          t3.push({ url: p6 ? d6.href.slice(e7.url.origin.length) : d6.href, method: e7.request.method, request_body: k6 instanceof Request && _6 ? await yt(_6) : u?.body, response_body: j3, response: h3 });
        }
        return m8 && (m8.body = j3), j3;
      }
      return g6 === "arrayBuffer" ? async () => {
        const j3 = await h3.arrayBuffer();
        return m8 && (m8.body = new Uint8Array(j3)), j3;
      } : g6 === "text" ? b6 : g6 === "json" ? async () => JSON.parse(await b6()) : Reflect.get(h3, g6, h3);
    } });
    if (i4) {
      const h3 = l4.headers.get;
      l4.headers.get = (g6) => {
        const R5 = g6.toLowerCase(), b6 = h3.call(l4.headers, R5);
        if (b6 && !R5.startsWith("x-sveltekit-") && !a4.filterSerializedResponseHeaders(R5, b6))
          throw new Error(`Failed to get response header "${R5}" \u2014 it must be included by the \`filterSerializedResponseHeaders\` option: https://kit.svelte.dev/docs/hooks#server-hooks-handle (at ${e7.route})`);
        return b6;
      };
    }
    return E4;
  }, setHeaders: e7.setHeaders, depends: () => {
  }, parent: n3 }), y7 = f6 ? await ze(f6) : null;
  return He(y7, e7.route.id), y7;
}
async function yt(e7) {
  let t3 = "";
  const r6 = e7.getReader(), n3 = new TextDecoder();
  for (; ; ) {
    const { done: s6, value: o4 } = await r6.read();
    if (s6)
      break;
    t3 += n3.decode(o4);
  }
  return t3;
}
function He(e7, t3) {
  if (e7 != null && Object.getPrototypeOf(e7) !== Object.prototype)
    throw new Error(`a load function related to route '${t3}' returned ${typeof e7 != "object" ? `a ${typeof e7}` : e7 instanceof Response ? "a Response object" : Array.isArray(e7) ? "an array" : "a non-plain object"}, but must return a plain object at the top level (i.e. \`return {...}\`)`);
}
function V(e7) {
  let t3 = 5381;
  if (typeof e7 == "string") {
    let r6 = e7.length;
    for (; r6; )
      t3 = t3 * 33 ^ e7.charCodeAt(--r6);
  } else if (ArrayBuffer.isView(e7)) {
    const r6 = new Uint8Array(e7.buffer, e7.byteOffset, e7.byteLength);
    let n3 = r6.length;
    for (; n3; )
      t3 = t3 * 33 ^ r6[--n3];
  } else
    throw new TypeError("value must be a string or TypedArray");
  return (t3 >>> 0).toString(36);
}
var Ie = { "&": "&amp;", '"': "&quot;" };
var gt = new RegExp(`[${Object.keys(Ie).join("")}]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\udc00-\\udfff]`, "g");
function Y(e7) {
  return `"${e7.replace(gt, (r6) => r6.length === 2 ? r6 : Ie[r6] ?? `&#${r6.charCodeAt(0)};`)}"`;
}
var De = { "<": "\\u003C", "\u2028": "\\u2028", "\u2029": "\\u2029" };
var wt = new RegExp(`[${Object.keys(De).join("")}]`, "g");
function bt(e7, t3, r6 = false) {
  const n3 = {};
  let s6 = null, o4 = null;
  for (const [f6, y7] of e7.response.headers)
    t3(f6, y7) && (n3[f6] = y7), f6 === "cache-control" && (s6 = y7), f6 === "age" && (o4 = y7);
  const a4 = { status: e7.response.status, statusText: e7.response.statusText, headers: n3, body: e7.response_body }, i4 = JSON.stringify(a4).replace(wt, (f6) => De[f6]), c4 = ['type="application/json"', "data-sveltekit-fetched", `data-url=${Y(e7.url)}`];
  if (e7.request_body && c4.push(`data-hash=${Y(V(e7.request_body))}`), !r6 && e7.method === "GET" && s6) {
    const f6 = /s-maxage=(\d+)/g.exec(s6) ?? /max-age=(\d+)/g.exec(s6);
    if (f6) {
      const y7 = +f6[1] - +(o4 ?? "0");
      c4.push(`data-ttl="${y7}"`);
    }
  }
  return `<script ${c4.join(" ")}>${i4}<\/script>`;
}
var q2 = JSON.stringify;
var kt = new TextEncoder();
function pe(e7) {
  X[0] || Et();
  const t3 = Le.slice(0), r6 = jt(e7);
  for (let s6 = 0; s6 < r6.length; s6 += 16) {
    const o4 = r6.subarray(s6, s6 + 16);
    let a4, i4, c4, f6 = t3[0], y7 = t3[1], k6 = t3[2], u = t3[3], _6 = t3[4], l4 = t3[5], d6 = t3[6], p6 = t3[7];
    for (let m8 = 0; m8 < 64; m8++)
      m8 < 16 ? a4 = o4[m8] : (i4 = o4[m8 + 1 & 15], c4 = o4[m8 + 14 & 15], a4 = o4[m8 & 15] = (i4 >>> 7 ^ i4 >>> 18 ^ i4 >>> 3 ^ i4 << 25 ^ i4 << 14) + (c4 >>> 17 ^ c4 >>> 19 ^ c4 >>> 10 ^ c4 << 15 ^ c4 << 13) + o4[m8 & 15] + o4[m8 + 9 & 15] | 0), a4 = a4 + p6 + (_6 >>> 6 ^ _6 >>> 11 ^ _6 >>> 25 ^ _6 << 26 ^ _6 << 21 ^ _6 << 7) + (d6 ^ _6 & (l4 ^ d6)) + X[m8], p6 = d6, d6 = l4, l4 = _6, _6 = u + a4 | 0, u = k6, k6 = y7, y7 = f6, f6 = a4 + (y7 & k6 ^ u & (y7 ^ k6)) + (y7 >>> 2 ^ y7 >>> 13 ^ y7 >>> 22 ^ y7 << 30 ^ y7 << 19 ^ y7 << 10) | 0;
    t3[0] = t3[0] + f6 | 0, t3[1] = t3[1] + y7 | 0, t3[2] = t3[2] + k6 | 0, t3[3] = t3[3] + u | 0, t3[4] = t3[4] + _6 | 0, t3[5] = t3[5] + l4 | 0, t3[6] = t3[6] + d6 | 0, t3[7] = t3[7] + p6 | 0;
  }
  const n3 = new Uint8Array(t3.buffer);
  return We(n3), Je(n3);
}
var Le = new Uint32Array(8);
var X = new Uint32Array(64);
function Et() {
  function e7(r6) {
    return (r6 - Math.floor(r6)) * 4294967296;
  }
  let t3 = 2;
  for (let r6 = 0; r6 < 64; t3++) {
    let n3 = true;
    for (let s6 = 2; s6 * s6 <= t3; s6++)
      if (t3 % s6 === 0) {
        n3 = false;
        break;
      }
    n3 && (r6 < 8 && (Le[r6] = e7(t3 ** (1 / 2))), X[r6] = e7(t3 ** (1 / 3)), r6++);
  }
}
function We(e7) {
  for (let t3 = 0; t3 < e7.length; t3 += 4) {
    const r6 = e7[t3 + 0], n3 = e7[t3 + 1], s6 = e7[t3 + 2], o4 = e7[t3 + 3];
    e7[t3 + 0] = o4, e7[t3 + 1] = s6, e7[t3 + 2] = n3, e7[t3 + 3] = r6;
  }
}
function jt(e7) {
  const t3 = kt.encode(e7), r6 = t3.length * 8, n3 = 512 * Math.ceil((r6 + 65) / 512), s6 = new Uint8Array(n3 / 8);
  s6.set(t3), s6[t3.length] = 128, We(s6);
  const o4 = new Uint32Array(s6.buffer);
  return o4[o4.length - 2] = Math.floor(r6 / 4294967296), o4[o4.length - 1] = r6, o4;
}
var A3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
function Je(e7) {
  const t3 = e7.length;
  let r6 = "", n3;
  for (n3 = 2; n3 < t3; n3 += 3)
    r6 += A3[e7[n3 - 2] >> 2], r6 += A3[(e7[n3 - 2] & 3) << 4 | e7[n3 - 1] >> 4], r6 += A3[(e7[n3 - 1] & 15) << 2 | e7[n3] >> 6], r6 += A3[e7[n3] & 63];
  return n3 === t3 + 1 && (r6 += A3[e7[n3 - 2] >> 2], r6 += A3[(e7[n3 - 2] & 3) << 4], r6 += "=="), n3 === t3 && (r6 += A3[e7[n3 - 2] >> 2], r6 += A3[(e7[n3 - 2] & 3) << 4 | e7[n3 - 1] >> 4], r6 += A3[(e7[n3 - 1] & 15) << 2], r6 += "="), r6;
}
var me = new Uint8Array(16);
function xt() {
  return crypto.getRandomValues(me), Je(me);
}
var Rt = /* @__PURE__ */ new Set(["self", "unsafe-eval", "unsafe-hashes", "unsafe-inline", "none", "strict-dynamic", "report-sample", "wasm-unsafe-eval"]);
var $t = /^(nonce|sha\d\d\d)-/;
var _r, _n, _s, _o, _e, _t2, _a;
var Ge = class {
  constructor(t3, r6, n3, s6) {
    __privateAdd(this, _r, void 0);
    __privateAdd(this, _n, void 0);
    __privateAdd(this, _s, void 0);
    __privateAdd(this, _o, void 0);
    __privateAdd(this, _e, void 0);
    __privateAdd(this, _t2, void 0);
    __privateAdd(this, _a, void 0);
    __privateSet(this, _r, t3), __privateSet(this, _o, s6 ? { ...r6 } : r6);
    const o4 = __privateGet(this, _o);
    if (s6) {
      const c4 = o4["style-src"] || o4["default-src"];
      c4 && !c4.includes("unsafe-inline") && (o4["style-src"] = [...c4, "unsafe-inline"]);
    }
    __privateSet(this, _e, []), __privateSet(this, _t2, []);
    const a4 = o4["script-src"] || o4["default-src"], i4 = o4["style-src"] || o4["default-src"];
    __privateSet(this, _n, !!a4 && a4.filter((c4) => c4 !== "unsafe-inline").length > 0), __privateSet(this, _s, !s6 && !!i4 && i4.filter((c4) => c4 !== "unsafe-inline").length > 0), this.script_needs_nonce = __privateGet(this, _n) && !__privateGet(this, _r), this.style_needs_nonce = __privateGet(this, _s) && !__privateGet(this, _r), __privateSet(this, _a, n3);
  }
  add_script(t3) {
    __privateGet(this, _n) && (__privateGet(this, _r) ? __privateGet(this, _e).push(`sha256-${pe(t3)}`) : __privateGet(this, _e).length === 0 && __privateGet(this, _e).push(`nonce-${__privateGet(this, _a)}`));
  }
  add_style(t3) {
    __privateGet(this, _s) && (__privateGet(this, _r) ? __privateGet(this, _t2).push(`sha256-${pe(t3)}`) : __privateGet(this, _t2).length === 0 && __privateGet(this, _t2).push(`nonce-${__privateGet(this, _a)}`));
  }
  get_header(t3 = false) {
    const r6 = [], n3 = { ...__privateGet(this, _o) };
    __privateGet(this, _t2).length > 0 && (n3["style-src"] = [...n3["style-src"] || n3["default-src"] || [], ...__privateGet(this, _t2)]), __privateGet(this, _e).length > 0 && (n3["script-src"] = [...n3["script-src"] || n3["default-src"] || [], ...__privateGet(this, _e)]);
    for (const s6 in n3) {
      if (t3 && (s6 === "frame-ancestors" || s6 === "report-uri" || s6 === "sandbox"))
        continue;
      const o4 = n3[s6];
      if (!o4)
        continue;
      const a4 = [s6];
      Array.isArray(o4) && o4.forEach((i4) => {
        Rt.has(i4) || $t.test(i4) ? a4.push(`'${i4}'`) : a4.push(i4);
      }), r6.push(a4.join(" "));
    }
    return r6.join("; ");
  }
};
_r = new WeakMap();
_n = new WeakMap();
_s = new WeakMap();
_o = new WeakMap();
_e = new WeakMap();
_t2 = new WeakMap();
_a = new WeakMap();
var vt = class extends Ge {
  get_meta() {
    return `<meta http-equiv="content-security-policy" content=${Y(this.get_header(true))}>`;
  }
};
var St = class extends Ge {
  constructor(t3, r6, n3, s6) {
    if (super(t3, r6, n3, s6), Object.values(r6).filter((o4) => !!o4).length > 0) {
      const o4 = r6["report-to"]?.length ?? 0 > 0, a4 = r6["report-uri"]?.length ?? 0 > 0;
      if (!o4 && !a4)
        throw Error("`content-security-policy-report-only` must be specified with either the `report-to` or `report-uri` directives, or both");
    }
  }
};
var Ot = class {
  constructor({ mode: t3, directives: r6, reportOnly: n3 }, { prerender: s6, dev: o4 }) {
    __publicField(this, "nonce", xt());
    __publicField(this, "csp_provider");
    __publicField(this, "report_only_provider");
    const a4 = t3 === "hash" || t3 === "auto" && s6;
    this.csp_provider = new vt(a4, r6, this.nonce, o4), this.report_only_provider = new St(a4, n3, this.nonce, o4);
  }
  get script_needs_nonce() {
    return this.csp_provider.script_needs_nonce || this.report_only_provider.script_needs_nonce;
  }
  get style_needs_nonce() {
    return this.csp_provider.style_needs_nonce || this.report_only_provider.style_needs_nonce;
  }
  add_script(t3) {
    this.csp_provider.add_script(t3), this.report_only_provider.add_script(t3);
  }
  add_style(t3) {
    this.csp_provider.add_style(t3), this.report_only_provider.add_style(t3);
  }
};
var Pt = { ...z2(false), check: () => false };
async function I2({ branch: e7, fetched: t3, options: r6, state: n3, page_config: s6, status: o4, error: a4 = null, event: i4, resolve_opts: c4, action_result: f6 }) {
  if (n3.prerendering) {
    if (r6.csp.mode === "nonce")
      throw new Error('Cannot use prerendering if config.kit.csp.mode === "nonce"');
    if (r6.app_template_contains_nonce)
      throw new Error("Cannot use prerendering if page template contains %sveltekit.nonce%");
  }
  const { entry: y7 } = r6.manifest._, k6 = new Set(y7.stylesheets), u = new Set(y7.imports), _6 = new Set(r6.manifest._.entry.fonts), l4 = /* @__PURE__ */ new Set(), d6 = /* @__PURE__ */ new Map();
  let p6;
  const m8 = f6?.type === "success" || f6?.type === "failure" ? f6.data ?? null : null;
  if (s6.ssr) {
    const w4 = { stores: { page: A2(null), navigating: A2(null), updated: Pt }, components: await Promise.all(e7.map(({ node: x5 }) => x5.component())), form: m8 };
    let $5 = {};
    for (let x5 = 0; x5 < e7.length; x5 += 1)
      $5 = { ...$5, ...e7[x5].data }, w4[`data_${x5}`] = $5;
    w4.page = { error: a4, params: i4.params, route: i4.route, status: o4, url: i4.url, data: $5, form: m8 }, p6 = r6.root.render(w4);
    for (const { node: x5 } of e7)
      x5.imports && x5.imports.forEach((v6) => u.add(v6)), x5.stylesheets && x5.stylesheets.forEach((v6) => k6.add(v6)), x5.fonts && x5.fonts.forEach((v6) => _6.add(v6)), x5.inline_styles && Object.entries(await x5.inline_styles()).forEach(([v6, N3]) => d6.set(v6, N3));
  } else
    p6 = { head: "", html: "", css: { code: "", map: null } };
  let E4 = "", h3 = p6.html;
  const g6 = new Ot(r6.csp, { dev: r6.dev, prerender: !!n3.prerendering }), R5 = V(h3);
  let b6;
  if (r6.paths.assets)
    b6 = r6.paths.assets;
  else if (n3.prerendering?.fallback)
    b6 = r6.paths.base;
  else {
    const w4 = i4.url.pathname.slice(r6.paths.base.length).split("/").slice(2);
    b6 = w4.length > 0 ? w4.map(() => "..").join("/") : ".";
  }
  const j3 = (w4) => w4.startsWith("/") ? w4 : `${b6}/${w4}`, O4 = { data: "", form: "null" };
  try {
    O4.data = `[${e7.map(({ server_data: w4 }) => {
      if (w4?.type === "data") {
        const $5 = uneval(w4.data), x5 = [];
        return w4.uses.dependencies.size > 0 && x5.push(`dependencies:${q2(Array.from(w4.uses.dependencies))}`), w4.uses.params.size > 0 && x5.push(`params:${q2(Array.from(w4.uses.params))}`), w4.uses.parent && x5.push("parent:1"), w4.uses.route && x5.push("route:1"), w4.uses.url && x5.push("url:1"), `{type:"data",data:${$5},uses:{${x5.join(",")}}${w4.slash ? `,slash:${q2(w4.slash)}` : ""}}`;
      }
      return q2(w4);
    }).join(",")}]`;
  } catch (w4) {
    const $5 = w4;
    throw new Error(Se(i4, $5));
  }
  if (m8 && (O4.form = _t(m8, i4.route.id)), d6.size > 0) {
    const w4 = Array.from(d6.values()).join(`
`), $5 = [];
    r6.dev && $5.push(" data-sveltekit"), g6.style_needs_nonce && $5.push(` nonce="${g6.nonce}"`), g6.add_style(w4), E4 += `
	<style${$5.join("")}>${w4}</style>`;
  }
  for (const w4 of k6) {
    const $5 = j3(w4);
    if (c4.preload({ type: "css", path: $5 })) {
      const x5 = [];
      if (g6.style_needs_nonce && x5.push(`nonce="${g6.nonce}"`), d6.has(w4))
        x5.push("disabled", 'media="(max-width: 0)"');
      else {
        const v6 = ['rel="preload"', 'as="style"'].concat(x5);
        l4.add(`<${encodeURI($5)}>; ${v6.join(";")}; nopush`);
      }
      x5.unshift('rel="stylesheet"'), E4 += `
		<link href="${$5}" ${x5.join(" ")}>`;
    }
  }
  for (const w4 of _6) {
    const $5 = j3(w4);
    if (c4.preload({ type: "font", path: $5 })) {
      const v6 = ['rel="preload"', 'as="font"', `type="font/${w4.slice(w4.lastIndexOf(".") + 1)}"`, `href="${$5}"`, "crossorigin"];
      E4 += `
		<link ${v6.join(" ")}>`;
    }
  }
  if (s6.csr) {
    const w4 = [`env: ${q2(r6.public_env)}`, `paths: ${q2(r6.paths)}`, `target: document.querySelector('[data-sveltekit-hydrate="${R5}"]').parentNode`, `version: ${q2(r6.version)}`];
    if (s6.ssr) {
      const v6 = [`node_ids: [${e7.map(({ node: N3 }) => N3.index).join(", ")}]`, `data: ${O4.data}`, `form: ${O4.form}`];
      o4 !== 200 && v6.push(`status: ${o4}`), a4 && v6.push(`error: ${uneval(a4)}`), r6.embedded && v6.push(`params: ${uneval(i4.params)}`, `route: ${q2(i4.route)}`), w4.push(`hydrate: {
					${v6.join(`,
					`)}
				}`);
    }
    const $5 = `
			import { start } from ${q2(j3(y7.file))};

			start({
				${w4.join(`,
				`)}
			});
		`;
    for (const v6 of u) {
      const N3 = j3(v6);
      c4.preload({ type: "js", path: N3 }) && (l4.add(`<${encodeURI(N3)}>; rel="modulepreload"; nopush`), n3.prerendering && (E4 += `
		<link rel="modulepreload" href="${N3}">`));
    }
    const x5 = ['type="module"', `data-sveltekit-hydrate="${R5}"`];
    g6.add_script($5), g6.script_needs_nonce && x5.push(`nonce="${g6.nonce}"`), h3 += `
		<script ${x5.join(" ")}>${$5}<\/script>`;
  }
  if (s6.ssr && s6.csr && (h3 += `
	${t3.map((w4) => bt(w4, c4.filterSerializedResponseHeaders, !!n3.prerendering)).join(`
	`)}`), r6.service_worker) {
    const w4 = r6.dev ? ", { type: 'module' }" : "", $5 = `
			if ('serviceWorker' in navigator) {
				addEventListener('load', function () {
					navigator.serviceWorker.register('${j3("service-worker.js")}'${w4});
				});
			}
		`;
    g6.add_script($5), E4 += `
		<script${g6.script_needs_nonce ? ` nonce="${g6.nonce}"` : ""}>${$5}<\/script>`;
  }
  if (n3.prerendering) {
    const w4 = [], $5 = g6.csp_provider.get_meta();
    $5 && w4.push($5), n3.prerendering.cache && w4.push(`<meta http-equiv="cache-control" content="${n3.prerendering.cache}">`), w4.length > 0 && (E4 = w4.join(`
`) + E4);
  }
  E4 += p6.head;
  const T6 = await c4.transformPageChunk({ html: r6.app_template({ head: E4, body: h3, assets: b6, nonce: g6.nonce }), done: true }) || "", H5 = new Headers({ "x-sveltekit-page": "true", "content-type": "text/html", etag: `"${V(T6)}"` });
  if (!n3.prerendering) {
    const w4 = g6.csp_provider.get_header();
    w4 && H5.set("content-security-policy", w4);
    const $5 = g6.report_only_provider.get_header();
    $5 && H5.set("content-security-policy-report-only", $5), l4.size && H5.set("link", Array.from(l4).join(", "));
  }
  return new Response(T6, { status: o4, headers: H5 });
}
async function Be({ event: e7, options: t3, state: r6, status: n3, error: s6, resolve_opts: o4 }) {
  const a4 = [];
  try {
    const i4 = [], c4 = await t3.manifest._.nodes[0](), f6 = P([c4], "ssr") ?? true, y7 = P([c4], "csr") ?? true;
    if (f6) {
      r6.initiator = ve;
      const k6 = oe({ event: e7, options: t3, state: r6, node: c4, parent: async () => ({}) }), u = await k6, _6 = await Ne({ event: e7, fetched: a4, node: c4, parent: async () => ({}), resolve_opts: o4, server_data_promise: k6, state: r6, csr: y7 });
      i4.push({ node: c4, server_data: u, data: _6 }, { node: await t3.manifest._.nodes[1](), data: null, server_data: null });
    }
    return await I2({ options: t3, state: r6, page_config: { ssr: f6, csr: P([c4], "csr") ?? true }, status: n3, error: await z3(e7, t3, s6), branch: i4, fetched: a4, event: e7, resolve_opts: o4 });
  } catch (i4) {
    return i4 instanceof U ? B(i4.status, i4.location) : ne(t3, i4 instanceof C2 ? i4.status : 500, (await z3(e7, t3, i4)).message);
  }
}
async function Tt(e7, t3, r6, n3, s6, o4) {
  if (s6.initiator === t3)
    return new Response(`Not found: ${e7.url.pathname}`, { status: 404 });
  if (s6.initiator = t3, ft(e7)) {
    const a4 = await n3.manifest._.nodes[r6.leaf]();
    return ht(e7, n3, a4?.server);
  }
  try {
    const a4 = await Promise.all([...r6.layouts.map((h3) => h3 == null ? h3 : n3.manifest._.nodes[h3]()), n3.manifest._.nodes[r6.leaf]()]), i4 = a4.at(-1);
    let c4 = 200, f6;
    if (pt(e7, i4)) {
      if (f6 = await mt(e7, i4.server), f6?.type === "redirect")
        return B(303, f6.location);
      if (f6?.type === "error") {
        const h3 = f6.error;
        c4 = h3 instanceof C2 ? h3.status : 500;
      }
      f6?.type === "failure" && (c4 = f6.status);
    }
    const y7 = a4.some((h3) => h3?.server), k6 = it(e7.url.pathname), u = P(a4, "prerender");
    if (u) {
      const h3 = i4.server;
      if (h3 && h3.actions)
        throw new Error("Cannot prerender pages with actions");
    } else if (s6.prerendering)
      return u !== false && P(a4, "ssr") === false && !i4.server?.actions ? await I2({ branch: [], fetched: [], page_config: { ssr: false, csr: P(a4, "csr") ?? true }, status: c4, error: null, event: e7, options: n3, state: s6, resolve_opts: o4 }) : new Response(void 0, { status: 204 });
    s6.prerender_default = u;
    const _6 = [];
    if (P(a4, "ssr") === false)
      return await I2({ branch: [], fetched: _6, page_config: { ssr: false, csr: P(a4, "csr") ?? true }, status: c4, error: null, event: e7, options: n3, state: s6, resolve_opts: o4 });
    let l4 = [], d6 = null;
    const p6 = a4.map((h3, g6) => {
      if (d6)
        throw d6;
      return Promise.resolve().then(async () => {
        try {
          if (h3 === i4 && f6?.type === "error")
            throw f6.error;
          return await oe({ event: e7, options: n3, state: s6, node: h3, parent: async () => {
            const R5 = {};
            for (let b6 = 0; b6 < g6; b6 += 1) {
              const j3 = await p6[b6];
              j3 && Object.assign(R5, await j3.data);
            }
            return R5;
          } });
        } catch (R5) {
          throw d6 = R5, d6;
        }
      });
    }), m8 = P(a4, "csr") ?? true, E4 = a4.map((h3, g6) => {
      if (d6)
        throw d6;
      return Promise.resolve().then(async () => {
        try {
          return await Ne({ event: e7, fetched: _6, node: h3, parent: async () => {
            const R5 = {};
            for (let b6 = 0; b6 < g6; b6 += 1)
              Object.assign(R5, await E4[b6]);
            return R5;
          }, resolve_opts: o4, server_data_promise: p6[g6], state: s6, csr: m8 });
        } catch (R5) {
          throw d6 = R5, d6;
        }
      });
    });
    for (const h3 of p6)
      h3.catch(() => {
      });
    for (const h3 of E4)
      h3.catch(() => {
      });
    for (let h3 = 0; h3 < a4.length; h3 += 1) {
      const g6 = a4[h3];
      if (g6)
        try {
          const R5 = await p6[h3], b6 = await E4[h3];
          l4.push({ node: g6, server_data: R5, data: b6 });
        } catch (R5) {
          const b6 = R5;
          if (b6 instanceof U) {
            if (s6.prerendering && y7) {
              const T6 = JSON.stringify({ type: "redirect", location: b6.location });
              s6.prerendering.dependencies.set(k6, { response: new Response(T6), body: T6 });
            }
            return B(b6.status, b6.location);
          }
          const j3 = b6 instanceof C2 ? b6.status : 500, O4 = await z3(e7, n3, b6);
          for (; h3--; )
            if (r6.errors[h3]) {
              const T6 = r6.errors[h3], H5 = await n3.manifest._.nodes[T6]();
              let w4 = h3;
              for (; !l4[w4]; )
                w4 -= 1;
              return await I2({ event: e7, options: n3, state: s6, resolve_opts: o4, page_config: { ssr: true, csr: true }, status: j3, error: O4, branch: fe(l4.slice(0, w4 + 1)).concat({ node: H5, data: null, server_data: null }), fetched: _6 });
            }
          return ne(n3, j3, O4.message);
        }
      else
        l4.push(null);
    }
    if (s6.prerendering && y7) {
      const h3 = `{"type":"data","nodes":[${l4.map((g6) => Oe(g6?.server_data)).join(",")}]}`;
      s6.prerendering.dependencies.set(k6, { response: new Response(h3), body: h3 });
    }
    return await I2({ event: e7, options: n3, state: s6, resolve_opts: o4, page_config: { csr: P(a4, "csr") ?? true, ssr: true }, status: c4, error: null, branch: fe(l4), action_result: f6, fetched: _6 });
  } catch (a4) {
    return await Be({ event: e7, options: n3, state: s6, status: 500, error: a4, resolve_opts: o4 });
  }
}
function qt(e7, t3, r6) {
  const n3 = {}, s6 = e7.slice(1);
  let o4 = "";
  for (let a4 = 0; a4 < t3.length; a4 += 1) {
    const i4 = t3[a4];
    let c4 = s6[a4];
    if (i4.chained && i4.rest && o4 && (c4 = c4 ? o4 + "/" + c4 : o4), o4 = "", c4 === void 0)
      i4.rest && (n3[i4.name] = "");
    else {
      if (i4.matcher && !r6[i4.matcher](c4)) {
        if (i4.optional && i4.chained) {
          let f6 = s6.indexOf(void 0, a4);
          if (f6 === -1) {
            const y7 = t3[a4 + 1];
            if (y7?.rest && y7.chained)
              o4 = c4;
            else
              return;
          }
          for (; f6 >= a4; )
            s6[f6] = s6[f6 - 1], f6 -= 1;
          continue;
        }
        return;
      }
      n3[i4.name] = c4;
    }
  }
  if (!o4)
    return n3;
}
function At(e7) {
  let t3 = false, r6;
  return () => t3 ? r6 : (t3 = true, r6 = e7());
}
var _e2 = "x-sveltekit-invalidated";
async function Ct(e7, t3, r6, n3, s6, o4) {
  if (!t3.page)
    return new Response(void 0, { status: 404 });
  try {
    const a4 = [...t3.page.layouts, t3.page.leaf], i4 = s6 ?? a4.map(() => true);
    let c4 = false;
    const f6 = new URL(e7.url);
    f6.pathname = te(f6.pathname, o4);
    const y7 = { ...e7, url: f6 }, k6 = a4.map((d6, p6) => At(async () => {
      try {
        if (c4)
          return { type: "skip" };
        const m8 = d6 == null ? d6 : await r6.manifest._.nodes[d6]();
        return oe({ event: y7, options: r6, state: n3, node: m8, parent: async () => {
          const E4 = {};
          for (let h3 = 0; h3 < p6; h3 += 1) {
            const g6 = await k6[h3]();
            g6 && Object.assign(E4, g6.data);
          }
          return E4;
        } });
      } catch (m8) {
        throw c4 = true, m8;
      }
    })), u = k6.map(async (d6, p6) => i4[p6] ? d6() : { type: "skip" });
    let _6 = u.length;
    const l4 = await Promise.all(u.map((d6, p6) => d6.catch(async (m8) => {
      if (m8 instanceof U)
        throw m8;
      return _6 = Math.min(_6, p6 + 1), { type: "error", error: await z3(e7, r6, m8), status: m8 instanceof C2 ? m8.status : void 0 };
    })));
    try {
      const p6 = `{"type":"data","nodes":[${l4.slice(0, _6).map(Oe).join(",")}]}`;
      return G2(p6);
    } catch (d6) {
      const p6 = d6;
      return G2(JSON.stringify(Se(e7, p6)), 500);
    }
  } catch (a4) {
    const i4 = a4;
    return i4 instanceof U ? K(i4) : G2(JSON.stringify(await z3(e7, r6, i4)));
  }
}
function G2(e7, t3 = 200) {
  return new Response(e7, { status: t3, headers: { "content-type": "application/json", "cache-control": "private, no-store" } });
}
function K(e7) {
  return G2(JSON.stringify({ type: "redirect", location: e7.location }));
}
var S3 = {};
function Ut(e7, t3, r6, n3) {
  const s6 = e7.headers.get("cookie") ?? "", o4 = (0, import_cookie.parse)(s6, { decode: (u) => u }), a4 = te(t3.pathname, n3), i4 = a4.split("/").slice(0, -1).join("/") || "/";
  if (r6) {
    const u = (0, import_cookie.parse)(s6, { decode: decodeURIComponent });
    for (const _6 of Object.keys(S3))
      S3[_6] = new Set([...S3[_6]].filter((l4) => !J(a4, l4) || _6 in u));
    for (const _6 in u)
      S3[_6] = S3[_6] ?? /* @__PURE__ */ new Set(), [...S3[_6]].some((l4) => J(a4, l4)) || S3[_6].add(i4);
  }
  const c4 = {}, f6 = { httpOnly: true, sameSite: "lax", secure: !(t3.hostname === "localhost" && t3.protocol === "http:") }, y7 = { get(u, _6) {
    const l4 = c4[u];
    if (l4 && ye(t3.hostname, l4.options.domain) && J(t3.pathname, l4.options.path))
      return l4.value;
    const d6 = _6?.decode || decodeURIComponent, m8 = (0, import_cookie.parse)(s6, { decode: d6 })[u];
    if (!r6 || m8)
      return m8;
    const E4 = /* @__PURE__ */ new Set([...S3[u] ?? []]);
    l4 && E4.add(l4.options.path ?? i4), E4.size > 0 && console.warn(`Cookie with name '${u}' was not found at path '${t3.pathname}', but a cookie with that name exists at these paths: '${[...E4].join("', '")}'. Did you mean to set its 'path' to '/' instead?`);
  }, set(u, _6, l4 = {}) {
    let d6 = l4.path ?? i4;
    if (c4[u] = { name: u, value: _6, options: { ...f6, ...l4, path: d6 } }, r6)
      if (S3[u] = S3[u] ?? /* @__PURE__ */ new Set(), _6)
        S3[u].add(d6);
      else {
        if (!S3[u].has(d6) && S3[u].size > 0) {
          const p6 = `'${Array.from(S3[u]).join("', '")}'`;
          console.warn(`Trying to delete cookie '${u}' at path '${d6}', but a cookie with that name only exists at these paths: ${p6}.`);
        }
        S3[u].delete(d6);
      }
  }, delete(u, _6 = {}) {
    y7.set(u, "", { ..._6, maxAge: 0 });
  }, serialize(u, _6, l4) {
    return (0, import_cookie.serialize)(u, _6, { ...f6, ...l4 });
  } };
  function k6(u, _6) {
    const l4 = { ...o4 };
    for (const d6 in c4) {
      const p6 = c4[d6];
      if (!ye(u.hostname, p6.options.domain) || !J(u.pathname, p6.options.path))
        continue;
      const m8 = p6.options.encode || encodeURIComponent;
      l4[p6.name] = m8(p6.value);
    }
    if (_6) {
      const d6 = (0, import_cookie.parse)(_6, { decode: (p6) => p6 });
      for (const p6 in d6)
        l4[p6] = d6[p6];
    }
    return Object.entries(l4).map(([d6, p6]) => `${d6}=${p6}`).join("; ");
  }
  return { cookies: y7, new_cookies: c4, get_cookie_header: k6 };
}
function ye(e7, t3) {
  if (!t3)
    return true;
  const r6 = t3[0] === "." ? t3.slice(1) : t3;
  return e7 === r6 ? true : e7.endsWith("." + r6);
}
function J(e7, t3) {
  if (!t3)
    return true;
  const r6 = t3.endsWith("/") ? t3.slice(0, -1) : t3;
  return e7 === r6 ? true : e7.startsWith(r6 + "/");
}
function zt(e7, t3) {
  for (const r6 of t3) {
    const { name: n3, value: s6, options: o4 } = r6;
    e7.append("set-cookie", (0, import_cookie.serialize)(n3, s6, o4));
  }
}
function Nt({ event: e7, options: t3, state: r6, get_cookie_header: n3 }) {
  return async (s6, o4) => {
    const a4 = ge(s6, o4, e7.url), i4 = o4?.body;
    let c4 = (s6 instanceof Request ? s6.mode : o4?.mode) ?? "cors", f6 = (s6 instanceof Request ? s6.credentials : o4?.credentials) ?? "same-origin";
    return await t3.hooks.handleFetch({ event: e7, request: a4, fetch: async (y7, k6) => {
      const u = ge(y7, k6, e7.url), _6 = new URL(u.url);
      if (u.headers.has("origin") || u.headers.set("origin", e7.url.origin), y7 !== a4 && (c4 = (y7 instanceof Request ? y7.mode : k6?.mode) ?? "cors", f6 = (y7 instanceof Request ? y7.credentials : k6?.credentials) ?? "same-origin"), (u.method === "GET" || u.method === "HEAD") && (c4 === "no-cors" && _6.origin !== e7.url.origin || _6.origin === e7.url.origin) && u.headers.delete("origin"), _6.origin !== e7.url.origin) {
        if (`.${_6.hostname}`.endsWith(`.${e7.url.hostname}`) && f6 !== "omit") {
          const j3 = n3(_6, u.headers.get("cookie"));
          j3 && u.headers.set("cookie", j3);
        }
        let b6 = await fetch(u);
        return c4 === "no-cors" && (b6 = new Response("", { status: b6.status, statusText: b6.statusText, headers: b6.headers })), b6;
      }
      let l4;
      const d6 = t3.paths.assets || t3.paths.base, p6 = decodeURIComponent(_6.pathname), m8 = (p6.startsWith(d6) ? p6.slice(d6.length) : p6).slice(1), E4 = `${m8}/index.html`, h3 = t3.manifest.assets.has(m8), g6 = t3.manifest.assets.has(E4);
      if (h3 || g6) {
        const b6 = h3 ? m8 : E4;
        if (t3.read) {
          const j3 = h3 ? t3.manifest.mimeTypes[m8.slice(m8.lastIndexOf("."))] : "text/html";
          return new Response(t3.read(b6), { headers: j3 ? { "content-type": j3 } : {} });
        }
        return await fetch(u);
      }
      if (f6 !== "omit") {
        const b6 = n3(_6, u.headers.get("cookie"));
        b6 && u.headers.set("cookie", b6);
        const j3 = e7.request.headers.get("authorization");
        j3 && !u.headers.has("authorization") && u.headers.set("authorization", j3);
      }
      if (i4 && typeof i4 != "string" && !ArrayBuffer.isView(i4))
        throw new Error("Request body must be a string or TypedArray");
      u.headers.has("accept") || u.headers.set("accept", "*/*"), u.headers.has("accept-language") || u.headers.set("accept-language", e7.request.headers.get("accept-language")), l4 = await Fe(u, t3, r6);
      const R5 = l4.headers.get("set-cookie");
      if (R5)
        for (const b6 of le.splitCookiesString(R5)) {
          const { name: j3, value: O4, ...T6 } = le.parseString(b6);
          e7.cookies.set(j3, O4, T6);
        }
      return l4;
    } });
  };
}
function ge(e7, t3, r6) {
  return e7 instanceof Request ? e7 : new Request(typeof e7 == "string" ? new URL(e7, r6) : e7, t3);
}
function ae(e7) {
  const t3 = new Set(e7);
  function r6(n3, s6) {
    if (n3) {
      for (const o4 in n3)
        if (o4[0] !== "_" && !t3.has(o4)) {
          const a4 = e7.join(", ");
          throw new Error(`Invalid export '${o4}'${s6 ? ` in ${s6}` : ""} (valid exports are ${a4}, or anything with a '_' prefix)`);
        }
    }
  }
  return r6;
}
var Gt = ae(["load", "prerender", "csr", "ssr", "trailingSlash"]);
var Bt = ae(["load", "prerender", "csr", "ssr", "actions", "trailingSlash"]);
var Ft = ae(["GET", "POST", "PATCH", "PUT", "DELETE", "prerender", "trailingSlash"]);
var we = ({ html: e7 }) => e7;
var be = () => false;
var ke = ({ type: e7 }) => e7 === "js" || e7 === "css";
async function Fe(e7, t3, r6) {
  let n3 = new URL(e7.url);
  if (t3.csrf.check_origin && e7.method === "POST" && e7.headers.get("origin") !== n3.origin && xe(e7)) {
    const d6 = se(403, `Cross-site ${e7.method} form submissions are forbidden`);
    return e7.headers.get("accept") === "application/json" ? Pe(d6.body, { status: d6.status }) : new Response(d6.body.message, { status: d6.status });
  }
  let s6;
  try {
    s6 = rt(n3.pathname);
  } catch {
    return new Response("Malformed URI", { status: 400 });
  }
  let o4 = null, a4 = {};
  if (t3.paths.base && !r6.prerendering?.fallback) {
    if (!s6.startsWith(t3.paths.base))
      return new Response("Not found", { status: 404 });
    s6 = s6.slice(t3.paths.base.length) || "/";
  }
  const i4 = $e(s6);
  let c4;
  if (i4 && (s6 = de(s6) || "/", n3.pathname = de(n3.pathname) || "/", c4 = n3.searchParams.get(_e2)?.split("_").map(Boolean), n3.searchParams.delete(_e2)), !r6.prerendering?.fallback) {
    const l4 = await t3.manifest._.matchers();
    for (const d6 of t3.manifest._.routes) {
      const p6 = d6.pattern.exec(s6);
      if (!p6)
        continue;
      const m8 = qt(p6, d6.params, l4);
      if (m8) {
        o4 = d6, a4 = nt(m8);
        break;
      }
    }
  }
  let f6;
  const y7 = {}, k6 = { cookies: null, fetch: null, getClientAddress: r6.getClientAddress || (() => {
    throw new Error("@sveltejs/adapter-cloudflare does not specify getClientAddress. Please raise an issue");
  }), locals: {}, params: a4, platform: r6.platform, request: e7, route: { id: o4?.id ?? null }, setHeaders: (l4) => {
    for (const d6 in l4) {
      const p6 = d6.toLowerCase(), m8 = l4[d6];
      if (p6 === "set-cookie")
        throw new Error("Use `event.cookies.set(name, value, options)` instead of `event.setHeaders` to set cookies");
      if (p6 in y7)
        throw new Error(`"${d6}" header is already set`);
      y7[p6] = m8, r6.prerendering && p6 === "cache-control" && (r6.prerendering.cache = m8);
    }
  }, url: n3, isDataRequest: i4 };
  let u = { transformPageChunk: we, filterSerializedResponseHeaders: be, preload: ke };
  try {
    if (o4 && !i4) {
      if (o4.page) {
        const h3 = await Promise.all([...o4.page.layouts.map((g6) => g6 == null ? g6 : t3.manifest._.nodes[g6]()), t3.manifest._.nodes[o4.page.leaf]()]);
        f6 = P(h3, "trailingSlash");
      } else
        o4.endpoint && (f6 = (await o4.endpoint()).trailingSlash);
      const E4 = te(n3.pathname, f6 ?? "never");
      if (E4 !== n3.pathname && !r6.prerendering?.fallback)
        return new Response(void 0, { status: 301, headers: { "x-sveltekit-normalize": "1", location: (E4.startsWith("//") ? n3.origin + E4 : E4) + (n3.search === "?" ? "" : n3.search) } });
    }
    const { cookies: l4, new_cookies: d6, get_cookie_header: p6 } = Ut(e7, n3, t3.dev, f6 ?? "never");
    k6.cookies = l4, k6.fetch = Nt({ event: k6, options: t3, state: r6, get_cookie_header: p6 }), r6.prerendering && !r6.prerendering.fallback && Re(n3);
    const m8 = await t3.hooks.handle({ event: k6, resolve: (E4, h3) => _6(E4, h3).then((g6) => {
      for (const R5 in y7) {
        const b6 = y7[R5];
        g6.headers.set(R5, b6);
      }
      return zt(g6.headers, Object.values(d6)), r6.prerendering && E4.route.id !== null && g6.headers.set("x-sveltekit-routeid", encodeURI(E4.route.id)), g6;
    }) });
    if (m8.status === 200 && m8.headers.has("etag")) {
      let E4 = e7.headers.get("if-none-match");
      E4?.startsWith('W/"') && (E4 = E4.substring(2));
      const h3 = m8.headers.get("etag");
      if (E4 === h3) {
        const g6 = new Headers({ etag: h3 });
        for (const R5 of ["cache-control", "content-location", "date", "expires", "vary", "set-cookie"]) {
          const b6 = m8.headers.get(R5);
          b6 && g6.set(R5, b6);
        }
        return new Response(void 0, { status: 304, headers: g6 });
      }
    }
    if (i4 && m8.status >= 300 && m8.status <= 308) {
      const E4 = m8.headers.get("location");
      if (E4)
        return K(new U(m8.status, E4));
    }
    return m8;
  } catch (l4) {
    return l4 instanceof U ? i4 ? K(l4) : B(l4.status, l4.location) : await ue(k6, t3, l4);
  }
  async function _6(l4, d6) {
    try {
      if (d6) {
        if ("ssr" in d6)
          throw new Error("ssr has been removed, set it in the appropriate +layout.js instead. See the PR for more information: https://github.com/sveltejs/kit/pull/6197");
        u = { transformPageChunk: d6.transformPageChunk || we, filterSerializedResponseHeaders: d6.filterSerializedResponseHeaders || be, preload: d6.preload || ke };
      }
      if (r6.prerendering?.fallback)
        return await I2({ event: l4, options: t3, state: r6, page_config: { ssr: false, csr: true }, status: 200, error: null, branch: [], fetched: [], resolve_opts: u });
      if (o4) {
        let p6;
        if (i4)
          p6 = await Ct(l4, o4, t3, r6, c4, f6 ?? "never");
        else if (o4.endpoint && (!o4.page || ut(l4)))
          p6 = await dt(l4, await o4.endpoint(), r6);
        else if (o4.page)
          p6 = await Tt(l4, o4, o4.page, t3, r6, u);
        else
          throw new Error("This should never happen");
        return p6;
      }
      return r6.initiator === ve ? new Response("Internal Server Error", { status: 500 }) : r6.initiator ? r6.prerendering ? new Response("not found", { status: 404 }) : await fetch(e7) : await Be({ event: l4, options: t3, state: r6, status: 404, error: new Error(`Not found: ${l4.url.pathname}`), resolve_opts: u });
    } catch (p6) {
      return await ue(l4, t3, p6);
    } finally {
      l4.cookies.set = () => {
        throw new Error("Cannot use `cookies.set(...)` after the response has been generated");
      }, l4.setHeaders = () => {
        throw new Error("Cannot use `setHeaders(...)` after the response has been generated");
      };
    }
  }
}
var Q = "";
var Me = "";
function Ve(e7) {
  Q = e7.base, Me = e7.assets || Q;
}
var Ht = ({ head: e7, body: t3, assets: r6, nonce: n3 }) => `<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="` + r6 + `/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    ` + e7 + `
  </head>
  <body>
    <div>` + t3 + `</div>
  </body>
</html>
`;
var It = ({ status: e7, message: t3 }) => `<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<title>` + t3 + `</title>

		<style>
			body {
				font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
					Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
				display: flex;
				align-items: center;
				justify-content: center;
				height: 100vh;
			}

			.error {
				display: flex;
				align-items: center;
				max-width: 32rem;
				margin: 0 1rem;
			}

			.status {
				font-weight: 200;
				font-size: 3rem;
				line-height: 1;
				position: relative;
				top: -0.05rem;
			}

			.message {
				border-left: 1px solid #ccc;
				padding: 0 0 0 1rem;
				margin: 0 0 0 1rem;
				min-height: 2.5rem;
				display: flex;
				align-items: center;
			}

			.message h1 {
				font-weight: 400;
				font-size: 1em;
				margin: 0;
			}
		</style>
	</head>
	<body>
		<div class="error">
			<span class="status">` + e7 + `</span>
			<div class="message">
				<h1>` + t3 + `</h1>
			</div>
		</div>
	</body>
</html>
`;
var Ye = null;
Ve({ base: "", assets: "" });
var Vt = class {
  constructor(t3) {
    this.options = { csp: { mode: "auto", directives: { "upgrade-insecure-requests": false, "block-all-mixed-content": false }, reportOnly: { "upgrade-insecure-requests": false, "block-all-mixed-content": false } }, csrf: { check_origin: true }, dev: false, embedded: false, handle_error: (r6, n3) => this.options.hooks.handleError({ error: r6, event: n3 }) ?? { message: n3.route.id != null ? "Internal Error" : "Not Found" }, hooks: null, manifest: t3, paths: { base: Q, assets: Me }, public_env: {}, read: Ye, root: Ze, service_worker: true, app_template: Ht, app_template_contains_nonce: false, error_template: It, version: "1671751967977" };
  }
  async init({ env: t3 }) {
    const r6 = Object.entries(t3);
    Object.fromEntries(r6.filter(([s6]) => !s6.startsWith("PUBLIC_")));
    const n3 = Object.fromEntries(r6.filter(([s6]) => s6.startsWith("PUBLIC_")));
    if (this.options.public_env = n3, !this.options.hooks) {
      const s6 = await Promise.resolve().then(() => (init_hooks_server(), hooks_server_exports));
      this.options.hooks = { handle: s6.handle || (({ event: o4, resolve: a4 }) => a4(o4)), handleError: s6.handleError || (({ error: o4 }) => console.error(o4.stack)), handleFetch: s6.handleFetch || (({ request: o4, fetch: a4 }) => a4(o4)) };
    }
  }
  async respond(t3, r6 = {}) {
    if (!(t3 instanceof Request))
      throw new Error("The first argument to server.respond must be a Request object. See https://github.com/sveltejs/kit/pull/3384 for details");
    return Fe(t3, this.options, r6);
  }
};

// .svelte-kit/cloudflare-tmp/manifest.js
var manifest = {
  appDir: "_app",
  appPath: "_app",
  assets: /* @__PURE__ */ new Set(["dropzone.css", "facepalm.gif", "favicon.png", "icons/apple-icon-180.png", "icons/apple-splash-1125-2436.jpg", "icons/apple-splash-1136-640.jpg", "icons/apple-splash-1170-2532.jpg", "icons/apple-splash-1179-2556.jpg", "icons/apple-splash-1242-2208.jpg", "icons/apple-splash-1242-2688.jpg", "icons/apple-splash-1284-2778.jpg", "icons/apple-splash-1290-2796.jpg", "icons/apple-splash-1334-750.jpg", "icons/apple-splash-1536-2048.jpg", "icons/apple-splash-1620-2160.jpg", "icons/apple-splash-1668-2224.jpg", "icons/apple-splash-1668-2388.jpg", "icons/apple-splash-1792-828.jpg", "icons/apple-splash-2048-1536.jpg", "icons/apple-splash-2048-2732.jpg", "icons/apple-splash-2160-1620.jpg", "icons/apple-splash-2208-1242.jpg", "icons/apple-splash-2224-1668.jpg", "icons/apple-splash-2388-1668.jpg", "icons/apple-splash-2436-1125.jpg", "icons/apple-splash-2532-1170.jpg", "icons/apple-splash-2556-1179.jpg", "icons/apple-splash-2688-1242.jpg", "icons/apple-splash-2732-2048.jpg", "icons/apple-splash-2778-1284.jpg", "icons/apple-splash-2796-1290.jpg", "icons/apple-splash-640-1136.jpg", "icons/apple-splash-750-1334.jpg", "icons/apple-splash-828-1792.jpg", "icons/logotest.png", "icons/manifest-icon-192.maskable.png", "icons/manifest-icon-512.maskable.png", "login-bg-video-blurred.mp4", "manifest.json", "phone.svg", "reviews/review-ben-bare.webp", "reviews/review-efe-bare.webp", "reviews/review-miranda-bare.webp", "reviews/review-paola-bare.webp", "reviews/review-rob-bare.webp", "reviews/review-tj-bare.webp", "reviews/review-zaara-bare.webp", "robots.txt", "safari-share-icon.png", "star.webp", "service-worker.js"]),
  mimeTypes: { ".css": "text/css", ".gif": "image/gif", ".png": "image/png", ".jpg": "image/jpeg", ".mp4": "video/mp4", ".json": "application/json", ".svg": "image/svg+xml", ".webp": "image/webp", ".txt": "text/plain" },
  _: {
    entry: { "file": "_app/immutable/start-67a15644.js", "imports": ["_app/immutable/start-67a15644.js", "_app/immutable/chunks/index-06adba90.js", "_app/immutable/chunks/singletons-d150de80.js", "_app/immutable/chunks/index-bc04d146.js", "_app/immutable/chunks/preload-helper-41c905a7.js"], "stylesheets": [], "fonts": [] },
    nodes: [
      () => Promise.resolve().then(() => (init__(), __exports)),
      () => Promise.resolve().then(() => (init__2(), __exports2)),
      () => Promise.resolve().then(() => (init__3(), __exports3)),
      () => Promise.resolve().then(() => (init__4(), __exports4)),
      () => Promise.resolve().then(() => (init__5(), __exports5)),
      () => Promise.resolve().then(() => (init__6(), __exports6)),
      () => Promise.resolve().then(() => (init__7(), __exports7)),
      () => Promise.resolve().then(() => (init__8(), __exports8)),
      () => Promise.resolve().then(() => (init__9(), __exports9)),
      () => Promise.resolve().then(() => (init__10(), __exports10)),
      () => Promise.resolve().then(() => (init__11(), __exports11)),
      () => Promise.resolve().then(() => (init__12(), __exports12)),
      () => Promise.resolve().then(() => (init__13(), __exports13)),
      () => Promise.resolve().then(() => (init__14(), __exports14)),
      () => Promise.resolve().then(() => (init__15(), __exports15))
    ],
    routes: [
      {
        id: "/",
        pattern: /^\/$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 2 },
        endpoint: null
      },
      {
        id: "/classroomA",
        pattern: /^\/classroomA\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 4 },
        endpoint: null
      },
      {
        id: "/classroom",
        pattern: /^\/classroom\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 3 },
        endpoint: null
      },
      {
        id: "/faq",
        pattern: /^\/faq\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 5 },
        endpoint: null
      },
      {
        id: "/homework",
        pattern: /^\/homework\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 6 },
        endpoint: null
      },
      {
        id: "/katex",
        pattern: /^\/katex\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 7 },
        endpoint: null
      },
      {
        id: "/login",
        pattern: /^\/login\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 8 },
        endpoint: null
      },
      {
        id: "/mathjax",
        pattern: /^\/mathjax\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 10 },
        endpoint: null
      },
      {
        id: "/math",
        pattern: /^\/math\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 9 },
        endpoint: null
      },
      {
        id: "/physics",
        pattern: /^\/physics\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 11 },
        endpoint: null
      },
      {
        id: "/plans",
        pattern: /^\/plans\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 12 },
        endpoint: null
      },
      {
        id: "/samplequiz",
        pattern: /^\/samplequiz\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 13 },
        endpoint: null
      },
      {
        id: "/stripe",
        pattern: /^\/stripe\/?$/,
        params: [],
        page: { layouts: [0], errors: [1], leaf: 14 },
        endpoint: null
      }
    ],
    matchers: async () => {
      return {};
    }
  }
};
var prerendered = /* @__PURE__ */ new Set(["/classroom"]);

// .svelte-kit/cloudflare-tmp/_worker.js
async function e6(e32, t22) {
  let n22 = "string" != typeof t22 && "HEAD" === t22.method;
  n22 && (t22 = new Request(t22, { method: "GET" }));
  let a22 = await e32.match(t22);
  return n22 && a22 && (a22 = new Response(null, a22)), a22;
}
function t2(e32, t22, n22, o22) {
  return ("string" == typeof t22 || "GET" === t22.method) && a3(n22) && (n22.headers.has("Set-Cookie") && (n22 = new Response(n22.body, n22)).headers.append("Cache-Control", "private=Set-Cookie"), o22.waitUntil(e32.put(t22, n22.clone()))), n22;
}
var n2 = /* @__PURE__ */ new Set([200, 203, 204, 300, 301, 404, 405, 410, 414, 501]);
function a3(e32) {
  if (!n2.has(e32.status) || ~(e32.headers.get("Vary") || "").indexOf("*"))
    return false;
  let t22 = e32.headers.get("Cache-Control") || "";
  return !/(private|no-cache|no-store)/i.test(t22);
}
function o3(n22) {
  return async function(a22, o22) {
    let r22 = await e6(n22, a22);
    if (r22)
      return r22;
    o22.defer((e32) => {
      t2(n22, a22, e32, o22);
    });
  };
}
var s5 = caches.default;
var e22 = t2.bind(0, s5);
var c3 = e6.bind(0, s5);
var r5 = o3.bind(0, s5);
var server = new Vt(manifest);
var app_path = `/${manifest.appPath}/`;
var worker = {
  async fetch(req, env, context) {
    await server.init({ env });
    let pragma = req.headers.get("cache-control") || "";
    let res = !pragma.includes("no-cache") && await c3(req);
    if (res)
      return res;
    let { pathname } = new URL(req.url);
    if (pathname.startsWith(app_path)) {
      res = await env.ASSETS.fetch(req);
      if (!res.ok)
        return res;
      const cache_control = pathname.startsWith(app_path + "immutable/") ? "public, immutable, max-age=31536000" : "no-cache";
      res = new Response(res.body, {
        headers: {
          "cache-control": cache_control,
          "content-type": res.headers.get("content-type"),
          "x-robots-tag": "noindex"
        }
      });
    } else {
      pathname = pathname.replace(/\/$/, "") || "/";
      let file16 = pathname.substring(1);
      try {
        file16 = decodeURIComponent(file16);
      } catch (err) {
      }
      if (manifest.assets.has(file16) || manifest.assets.has(file16 + "/index.html") || prerendered.has(pathname)) {
        res = await env.ASSETS.fetch(req);
      } else {
        res = await server.respond(req, {
          platform: { env, context, caches },
          getClientAddress() {
            return req.headers.get("cf-connecting-ip");
          }
        });
      }
    }
    pragma = res.headers.get("cache-control");
    return pragma && res.ok ? e22(req, res, context) : res;
  }
};
var worker_default = worker;
export {
  worker_default as default
};
/*! Bundled license information:

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

@firebase/util/dist/index.esm2017.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)

@firebase/component/dist/esm/index.esm2017.js:
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)

@firebase/logger/dist/esm/index.esm2017.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)

@firebase/app/dist/esm/index.esm2017.js:
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)

firebase/app/dist/esm/index.esm.js:
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)

@firebase/auth/dist/esm2017/index-c6def6da.js:
  (**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2021 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)

@firebase/firestore/dist/lite/index.browser.esm2017.js:
  (**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *)
  (**
  * @license
  * Copyright 2018 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2018 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2022 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)

@firebase/functions/dist/index.esm2017.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2017 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2019 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
  (**
   * @license
   * Copyright 2020 Google LLC
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *   http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *)
*/
//# sourceMappingURL=_worker.js.map
