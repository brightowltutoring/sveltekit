import{S as W,i as G,s as K,k as m,W as L,l as _,m as y,h as c,$ as V,n as C,F as a,A as R,o as N,v as Q,a as T,q as i,w as U,c as B,r as l,x as X,b as z,f as Y,I as Z,t as tt,y as et,J as at}from"../../../chunks/index-64e3950e.js";import{a as st}from"../../../chunks/index-5c4785e5.js";import{e as rt}from"../../../chunks/index-0d9a5c71.js";function nt(o){let e,u,t,f;return{c(){e=m("script"),t=m("script"),this.h()},l(p){const h=L('[data-svelte="svelte-vs9z3k"]',document.head);e=_(h,"SCRIPT",{src:!0});var v=y(e);v.forEach(c),t=_(h,"SCRIPT",{id:!0,src:!0});var x=y(t);x.forEach(c),h.forEach(c),this.h()},h(){V(e.src,u="https://polyfill.io/v3/polyfill.min.js?features=es6")||C(e,"src",u),C(t,"id","MathJax-script"),t.async=!0,V(t.src,f="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js")||C(t,"src",f)},m(p,h){a(document.head,e),a(document.head,t)},p:R,i:R,o:R,d(p){c(e),c(t)}}}function it(){MathJax={loader:{load:["[tex]/physics","[tex]/cancel"]},tex:{inlineMath:[["$","$"],["\\(","\\)"]],packages:{"[+]":["physics","cancel"]}},options:{renderActions:{addMenu:[]}},svg:{fontCache:"global"}}}function lt(o){return N(()=>{it()}),[]}class ct extends W{constructor(e){super(),G(this,e,lt,nt,K,{})}}function ot(o){let e,u,t,f,p,h,v,x,k,g,b,w,n,j,P="{x}",M,D=3+"",J,A,F="{2}",S,H=3+"",E,I,q,$;return e=new ct({}),{c(){Q(e.$$.fragment),u=T(),t=m("div"),f=i("Mathjax is alright in vanilla html/js but flickers when using component frameworks (like this here svelte). Additionally reloads crashes the mathjax. Additionally expressions like "),p=i(o[0]),h=i(` aren't processed properly since svelte views the curly-braces-around-x as it's notation for rendering JS variable "x" in the html. To get it to work have to replace x with curly backticks expression `),v=i(O),x=i(` within the code
	`),k=m("br"),g=T(),b=m("br"),w=T(),n=m("div"),j=i("$$e^x = \\frac"),M=i(P),J=i(D),A=i(`$$ 
		$$e^x = \\frac`),S=i(F),E=i(H),I=i("$$")},l(s){U(e.$$.fragment,s),u=B(s),t=_(s,"DIV",{});var r=y(t);f=l(r,"Mathjax is alright in vanilla html/js but flickers when using component frameworks (like this here svelte). Additionally reloads crashes the mathjax. Additionally expressions like "),p=l(r,o[0]),h=l(r,` aren't processed properly since svelte views the curly-braces-around-x as it's notation for rendering JS variable "x" in the html. To get it to work have to replace x with curly backticks expression `),v=l(r,O),x=l(r,` within the code
	`),k=_(r,"BR",{}),g=B(r),b=_(r,"BR",{}),w=B(r),n=_(r,"DIV",{});var d=y(n);j=l(d,"$$e^x = \\frac"),M=l(d,P),J=l(d,D),A=l(d,`$$ 
		$$e^x = \\frac`),S=l(d,F),E=l(d,H),I=l(d,"$$"),d.forEach(c),r.forEach(c)},m(s,r){X(e,s,r),z(s,u,r),z(s,t,r),a(t,f),a(t,p),a(t,h),a(t,v),a(t,x),a(t,k),a(t,g),a(t,b),a(t,w),a(t,n),a(n,j),a(n,M),a(n,J),a(n,A),a(n,S),a(n,E),a(n,I),$=!0},p(s,[r]){o=s},i(s){$||(Y(e.$$.fragment,s),q||Z(()=>{q=at(n,st,{duration:1500,easing:rt}),q.start()}),$=!0)},o(s){tt(e.$$.fragment,s),$=!1},d(s){et(e,s),s&&c(u),s&&c(t)}}}let O=" `{x}` ";function ht(o){return["\\frac{x}{2}"]}class pt extends W{constructor(e){super(),G(this,e,ht,ot,K,{})}}export{pt as default};
