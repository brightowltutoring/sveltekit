import{S as U,i as X,s as Y,k as f,W as Z,l as m,m as y,h as c,$ as G,n as B,F as s,A as P,o as tt,_ as et,v as at,a as K,q as n,w as st,c as L,r as l,x as rt,b as N,f as nt,I as lt,t as it,y as ct,J as ot}from"../../../chunks/index-c5b536bd.js";import{a as dt}from"../../../chunks/index-82c9a945.js";import{e as ht}from"../../../chunks/index-e8bbf8b4.js";const{document:D}=et;function ut(o){let e,h,t,u;return{c(){e=f("script"),t=f("script"),this.h()},l(p){const d=Z('[data-svelte="svelte-vs9z3k"]',D.head);e=m(d,"SCRIPT",{src:!0});var _=y(e);_.forEach(c),t=m(d,"SCRIPT",{id:!0,src:!0});var v=y(t);v.forEach(c),d.forEach(c),this.h()},h(){G(e.src,h="https://polyfill.io/v3/polyfill.min.js?features=es6")||B(e,"src",h),B(t,"id","MathJax-script"),t.async=!0,G(t.src,u="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js")||B(t,"src",u)},m(p,d){s(D.head,e),s(D.head,t)},p:P,i:P,o:P,d(p){c(e),c(t)}}}function pt(){MathJax={loader:{load:["[tex]/physics","[tex]/cancel"]},tex:{inlineMath:[["$","$"],["\\(","\\)"]],packages:{"[+]":["physics","cancel"]}},options:{renderActions:{addMenu:[]}},svg:{fontCache:"global"}}}function ft(o){return tt(()=>{let e=document.createElement("script");e.src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js",document.head.append(e),e.onload=()=>{pt()}}),[]}class mt extends U{constructor(e){super(),X(this,e,ft,ut,Y,{})}}function _t(o){let e,h,t,u,p,d,_,v,k,g,b,j,F=2+"",w,H=3+"",M,J,V=2+"",A,z=3+"",E,S,i,I,O="{x}",q,W=3+"",C,R,T,$;return e=new mt({}),{c(){at(e.$$.fragment),h=K(),t=f("div"),u=n("Mathjax is alright in vanilla html/js but flickers when using component frameworks (like this here svelte). Additionally reloads crashes the mathjax. Additionally expressions like "),p=n(o[0]),d=n(` aren't processed properly since svelte views the curly-braces-around-x as it's notation for rendering JS variable "x" in the html. To get it to work have to replace x with curly backticks expression `),_=n(Q),v=n(` within the code
	`),k=f("br"),g=K(),b=f("br"),j=n(`


	$e^x = \\frac`),w=n(F),M=n(H),J=n(`$
	$$e^x = \\frac`),A=n(V),E=n(z),S=n(`$$

	`),i=f("div"),I=n("$$e^x = \\frac"),q=n(O),C=n(W),R=n("$$")},l(r){st(e.$$.fragment,r),h=L(r),t=m(r,"DIV",{});var a=y(t);u=l(a,"Mathjax is alright in vanilla html/js but flickers when using component frameworks (like this here svelte). Additionally reloads crashes the mathjax. Additionally expressions like "),p=l(a,o[0]),d=l(a,` aren't processed properly since svelte views the curly-braces-around-x as it's notation for rendering JS variable "x" in the html. To get it to work have to replace x with curly backticks expression `),_=l(a,Q),v=l(a,` within the code
	`),k=m(a,"BR",{}),g=L(a),b=m(a,"BR",{}),j=l(a,`


	$e^x = \\frac`),w=l(a,F),M=l(a,H),J=l(a,`$
	$$e^x = \\frac`),A=l(a,V),E=l(a,z),S=l(a,`$$

	`),i=m(a,"DIV",{});var x=y(i);I=l(x,"$$e^x = \\frac"),q=l(x,O),C=l(x,W),R=l(x,"$$"),x.forEach(c),a.forEach(c)},m(r,a){rt(e,r,a),N(r,h,a),N(r,t,a),s(t,u),s(t,p),s(t,d),s(t,_),s(t,v),s(t,k),s(t,g),s(t,b),s(t,j),s(t,w),s(t,M),s(t,J),s(t,A),s(t,E),s(t,S),s(t,i),s(i,I),s(i,q),s(i,C),s(i,R),$=!0},p(r,[a]){o=r},i(r){$||(nt(e.$$.fragment,r),T||lt(()=>{T=ot(i,dt,{duration:1500,easing:ht}),T.start()}),$=!0)},o(r){it(e.$$.fragment,r),$=!1},d(r){ct(e,r),r&&c(h),r&&c(t)}}}let Q=" `{x}` ";function vt(o){return["\\frac{x}{2}"]}class kt extends U{constructor(e){super(),X(this,e,vt,_t,Y,{})}}export{kt as default};
