import{S as N,i as R,s as z,v as D,a as H,k as M,q as l,w as G,c as T,l as J,m as C,r,h as c,x as I,b as u,F as a,A as K,f as L,t as O,y as Q}from"../../../chunks/index-c5b536bd.js";import{M as U}from"../../../chunks/MathJax-5f179e66.js";function V(f){let n,p,i,x,$,d,_,v,k,h,s,y,P=2+"",w,q=3+"",b,j,B="{x}",g,E=3+"",A,S,m;return n=new U({}),{c(){D(n.$$.fragment),p=H(),i=M("p"),x=l("Mathjax is alright in vanilla html/js but flickers when using component frameworks (like this here svelte). Additionally reloads crashes the mathjax. Additionally expressions like "),$=l(f[0]),d=l(` aren't processed properly since svelte views the curly-braces-around-x as it's notation for rendering JS variable "x" in the html. To get it to work have to replace x with curly backticks expression `),_=l(F),v=l(` within the code
	`),k=M("br"),h=H(),s=M("span"),y=l("$$e^x = \\frac"),w=l(P),b=l(q),j=l(`$$
	$$e^x = \\frac`),g=l(B),A=l(E),S=l("$$")},l(e){G(n.$$.fragment,e),p=T(e),i=J(e,"P",{});var t=C(i);x=r(t,"Mathjax is alright in vanilla html/js but flickers when using component frameworks (like this here svelte). Additionally reloads crashes the mathjax. Additionally expressions like "),$=r(t,f[0]),d=r(t,` aren't processed properly since svelte views the curly-braces-around-x as it's notation for rendering JS variable "x" in the html. To get it to work have to replace x with curly backticks expression `),_=r(t,F),v=r(t,` within the code
	`),k=J(t,"BR",{}),t.forEach(c),h=T(e),s=J(e,"SPAN",{});var o=C(s);y=r(o,"$$e^x = \\frac"),w=r(o,P),b=r(o,q),j=r(o,`$$
	$$e^x = \\frac`),g=r(o,B),A=r(o,E),S=r(o,"$$"),o.forEach(c)},m(e,t){I(n,e,t),u(e,p,t),u(e,i,t),a(i,x),a(i,$),a(i,d),a(i,_),a(i,v),a(i,k),u(e,h,t),u(e,s,t),a(s,y),a(s,w),a(s,b),a(s,j),a(s,g),a(s,A),a(s,S),m=!0},p:K,i(e){m||(L(n.$$.fragment,e),m=!0)},o(e){O(n.$$.fragment,e),m=!1},d(e){Q(n,e),e&&c(p),e&&c(i),e&&c(h),e&&c(s)}}}let F=" `{x}` ";function W(f){return["\\frac{x}{2}"]}class Z extends N{constructor(n){super(),R(this,n,W,V,z,{})}}export{Z as default};
