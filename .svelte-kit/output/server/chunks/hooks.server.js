function g(...r){const n=r.length;return n?({event:e,resolve:a})=>{return s(0,e,{});function s(o,f,c){const m=r[o];return m({event:f,resolve:(u,i)=>{const l=async({html:t,done:p})=>(i?.transformPageChunk&&(t=await i.transformPageChunk({html:t,done:p})??""),c?.transformPageChunk&&(t=await c.transformPageChunk({html:t,done:p})??""),t);return o<n-1?s(o+1,u,{transformPageChunk:l}):a(u,{transformPageChunk:l})}})}}:({event:e,resolve:a})=>a(e)}const h=new Map([["screenshare","classroom"]]);async function y({event:r,resolve:n}){for(const[e,a]of h)if(r.url.pathname===`/${e}`)return Response.redirect(`${r.url.origin}/${a}`,301);return await n(r)}async function k({event:r,resolve:n}){function e({html:a}){return a.replace(/<link\s+rel="canonical"[^>]*>/,"").replace(/<meta\s+name="description"[^>]*>/,"").replace(/<meta\s+name="keywords"[^>]*>/,"").replace(/<meta\s+property="og:url"[^>]*>/,"").replace(/<meta\s+property="og:title"[^>]*>/,"").replace(/<meta\s+property="og:image"[^>]*>/,"").replace(/<meta\s+property="og:description"[^>]*>/,"")}return await n(r,{transformPageChunk:e})}const d=g(k,y);export{d as handle,k as metaTagFixWhenSSR,y as redirectOldUrls};
