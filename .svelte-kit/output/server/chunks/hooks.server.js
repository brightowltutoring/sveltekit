function p(...e){const a=e.length;return a?({event:n,resolve:r})=>{return l(0,n,{});function l(u,m,c){const i=e[u];return i({event:m,resolve:(o,s)=>{const f=async({html:t,done:g})=>(s!=null&&s.transformPageChunk&&(t=await s.transformPageChunk({html:t,done:g})??""),c!=null&&c.transformPageChunk&&(t=await c.transformPageChunk({html:t,done:g})??""),t);return u<a-1?l(u+1,o,{transformPageChunk:f}):r(o,{transformPageChunk:f})}})}}:({event:n,resolve:r})=>r(n)}const y=new Map([["screenshare","classroom"]]);async function h({event:e,resolve:a}){for(const[n,r]of y)if(e.url.pathname===`/${n}`)return Response.redirect(`${e.url.origin}/${r}`,301);return await a(e)}async function k({event:e,resolve:a}){return await a(e,{transformPage:({html:r})=>r.replace(/<link\s+rel="canonical"[^>]*>/,"").replace(/<meta\s+name="description"[^>]*>/,"").replace(/<meta\s+name="keywords"[^>]*>/,"").replace(/<meta\s+property="og:url"[^>]*>/,"").replace(/<meta\s+property="og:title"[^>]*>/,"").replace(/<meta\s+property="og:image"[^>]*>/,"").replace(/<meta\s+property="og:description"[^>]*>/,"")})}const d=p(h,k);export{d as handle,k as metaTagFixWhenSSR,h as redirectOldUrls};
