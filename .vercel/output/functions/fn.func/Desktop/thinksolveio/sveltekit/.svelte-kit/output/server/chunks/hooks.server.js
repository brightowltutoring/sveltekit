function m(...e){const n=e.length;return n?({event:a,resolve:r})=>{return o(0,a,{});function o(s,g,c){const f=e[s];return f({event:g,resolve:(u,i)=>{const l=async({html:t,done:p})=>(i?.transformPageChunk&&(t=await i.transformPageChunk({html:t,done:p})??""),c?.transformPageChunk&&(t=await c.transformPageChunk({html:t,done:p})??""),t);return s<n-1?o(s+1,u,{transformPageChunk:l}):r(u,{transformPageChunk:l})}})}}:({event:a,resolve:r})=>r(a)}const y={screenshare:"classroom"},h=async({event:e,resolve:n})=>{for(const[a,r]of Object.entries(y))if(e.url.pathname===`/${a}`)return Response.redirect(`${e.url.origin}/${r}`,302);return await n(e)},k=async({event:e,resolve:n})=>await n(e,{transformPageChunk:({html:r})=>r.replace(/<link\s+rel="canonical"[^>]*>/,"").replace(/<meta\s+name="description"[^>]*>/,"").replace(/<meta\s+name="keywords"[^>]*>/,"").replace(/<meta\s+property="og:url"[^>]*>/,"").replace(/<meta\s+property="og:title"[^>]*>/,"").replace(/<meta\s+property="og:image"[^>]*>/,"").replace(/<meta\s+property="og:description"[^>]*>/,"")}),d=m(h,k);export{d as handle,k as metaTagFixWhenSSR,h as redirectOldUrls};
