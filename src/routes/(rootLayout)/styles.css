/* EXPERIMENTAL WAY: ... flickers font on initial page load */
/* "@fontsource/nunito": "^4.5.12",
		"@fontsource/poppins": "^4.5.10", */
/* @import '@fontsource/nunito/200.css';
@import '@fontsource/poppins/100.css'; */

@tailwind base;
@tailwind components;
@tailwind utilities;

/* CURRENT WAY: download various .woff, .woff2 files for Nunito and Poppins and reference them below */
@font-face {
	font-family: 'Nunito';
	font-style: normal;
	font-weight: 200;
	src: local(''), url('$lib/fonts/nunito-v25-latin-200.woff2') format('woff2'),
		url('$lib/fonts/nunito-v25-latin-200.woff') format('woff');
}
@font-face {
	font-family: 'Nunito';
	font-style: bold;
	font-weight: 400;
	src: local(''), url('$lib/fonts/nunito-v25-latin-regular.woff2') format('woff2'),
		url('$lib/fonts/nunito-v25-latin-regular.woff') format('woff');
}
@font-face {
	font-family: 'Poppins';
	font-style: normal;
	font-weight: 100;
	src: local(''), url('$lib/fonts/poppins-v20-latin-100.woff2') format('woff2'),
		url('$lib/fonts/poppins-v20-latin-100.woff') format('woff');
}
@font-face {
	font-family: 'Poppins';
	font-style: bold;
	font-weight: 700;
	src: local(''), url('$lib/fonts/poppins-v20-latin-700.woff2') format('woff2'),
		url('$lib/fonts/poppins-v20-latin-700.woff') format('woff');
}

/* OLD WAY  (dec12, 2022): ... flickers on page load. Update: no longer works */
/* @import url('https://fonts.googleapis.com/css2?family=Nunito:wght@200&family=Poppins:wght@100&display=swap'); */

/* Using html instead of body here (and documentElement instead of body when referencing with classList), since flash of content persists on firefox ... this works in all cases  */
:root {
	--light: #f7f7f7;
	--dark: rgb(20, 13, 33);
}

html {
	scroll-behavior: smooth;
	background: var(--light);
	color: var(--dark);
	transition: background-color 0.2s ease;
}

html.dark-mode {
	background: var(--dark);
	color: var(--light);
}

/* on chromium browsers the existence of 'transition' in html class above results in an initial page load darkmode flicker; this hack fixes it .. but have to give 'z-10' to sections with a background video .. it appears */
html.dark-mode body {
	background-color: var(--dark);
	color: var(--light);
	transition: background-color 0.2s ease;
}

/* this is fallback when the JS version of no-scroll (in utils.ts) fails; works for some browsers */
body:has(.disableScrollOnThisPage) {
	overflow: hidden;
}

body {
	/* scroll-behavior: smooth; */
	/* -ms-overflow-style: none;  */
	/* hide scrollbar IE and Edge */

	/* overscroll-behavior-y: none; */ /* TODO: what does this do?? */

	/* --anchor: rgb(253, 148, 148); */
	/* --anchor_hover: rgb(249, 87, 87); */

	-webkit-tap-highlight-color: transparent;
	/* -webkit-tap-highlight-color: rgba(0, 0, 0, 0); */
	/* removes gray background when clicking buttons; for native app feel*/

	/* -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none; */
	user-select: none;
	/* removes user highlighting; for native app feel */
}

/* now using an tailwind npm package for tailwind for this ... easier to invoke with breakpoints */
/* Hide desktop horizontal scrollbar for navbar */
.hideScrollBar::-webkit-scrollbar {
	display: none;
	/* .. for Chrome, Safari and Opera  */
}

.hideScrollBar {
	-ms-overflow-style: none;
	/* ...for IE and Edge */
	scrollbar-width: none;
	/* ....for Firefox */
}

/* Using tailwind css version instead of this. Pro: tailwind version has intellisense when hovering the code; Con: have to define the code here in the tailwind config file */
.fadeInFromNone {
	animation: fadeInFromNone 0.8s ease;
}

@keyframes fadeInFromNone {
	0% {
		/* opacity: 0; */
		display: none;
		/* filter: blur(1.5rem); */
		transform: scale(0) rotate(30deg);
	}

	100% {
		/* opacity: 1; */
		/* filter: blur(0); */
		display: block;
		transform: scale(1) rotate(0deg);
	}
}
